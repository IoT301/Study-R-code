---
title: "Pregnancy Risk, Infant surveillance and Measurement Alliance (PRISMA)"
subtitle: "Weekly Monitoring Report"
author: 
    name: "Statistics Team"
date: today
title-block-banner-color: dark
title-block-banner: true
format:
  html:
    mainfont: Times New Roman
    html-math-method: katex
    css: styles.css
    grid:
      body-width: 1500px
    theme: 
       yeti
    toc: true
    toc-title: "Table of Contents"
    toc-location: left
    toc-depth: 2
    number-sections: true
    toc-expand: false
    embed-resources: true
    self-contained-math: true
execute: 
  echo: false
  message: false
  warning: false
  error: false
highlight-style: pygments
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-pkgs
#| code-summary: "Packages"
#| message: false
#| echo: false


# devtools::install_github("davidsjoberg/ggsankey")
# devtools::install_github("ki-tools/growthstandards")
# devtools::install_github("OnduruFred/CleanEasy")
# devtools::install_github("psyteachr/introdataviz")

library(openintro)  # for data
library(knitr)      # for tables
library(broom)      # for model summary
library(ggplot2)
library(here)
library(DiagrammeR)
library(reactable)
library(janitor)
library(ggpubr)
library(ggthemes)
library(ggcharts)
library(quarto)
library(gtsummary)
library(gt)
library(lubridate)
library(treemapify)
library(ggstatsplot)
library(ggdist)
library(ggExtra)
library(labelled)
library(CleanEasy)
#library(ggvanced)
library(pander)
library(summarytools)
library(ggtext)
library(hrbrthemes)
library(ggforce)
library(ggalluvial)
library(growthstandards)
library(tidyverse)
library(patchwork)
library(ggsankey)
#library(dlookr)

# Main Logo - PRISMA - Circle - Transparent Bg.png

```

```{r}
#| label: fig-include-figure
#| fig-cap: PRISMA Main Logo
#| out-width: "350px"
#| echo: false
knitr::include_graphics(here("Pictures","Prisma_photo.png"))
```

::: {.callout-tip title="Study start date"}
Harmonized PRISMA study was launched on $23^{rd}$ November 2022.
:::

## Harmonized PRISMA - ReMAPP Screening & Enrollment Flowchart

The figure below describes the current metrics with regard to `pre-screening`, `screening` and `enrollments`.

```{r}
#| label: fig-cascade
#| fig-cap: "Harmonized PRISMA - ReMAPP Screening & Enrollment Flowchart"
#| fig-cap-location: top
#| warning: false
#| echo: false
#| fig-height: 10
#| fig-width: 11

#interactive caption
# fig-cap: !expr glue::glue("The mean temp was {mean(airquality$Temp) %>% round()}")

ALL_PRiSMA1 <- read_rds(here("Data","Prisma-ReMAPP.rds")) 
ALL_PRiSMA <- ALL_PRiSMA1 %>% 
 filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA))
  
  # filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person","Yes, visit conducted by phone",NA)) %>% 
  # filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person","Yes, visit conducted by phone",NA)) 

Locked_PRISMA <- read_rds(here("Data","Locked_PRISMA.rds"))

ReMAPP <-ALL_PRiSMA %>% filter(SCRN_OBSSTDAT>=ymd("2023-04-03")) |> 
  anti_join(ALL_PRiSMA |> drop_na(MOMID) |> filter(TYPE_VISIT=="Enrollment") |>
              filter(CON_DSSTDAT<ymd("2023-04-03")) |> select(MOMID))

# PRISMA FLOWCHART -------------------------------------
enrollments_remapp <- ReMAPP %>% drop_na(MOMID) %>% distinct(MOMID) %>% nrow()
pre_scrn_prisma <- ALL_PRiSMA %>% drop_na(SCRNID) %>% distinct(SCRNID) %>% nrow()
enrollmennts_prisma <- ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID) %>% nrow()
scrnd_prisma <- ALL_PRiSMA %>%  filter(complete.cases(US_OHOSTDAT)) %>% distinct(SCRNID) %>% nrow()
not_enrol_prisma <- pre_scrn_prisma - enrollmennts_prisma

Ga_less14 <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<14) %>% nrow()

Ga_less18 <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<18) %>% nrow()

Ga_18_les20 <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks>=18.0 & Ga_weeks<20.0) %>% nrow()

trim1_prisma <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<18) %>%
  mutate(trimester=if_else(Ga_weeks<14,"trimester1","trimester2")) %>%
  filter(trimester == "trimester1") %>% nrow()

trim2_prisma <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<18) %>%
  mutate(trimester=if_else(Ga_weeks<14,"trimester1","trimester2")) %>%
  filter(trimester == "trimester2") %>% nrow()

# trimester2 <- Ga_18_les20 + trim2_prisma

grViz(diagram = "digraph flowchart {
graph [overlap = true, fontsize = 34]
      node[fontname =Helvetica,shape = folder, color = darkblue,penwidth = 2.0,style=filled,
      fontcolor = black, fillcolor=lemonchiffon]
      tab1 [label = '@@1',shape = octagon]
      tab2 [label = '@@2']
      tab3 [label = '@@3',color =maroon,shape = octagon]
      tab4 [label = '@@4',shape = octagon]
      tab5 [label = '@@5']
      tab6 [label = '@@6']
      tab7 [label = '@@7']
      tab8 [label = '@@8']



      tab9 [label = <<b> Outstanding reasons of failure to enroll: </b> <br  /> &#8226;
      Not from catchment area, <br ALIGN = 'LEFT' /> &#8226;
      Estimated GA above 25 weeks, <br ALIGN = 'LEFT' /> &#8226;
      Deferred to come on a later date, <br ALIGN = 'LEFT' />&#8226;
      GA by US above 20 weeks, <br ALIGN = 'LEFT' />&#8226;
      Not interested in research. <br ALIGN = 'LEFT' /> >]
      tab10 [label = '@@9',color =maroon]

      tab11 [label = '',shape = point]

    # tab1 [label = <<b> Node 1 </b> <br ALIGN = 'LEFT' /> &#8226; text_var  <br ALIGN = 'LEFT' /> >]

      # set up node layout
      tab1 -> tab2;
      tab1 -> tab8[label = <Failed to meet <br/> eligibility criteria at <br/> pre-screening level>];
      tab2 -> tab3;
      tab2 -> tab8[label =' knocked out \n by UltraSound'];
      tab3 -> tab11[label ='14wks =< GA <18wks',align=right];
      tab11-> tab4;
      tab3 -> tab5;
      tab3 -> tab10;
      tab10 -> tab11;
      tab4 -> tab6;
      tab4 -> tab7;
      #tab5 -> tab7;
      tab8 -> tab9;


}
[1]: paste0('Total Number Pre-Screened ','(',pre_scrn_prisma,')')
[2]: paste0('Total Screened by US  ',scrnd_prisma,' (',round((scrnd_prisma/pre_scrn_prisma)*100,1),'%)')
[3]: paste0('Total Enrollments  ',enrollmennts_prisma, ' (',round((enrollmennts_prisma/scrnd_prisma)*100,1),'%)')
[4]: paste0('GA: less than 18 weeks  ','(',Ga_less18,') ',round((Ga_less18/enrollmennts_prisma)*100,1),'%')
[5]: paste0('18 =< GA(wks) < 20:  ','(',Ga_18_les20,') ',round((Ga_18_les20/enrollmennts_prisma)*100,1),'%')
[6]: paste0('Trimester 1:  ','(',trim1_prisma,'/',Ga_less18,') ',round((trim1_prisma/Ga_less18)*100,1),'%')
[7]: paste0('Trimester 2:  ','(',trim2_prisma,'/',Ga_less18,') ',round((trim2_prisma/Ga_less18)*100,1),'%')
[8]: paste0('Total exclusions  ',not_enrol_prisma,'(',round((not_enrol_prisma/pre_scrn_prisma)*100,1),'%)')
[10]: paste0('GA<14 wks: ',Ga_less14, ' (',round(Ga_less14/enrollmennts_prisma*100,1),'%)')

      ")
```

A total of **`r pre_scrn_prisma`** potential participants have been pre-screened, with **`r scrnd_prisma`** screened for enrollment based on the ultrasound (GA \< 20 weeks). Of all enrollments (**`r enrollmennts_prisma`**), it's worth noting that (**`r Ga_less14`/`r enrollmennts_prisma`**) -- **`r paste0(round(Ga_less14/enrollmennts_prisma*100,1),'%')`** were enrolled with GA less than 14 weeks.

**`r enrollments_remapp`** participants have been co-enrolled in Redefining Maternal Anemia in Pregnancy and Postpartum (**ReMAPP**) study, Which was launched on $3^{rd}$ April 2023.

## Distribution of pre-screens, Screens & Enrollments

::: panel-tabset
### Enrolments

```{r}
#| label: fig-Enrollments
#| fig-cap: "Enrolled Participants"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-align: left
#| fig-width: 12
#| fig-height: 6

enrol_dat <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  filter(TYPE_VISIT=="Enrollment") %>%
  distinct(MOMID, .keep_all = T)  %>%  tabyl(SCRN_FAC_SPFY_OBSLOC) %>% drop_na() %>%
  mutate(percent = round(percent*100,1)) #%>%

 enrol_dat %>% ggplot(aes(x = reorder( SCRN_FAC_SPFY_OBSLOC,percent), y = n  ,fill=SCRN_FAC_SPFY_OBSLOC)) +
  geom_col(width = .38,color ="gray55",alpha =.5) +
  geom_text(aes(y=n+1,label = paste0(n,"\n (", percent,"%",")")),vjust=-.5, hjust=0.5, alpha = 1.7, size = 4.5) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Jamii Clinical Services Clinic" = "Jamii Clinical \n Services Clinic",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub-County \n Hospital",
                              "Tingwangi Health Centre" = "Tingwangi")) +
  labs(y = "Counts",
       #title = "Graphical Distribution of Enrolled  Participants",
       x = "ANC FACILITY") +
  #ylim(0,80) +
  theme_light() + 
scale_fill_brewer(palette = 2)+
   
  theme(axis.title = element_text(colour = "black", size = 16, face = "bold", color = "darkblue"),
        axis.text = element_text(colour = "black", size = 14, face = "bold"),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 18, face = "bold"),
       # axis.text.y = element_blank(),
       # axis.title.y = element_blank(),
        legend.position = "none") +
   scale_y_continuous(limits = c(0,max(enrol_dat$n)+80))#+
   #coord_polar()
```

### screening

```{r}
#| label: fig-SCREENS
#| fig-cap: Screened Participants
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-align: left
#| fig-width: 12
#| fig-height: 6

scrn_dta <- ALL_PRiSMA %>% filter(complete.cases(US_OHOSTDAT)) %>%  distinct(SCRNID,.keep_all = T)  %>% 
  tabyl(US_FAC_SPFY_OHOLOC) %>% 
  mutate(percent = round(percent*100,1)) %>%
  rename(FACILITIES = US_FAC_SPFY_OHOLOC) #%>%

  scrn_dta %>% ggplot(aes(x = reorder( FACILITIES,percent), y = n ,fill = FACILITIES)) +
  geom_col(width = .29,color ="black",alpha=0.5) +
  geom_text(aes(label = paste0(n, "\n (", percent,"%",")")),vjust=-.2, hjust=0.5, alpha = 1.7, size = 4.3) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub-County \n Hospital",
                              "Tingwangi Health Centre" = "Tingwangi",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  labs(y = "Counts",
       title = "Graphical Distribution of screened  Participants",
       X="") +
  #ylim(0,500) +
  theme_light() +
  theme(axis.title = element_text(colour = "black", size = 16, face = "bold", color = "darkred"),
        axis.text = element_text(colour = "black", size = 14, face = "bold"),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 18),
        #axis.text.y = element_blank(),
        #axis.title.y = element_blank(),
        legend.position = "none")+
    #scale_fill_viridis_d(option = "B")+
 scale_y_continuous(limits = c(0,max(scrn_dta$n)+80)) #+
    #coord_polar()
```

### Pre-Screens

```{r}
#| label: fig-PRESCREENS
#| fig-cap: "Pre-Screened Participants"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-align: left
#| fig-width: 12
#| fig-height: 6
PRESCREENS_dta <- ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%  tabyl(SCRN_FAC_SPFY_OBSLOC) %>% drop_na() %>%
  mutate(percent = round(percent*100,1)) %>%
  rename(`ANC_FACILITY` = SCRN_FAC_SPFY_OBSLOC) #%>%

  PRESCREENS_dta %>% ggplot(aes(x = reorder( `ANC_FACILITY`,percent), y = n ,fill =`ANC_FACILITY`)) +
  geom_col(width = .4,color ="black",alpha=0.6) +
  geom_text(aes(label = paste0(n, "\n (", percent,"%",")")),vjust=-.2, hjust=0.5, alpha = 1.7, size = 4.3) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Jamii Clinical Services Clinic" = "Jamii Clinical \n Services Clinic",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  labs(y = "Counts",
       title = "Graphical Distribution of Pre-screened  Participants",
       x = "") +
  theme_light() +
  theme(axis.title = element_text(colour = "black", size = 16, face = "bold", color = "darkred"),
        axis.text = element_text(colour = "black", size = 14, face = "bold",angle = 90),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 18),
        legend.position = "none")+
    scale_y_continuous(limits = c(0,max(PRESCREENS_dta$n)+120))


```
:::

### Exclusion criteria

::: {.callout-caution collapse="true"}
#### Expand To Learn About Exclusion & Inclusion criteria

`A woman who meets the following inclusion criteria during screening may be enrolled:`

➢ Lives within the study catchment area.\
➢ Meets minimum age requirement in study site country.\
➢ 18 years of age or those who meet the criteria of emancipated minors.\
➢ Intrauterine pregnancy \<20 weeks gestation verified via ultrasound.\
➢ Provides informed consent.\

Exlusion criteria\

`A woman who meets the following exclusion criteria during screening may NOT be enrolled:`\
➢ Nonviable (e.g. ectopic or molar) pregnancy\
➢ Plans to relocate outside of the study catchment area during pregnancy and/or postpartum.
:::

@fig-exclusion displays the the reasons for failure to enroll most of our potential participants. A total of **`r not_enrol_prisma`** have been excluded from the study.

```{r}
#| label: fig-exclusion
#| fig-cap: "Reasons for Exclusion"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

Exclusion_data <- ALL_PRiSMA %>% filter(is.na(MOMID)) %>% #filter(OTHR_IEORRES =="Yes") %>% 
  mutate(OTHR_REASON_IEORRES = str_trim(as.character(OTHR_REASON_IEORRES)),
         OTHR_REASON_IEORRES = if_else(OTHR_REASON_IEORRES == "Other",OTHR_SPFY_IEORRES,OTHR_REASON_IEORRES),
         OTHR_REASON_IEORRES = if_else(is.na(OTHR_REASON_IEORRES),OTHR_SPFY_IEORRES,OTHR_REASON_IEORRES),
         OTHR_REASON_IEORRES = if_else(OTHR_REASON_IEORRES == "8","Busy—Does not have time to proceed with the enrollment process",OTHR_REASON_IEORRES),
         OTHR_REASON_IEORRES = str_to_lower(OTHR_REASON_IEORRES) ) %>% 
  
  mutate(Reason = if_else(str_detect(OTHR_REASON_IEORRES,"def"),"deferred",NA),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"later date"),"deferred",NA),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"spousal"),"needs to seek spousal consent",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"ultrasound"),"GA above 20 by US",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"20"),"GA above 20 by US",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"outside"),"outside the study area",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"residence"),"outside the study area",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"residency"),"outside the study area",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"resident"),"outside the study area",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"lives"),"outside the study area",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"busy"),"Busy (does not have time)",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"cannot get time"),"Busy (does not have time)",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"inter"),"Not interested in research",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"travel"),"Plans to travel/Relocate",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"plan"),"Plans to travel/Relocate",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"mig"),"Plans to travel/Relocate",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"relo"),"Plans to travel/Relocate",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"blood"),"Fears blood draw",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"prick"),"Fears blood draw",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"feasible"),"Not feasible to collect the minimal required data",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"refus"),"Refusal",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"declin"),"Refusal",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"above 25"),"Above 25 weeks (LMP)",Reason),
         Reason = if_else(str_detect(OTHR_REASON_IEORRES,"lmp"),"Above 25 weeks (LMP)",Reason),)%>% 
  #corrections
  mutate(Reason = if_else(OTHR_REASON_IEORRES=="declined blood draws","Fears blood draw",Reason),
         Reason = if_else(OTHR_REASON_IEORRES=="spouse declined blood draw ","Fears blood draw",Reason)) %>% 
  
  mutate(Reason = if_else(is.na(Reason)&OTHR_IEORRES =="Yes","Others",Reason)) 
#select(SCRNID,Reason,OTHR_IEORRES,OTHR_REASON_IEORRES) %>% 
# View()


outside_catch <- Exclusion_data %>% select(SCRNID,MOMID,CATCHMENT_IEORRES,Reason) %>% filter(CATCHMENT_IEORRES == "No"|Reason =="outside the study area") %>% 
  filter(!SCRNID==11235)%>% nrow()
# Age requirement
age_require <- Exclusion_data %>% select(SCRNID,MOMID,AGE_IEORRES,Reason) %>%  filter(AGE_IEORRES == "No") %>% nrow()
# Ga by LMP
GA_lmp <- Exclusion_data %>% select(SCRNID,MOMID,EGA_LT25_IEORRES,Reason) %>% filter(EGA_LT25_IEORRES == "No"|Reason=="Above 25 weeks (LMP)") %>% nrow()
#Deferred
Deferred <- Exclusion_data %>% distinct(SCRNID, .keep_all = T) %>% filter(!complete.cases(MOMID)) %>% select(SCRNID,MOMID,OTHR_REASON_IEORRES,US_GA_WKS_AGE_FTS1,Reason) %>%
  filter(OTHR_REASON_IEORRES == "deferred—to come for enrollment on later date"|Reason =="deferred") %>% 
  mutate(US_GA_WKS_AGE_FTS_20 = if_else(US_GA_WKS_AGE_FTS1>=20,"Yes",NA),
         US_GA_WKS_AGE_FTS_20 = if_else(is.na(US_GA_WKS_AGE_FTS_20),"No",US_GA_WKS_AGE_FTS_20)) %>% 
  filter(US_GA_WKS_AGE_FTS_20!="Yes") %>% nrow()
4# spousal consent
Spousal_consent <- Exclusion_data  %>% select(SCRNID,MOMID,OTHR_REASON_IEORRES,Reason) %>% 
  filter(OTHR_REASON_IEORRES=="needs to seek spousal consent before she can accept"|Reason == "needs to seek spousal consent") %>% nrow()
# Not interested
Not_interested <- Exclusion_data %>% filter(is.na(MOMID)) %>%  select(SCRNID,MOMID,OTHR_REASON_IEORRES,Reason) %>% 
  filter(OTHR_REASON_IEORRES=="Not interested in research/not interested in study"|Reason == "Not interested in research") %>% nrow()
# Ga above 20 weeks
Ga_above20wks <- Exclusion_data %>% filter(is.na(MOMID)) %>%
  select(SCRNID,MOMID,US_GA_WKS_AGE_FTS1,Reason) %>% 
  filter(US_GA_WKS_AGE_FTS1>=20|Reason == "GA above 20 by US")  %>%  nrow()

# Busy 
busy <- Exclusion_data %>% select(Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Busy (does not have time)") %>% nrow()
# Fears blood draw
blood_draw <- Exclusion_data %>% select(Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Fears blood draw") %>% nrow()
# not feasible
not_feasible <- Exclusion_data %>% select(Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Not feasible to collect the minimal required data") %>% nrow()

# plans to relocate
relocate <- Exclusion_data %>% select(Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Plans to travel/Relocate") %>% nrow()
# refusal
refusal <- Exclusion_data %>% select(Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Refusal") %>% nrow()

Others <- Exclusion_data %>% filter(is.na(MOMID)) %>% filter(OTHR_IEORRES =="Yes"& Reason=="Others") %>% nrow()

#Exclusion_data %>% tabyl(Reason)
data.frame(outside_catch,age_require,GA_lmp,Deferred,Spousal_consent,Not_interested,Ga_above20wks,busy,blood_draw,not_feasible,relocate,refusal,Others) %>% 
  rename(`Outside catchment area`=outside_catch,
         `Don't meet age requirement`=age_require,
         `Est. GA above 25wks (LMP)`=GA_lmp,
         `To seek Spousal consent` = Spousal_consent,
         `Not interested in study` = Not_interested,
         `US GA >= 20wks`=Ga_above20wks,
         `Busy (does not have time)`=busy,
         `Fears of blood draw` = blood_draw,
         `Not feasible to collect\n min. required data` =not_feasible,
         `Plans to travel/Relocate` = relocate,
         Refusals = refusal) %>% 
  pivot_longer(values_to = "number",names_to = "Reason",cols = `Outside catchment area`:Others) %>% 
  mutate(percent = round((number/not_enrol_prisma)*100,1)) %>% 
  ggplot(aes(x=reorder(Reason,number),y=number,fill = Reason))+
  geom_col(width = 0.7,color="black",alpha =.5,fill = c("#9AFA0AFE"))+
  geom_label(aes(label= paste0(number,"(",percent,"%)")),size=4,alpha=9,hjust=0.1,color="black",fill = "white")+
  labs(title = "Reasons for Exclusion from PRISMA Study",x="", subtitle = paste0("Total exclusions: ", not_enrol_prisma))+
  theme_classic() +
 # scale_fill_brewer(palette = 2) +
  theme(
    axis.text.x = element_text(size = 13,color = "black"),
    axis.text.y = element_text(size = 13,color = "black", face = "italic"),
    axis.title = element_text(size = 14,color = "black", face = "italic"),
    legend.position = "none",
    plot.title = element_text(size = 16,color = "darkblue", face = "italic",hjust = 0.3),
    plot.subtitle =  element_text(size = 10,color = c("#A1A1A1"), face = "italic")) +
  coord_flip() +
  scale_y_continuous(limits = c(0,1000),breaks = seq(0,700,100))

```

Among the outstanding reasons of exclusion, **Non residence** forms the majority, (**`r outside_catch`**) -- `r paste0(round((outside_catch/not_enrol_prisma)*100,1),"%")`, followed by **Estimated GA above 25 weeks** by LMP & Deferred to come on a later date at **`r paste0(round((GA_lmp/not_enrol_prisma)*100,1),"%")`** & **`r paste0(round((Deferred/not_enrol_prisma)*100,1),"%")`** respectively. The table below stratify the reasons for exclusion by facility.

### Exclusion criteria stratified by facilities

```{r}
#| label: tbl-exclusion2
#| tbl-cap: "Reasons for Exclusion by facility"
#| echo: false
#| column: screen-inset-right
#| fig-width: 10
#| fig-height: 6


outside_catch_ <- Exclusion_data %>% select(SCRNID,MOMID,SCRN_FAC_SPFY_OBSLOC,CATCHMENT_IEORRES,Reason) %>% 
  filter(CATCHMENT_IEORRES == "No"|Reason =="outside the study area") %>% 
  filter(!SCRNID==11235) %>% group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Outside catchment area" =n)


# Age requirement
age_require_ <- Exclusion_data %>% select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,AGE_IEORRES,Reason) %>%  filter(AGE_IEORRES == "No") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Age requirement"=n)
# Ga by LMP
GA_lmp_ <- Exclusion_data %>% select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,EGA_LT25_IEORRES,Reason) %>% filter(EGA_LT25_IEORRES == "No"|Reason=="Above 25 weeks (LMP)") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Est.GA>25wks (LMP)" =n)
#Deferred
Defered <- Exclusion_data %>% distinct(SCRNID, .keep_all = T) %>% filter(!complete.cases(MOMID)) %>% 
  select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,OTHR_REASON_IEORRES,US_GA_WKS_AGE_FTS1,Reason) %>%
  filter(OTHR_REASON_IEORRES == "deferred—to come for enrollment on later date"|Reason =="deferred") %>% 
  mutate(US_GA_WKS_AGE_FTS_20 = if_else(US_GA_WKS_AGE_FTS1>=20,"Yes",NA),
         US_GA_WKS_AGE_FTS_20 = if_else(is.na(US_GA_WKS_AGE_FTS_20),"No",US_GA_WKS_AGE_FTS_20)) %>% 
  filter(US_GA_WKS_AGE_FTS_20!="Yes") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Deferred" =n)
# spousal consent
Spousal_consnt <- Exclusion_data  %>% select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,OTHR_REASON_IEORRES,Reason) %>% 
  filter(OTHR_REASON_IEORRES=="needs to seek spousal consent before she can accept"|Reason == "needs to seek spousal consent") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("To seek Spousal consent" =n)
# Not interested
Not_interestd <- Exclusion_data %>% filter(is.na(MOMID)) %>%  select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,OTHR_REASON_IEORRES,Reason) %>% 
  filter(OTHR_REASON_IEORRES=="Not interested in research/not interested in study"|Reason == "Not interested in research") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Not interested"=n)
# Ga above 20 weeks
Ga_above20wk <- Exclusion_data %>% filter(is.na(MOMID)) %>%
  select(SCRNID,SCRN_FAC_SPFY_OBSLOC,MOMID,US_GA_WKS_AGE_FTS1,Reason) %>% 
  filter(US_GA_WKS_AGE_FTS1>=20|Reason == "GA above 20 by US")  %>%  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("US GA >= 20wks" = n)

# Busy 
busy_ <- Exclusion_data %>% select(SCRN_FAC_SPFY_OBSLOC,Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Busy (does not have time)") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Busy" =n)
# Fears blood draw
blood_drw <- Exclusion_data %>% select(SCRN_FAC_SPFY_OBSLOC,Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Fears blood draw") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Fears of blood draw" = n)
# not feasible
not_feasibl <- Exclusion_data %>% select(SCRN_FAC_SPFY_OBSLOC,Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Not feasible to collect the minimal required data") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Required data (Not feasible)" = n)

# plans to relocate
relocat <- Exclusion_data %>% select(SCRN_FAC_SPFY_OBSLOC,Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Plans to travel/Relocate") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename( "Relocation" =n)
# refusal
refus <- Exclusion_data %>% select(SCRN_FAC_SPFY_OBSLOC,Reason,OTHR_REASON_IEORRES) %>% filter(Reason == "Refusal") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename("Refusals" =n)

Other <- Exclusion_data %>% filter(is.na(MOMID)) %>% filter(OTHR_IEORRES =="Yes"& Reason=="Others") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename(Others = n)

Exclusion_data  %>% select(SCRNID,SCRN_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC,Reason) %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count() %>% rename(Total =n) %>% arrange(desc(Total)) %>%  full_join(outside_catch_) %>% 
  full_join(age_require_) %>% full_join(GA_lmp_) %>% full_join(Defered) %>% full_join(Spousal_consnt) %>% 
  full_join(Not_interestd) %>% full_join(Ga_above20wk) %>% full_join(busy_) %>% full_join(blood_drw) %>% 
  full_join(not_feasibl) %>% full_join(relocat) %>% full_join(refus) %>% full_join(Other) %>% 
  rename(Facility = SCRN_FAC_SPFY_OBSLOC) %>% arrange(desc(Total)) %>% 
  mutate(Facility = str_replace(Facility,"Lumumba Sub County Hospital","LUMUMBA"),
         Facility = str_replace(Facility,"Siaya County Referral Hospital","SIAYA"),
         Facility = str_replace(Facility,"Kisumu County Hospital","KCRH"),
         Facility = str_replace(Facility,"Kuoyo Health Center","KUOYO"),
         Facility = str_replace(Facility,"Tingwangi Health Centre","TINGWANGI"),
         Facility = str_replace(Facility,"Migosi Sub County Hospital","MIGOSI")) %>%
  gt(groupname_col = "Facility",row_group_as_column = T) %>% 
  opt_row_striping() %>% opt_horizontal_padding(scale = .5) %>% 
  opt_table_lines() %>% opt_vertical_padding(scale = .5) %>% 
  cols_align(align = "center") %>% sub_missing(missing_text = "-") %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_body(
              column = Total,
              rows = everything()
            )) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_row_groups())

```

### Distribution of;- Deferrement, those ought to seek spousal consent & those coming from outside the catchment area.

::: panel-tabset
#### Deferred

```{r}
#| label: fig-deferemnt
#| fig-cap: "Deferred participants - (to come on a later date)"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

deferred_table <- Exclusion_data %>% distinct(SCRNID, .keep_all = T) %>% filter(!complete.cases(MOMID)) %>% 
  select(SCRNID,SCRN_OBSSTDAT,MOMID,OTHR_REASON_IEORRES,US_GA_WKS_AGE_FTS1,Reason) %>%
  filter(OTHR_REASON_IEORRES == "deferred—to come for enrollment on later date"|Reason =="deferred") %>% 
  mutate(US_GA_WKS_AGE_FTS_20 = if_else(US_GA_WKS_AGE_FTS1>=20,"Yes",NA),
         US_GA_WKS_AGE_FTS_20 = if_else(is.na(US_GA_WKS_AGE_FTS_20),"No",US_GA_WKS_AGE_FTS_20)) %>% 
  filter(US_GA_WKS_AGE_FTS_20!="Yes") %>% mutate(year_month = zoo::as.yearmon(ymd(SCRN_OBSSTDAT))) %>% tabyl(year_month) %>% 
  mutate(year_month = as.factor(year_month)) 
  
deferred_table %>% ggplot(aes(x = year_month, y = n)) + 
  geom_col(width = .5,fill = c("#FFB90F"),color = "black") +
  labs(title = "Distribution of deferred Participants",
       subtitle = paste0("cumulative number deferred: ",Deferred),
       y = "Deferred participants",
       x="",
       caption = paste0("In the last **five** months the average number of deferred potential participants is at ", sum((deferred_table %>% tail(n=5))$n)/5))+
  geom_text(aes(label =n),vjust = -.6,size =4.2)+
  theme_light()+
  theme(axis.text = element_text(angle = 90,size = 14,face = "italic"),
        axis.title = element_text(size = 16,face = "italic"),
        plot.subtitle = element_text(size = 14,colour = "gray42"),
        plot.caption = element_markdown(hjust = .5,size = 12,face = "italic"),
        plot.title = element_text(size=16,hjust = .5,face = "italic")) + 
  scale_y_continuous(limits = c(0,52))

```

#### spousal consent

```{r}
#| label: fig-spausal
#| fig-cap: "Potential participants anticipating to seek spausal consent"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

Exclusion_data  %>% select(SCRNID,SCRN_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC,MOMID,OTHR_REASON_IEORRES,Reason) %>% 
  filter(OTHR_REASON_IEORRES=="needs to seek spousal consent before she can accept"|Reason == "needs to seek spousal consent") %>% 
  mutate(year_month = zoo::as.yearmon(ymd(SCRN_OBSSTDAT))) %>% tabyl(year_month) %>% 
  mutate(year_month = as.factor(year_month)) %>% 
  ggplot(aes(x = year_month, y = n)) + 
  geom_col(width = .5,fill = c("#FF7F24"),color = "black") +
  labs(title = "Distribution of Participants anticipating to seek spousal consent",
       subtitle = paste0("cumulative number: ",Spousal_consent),
       y = "Number of Potential participants",
       x="")+
  geom_text(aes(label =n),vjust = -.6,size =4.2)+
  theme_light()+
  theme(axis.text = element_text(angle = 90,size = 14,face = "italic"),
        axis.title = element_text(size = 16,face = "italic"),
        plot.subtitle = element_text(size = 14,colour = "gray42"),
        plot.caption = element_markdown(hjust = .5,size = 12,face = "italic"),
        plot.title = element_text(size=16,hjust = .5,face = "italic")) + 
   scale_y_continuous(limits = c(0,25))
```

#### Outside catchment area

```{r}
#| label: fig-outside_DSS
#| fig-cap: "Participants from outside HDSS"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

Exclusion_data %>% select(SCRNID,MOMID,SCRN_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC,CATCHMENT_IEORRES,Reason) %>% 
  filter(CATCHMENT_IEORRES == "No"|Reason =="outside the study area") %>% 
  filter(!SCRNID==11235) %>% 
  mutate(year_month = zoo::as.yearmon(ymd(SCRN_OBSSTDAT))) %>% tabyl(year_month) %>% 
  mutate(year_month = as.factor(year_month)) %>% 
  ggplot(aes(x = year_month, y = n)) + 
  geom_col(width = .5,fill = c("#CDCD00"),color = "black") +
  labs(title = "Distribution of Participants from outside HDSS",
       subtitle = paste0("cumulative number: ",outside_catch),
       y = "Frequency",
       x="")+
  geom_text(aes(label =n),vjust = -.6,size =4.2)+
  theme_light()+
  theme(axis.text = element_text(angle = 90,size = 14,face = "italic"),
        axis.title = element_text(size = 16,face = "italic"),
        plot.subtitle = element_text(size = 14,colour = "gray42"),
        plot.caption = element_markdown(hjust = .5,size = 12,face = "italic"),
        plot.title = element_text(size=16,hjust = .5,face = "italic")) + 
  scale_y_continuous(limits = c(0,310))
```
:::

# PRISMA Referrals

::: panel-tabset
## Community Referrals

```{r}
#| label: fig-community
#| fig-cap: "Community referrals"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 5.7

ALL_PRiSMA %>% drop_na(REFERRER_COMM) %>% distinct(SCRNID,.keep_all = T) %>% 
  mutate(REFERRER_COMM =trim.spaces(REFERRER_COMM),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Ap"),"Ap police dispensary"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Ahava"),"Ahava hospital"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Ccc|CCC"),"CCC CLINIC"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Migosi"),"Migosi sub county hospital"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Nightingale"),"Nightingale medical centre"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Self"),"Self referral"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Facility  staff"),"Facility staff"),
         REFERRER_COMM = replace(REFERRER_COMM,str_detect(REFERRER_COMM,"Facility staff"),"Study Staff")) %>% 
  tabyl(REFERRER_COMM) %>% arrange(desc(n)) %>% top_n(n=10) %>% 
  ggplot(aes(x=reorder(REFERRER_COMM,n),y=n))+
  geom_col(width = 0.8,color="black",alpha =.7,fill = c("#76EEC6"))+
  geom_text(aes(label=n),size=4.5,alpha=9,hjust=-0.5,color="black")+
  labs(x="",y="", title = "Top 10 PRISMA Referrals")+
  theme_light() +
  theme(
    axis.text.x = element_text(size = 14,color = "black"),
    axis.text.y = element_text(size = 14,color = "black", face = "italic"),
    axis.title = element_text(size = 14,color = "black", face = "italic"),
    legend.position = "none",
    plot.title = element_text(size = 16,color = "darkblue", face = "italic",hjust = 0.3),
    plot.subtitle =  element_text(size = 10,color = c("#A1A1A1"), face = "italic")) +
  coord_flip() +
  scale_y_continuous(limits = c(0,1000),breaks = seq(0,1000,100)) 

# ALL_PRiSMA %>% select(SCRNID,MOMID,REFERRAL_DT) %>%
#   mutate(REFERRAL_DT = ymd(REFERRAL_DT),
#          REFERRAL_DT = replace(REFERRAL_DT,REFERRAL_DT==ymd("1909-09-09"),NA),
#          REFERRAL_DT = replace(REFERRAL_DT,REFERRAL_DT==ymd("1907-07-07"),NA)) %>% View()
```

## Facility Referrals

```{r}
#| label: fig-facilityRef
#| fig-cap: "Facility referrals"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

ALL_PRiSMA %>% drop_na(REFERRER_FAC) %>% #select(SCRNID,REFERRER_FAC) %>% View()
  distinct(SCRNID,.keep_all = T) %>% 
  mutate( REFERRER_FAC = replace(REFERRER_FAC,str_detect(REFERRER_FAC,"Nurse from another hospita"),"Staff from another hospital")) %>% 
    tabyl(REFERRER_FAC) %>% 
    ggplot(aes(x=reorder(REFERRER_FAC,n),y=n))+
  geom_col(width = 0.7,color="black",alpha =.7,fill = c("#76EEC6"))+
  geom_text(aes(label=n),size=5,alpha=9,hjust=-0.5,color="black")+
  labs(title = "",x="",y="")+
  theme_light() +
  theme(
    axis.text.x = element_text(size = 14,color = "black"),
    axis.text.y = element_text(size = 14,color = "black", face = "italic"),
    axis.title = element_text(size = 14,color = "black", face = "italic"),
    legend.position = "none",
    plot.title = element_text(size = 16,color = "darkblue", face = "italic",hjust = 0.3),
    plot.subtitle =  element_text(size = 10,color = c("#A1A1A1"), face = "italic")) +
  coord_flip() 
```
:::

### Proportion of Enrollment given number Pre-screened per facility

```{r}
#| label: fig-proportion
#| fig-cap: "Proportion of enrolmment given screened (in %)"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 5

#screening per facility
JOOTRH_scr <- (ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%
                 filter(SCRN_FAC_SPFY_OBSLOC =="JOOTRH") %>% count())$n
KUOYO_scr <- (ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%
                filter(SCRN_FAC_SPFY_OBSLOC =="Kuoyo Health Center") %>% count())$n
SIAYA_scr <- (ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%
                filter(SCRN_FAC_SPFY_OBSLOC =="Siaya County Referral Hospital") %>% count())$n
KCRH_scr <- (ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%
               filter(SCRN_FAC_SPFY_OBSLOC =="Kisumu County Hospital") %>% count())$n
LUMUMBA_scr <- (ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>%
                  filter(SCRN_FAC_SPFY_OBSLOC =="Lumumba Sub County Hospital") %>% count())$n

# Enrolments
JOOTRH_enrol <- (ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  distinct(MOMID, .keep_all = T) %>%
                   filter(SCRN_FAC_SPFY_OBSLOC =="JOOTRH") %>% count())$n
KUOYO_enrol <- (ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  distinct(MOMID, .keep_all = T) %>%
                  filter(SCRN_FAC_SPFY_OBSLOC =="Kuoyo Health Center") %>% count())$n
SIAYA_enrol <- (ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  distinct(MOMID, .keep_all = T) %>%
                  filter(SCRN_FAC_SPFY_OBSLOC =="Siaya County Referral Hospital") %>% count())$n
KCRH_enrol <- (ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  distinct(MOMID, .keep_all = T) %>%
                 filter(SCRN_FAC_SPFY_OBSLOC =="Kisumu County Hospital") %>% count())$n
LUMUMBA_enrol <- (ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  distinct(MOMID, .keep_all = T) %>%
                    filter(SCRN_FAC_SPFY_OBSLOC =="Lumumba Sub County Hospital") %>% count())$n
# dataframe
scrn <- c(JOOTRH_scr,KUOYO_scr,SIAYA_scr,KCRH_scr,LUMUMBA_scr)
Enrol <- c(JOOTRH_enrol,KUOYO_enrol,SIAYA_enrol,KCRH_enrol,LUMUMBA_enrol)
facilities <- c("JOOTRH","KUOYO","SIAYA","KCRH","LUMUMBA")
scrn_enrol <- data.frame(facilities,scrn,Enrol) %>% mutate(prop=round((Enrol/scrn)*100,1))   

SE <- scrn_enrol %>% arrange(desc(prop))

ggpubr::ggbarplot(SE, x = "facilities", y = "prop", alpha =.6,
                  fill = "facilities", palette = "jco",width = 0.4)+
  geom_text(aes(label = paste0(prop,"%")),vjust = -.5,size=4.5)+
  #stat_compare_means(comparisons = my_comparisons)+
  #stat_compare_means(label.y = max(SE$prop)+ 5,size = 8)+
  labs(#title = "Proportion of Enrollment given number screened per facility",
       y = "Proportion of Enrollments (%)",
       x = "")+
  scale_fill_calc() +
  theme_pubr()+
  theme(plot.title = element_text(hjust = 0.5,size = 16,face = "italic"),
        axis.title = element_text(colour = "black",face = "italic",size = 14),
        axis.text = element_text(colour = "black",size = 15),
        axis.text.x = element_text(colour = "black",size = 12,face = "italic"),
        legend.position = "none")#+
  #scale_y_continuous(limits = c(0,40))

```

### Trend of enrolment on monthly basis

::: panel-tabset
#### Enrolment trend

```{r}
#| label: fig-enrolment
#| fig-cap: "Monthly Trend of Enrolments"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 12
#| fig-height: 5
target=98
trend_data <-  ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT == "Enrollment") %>%
  select(SCRNID,MOMID,CON_DSSTDAT,visit_date,SCRN_OBSSTDAT) %>% distinct(MOMID,.keep_all = T) %>% 
  mutate(Mon_year = zoo::as.yearmon(CON_DSSTDAT),
         Mon_year = as.factor(Mon_year)) %>% drop_na(MOMID) %>%
  group_by(Mon_year) %>% count() %>% drop_na(Mon_year)

trend_data %>%  ggplot(aes(x=Mon_year, y=n))+
  geom_col(width = .34,fill = c("#7FFFD4"),color ="black")+
  geom_text(aes(label=n),vjust=-0.5,size=4)+
  labs(#title = "Monthly Trend of Enrolments",
       x = "",
       y = "Frequency")+
  geom_hline(yintercept = 98,color= c("#8B0000"),size = .9,linetype = "dashed")+
  geom_vline(xintercept = 12.5,color ="blue",size =1,linetype = "dashed") +
  theme_classic()+
  theme(plot.title = element_text(hjust = 0.5,size = 25,face = 'italic',color = "black"),
        axis.title = element_text(colour = "black",size = 14,face = 'italic'),
        axis.text.y = element_text(colour = "black",size = 12,face = "italic"),
        axis.text.x = element_text(colour = "black",size = 12,face = "italic",angle = 90))+
  annotate("text",x =18,y=120,label = "May 2024 Target = 98",size = 3.8,color ="darkblue")+
  geom_segment(aes(x=19,y=115,xend=19,yend =98),arrow=arrow(length = unit(.2, "cm")),size=1)+
  
  annotate("text",x =9.8,y=130,label = "First year",size = 4,color ="darkblue")+
  geom_segment(aes(x=12.5,y=130,xend=10.8,yend =130),arrow=arrow(length = unit(.2, "cm")),size=1)+
  
   annotate("text",x =14.3,y=120,label = "Second year",size = 4,color ="darkblue")+
   geom_segment(aes(x=12.6,y=120,xend=13.3,yend =120),arrow=arrow(length = unit(.2, "cm")),size=1)+
  
  scale_y_continuous(limits = c(0,140))

```

Cumulatively, enrollments is at **`r enrollmennts_prisma`**. Currently, our target is set to **`r target`**. In the month of **`r paste(month(today(),label=T),year(today()))`**, we have so far enrolled **`r (trend_data %>% filter(Mon_year==paste(month(today(),label=T),year(today()))))[1,2]`** participants

#### Trimester I enrolment trend

```{r}
#| label: fig-Trimester1enrolment
#| fig-cap: "Trimester I Monthly Trend of Enrolments"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 12
#| fig-height: 5

trend_dta <-  ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT == "Enrollment") %>%
  select(MOMID,CON_DSSTDAT,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>% distinct(MOMID,.keep_all = T) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<14) %>% 
  mutate(Mon_year = zoo::as.yearmon(CON_DSSTDAT),
         Mon_year = as.factor(Mon_year)) %>% drop_na(MOMID) %>%
  group_by(Mon_year) %>% count() 

trend_dta %>%  ggplot(aes(x=Mon_year, y=n))+
  geom_col(width = .4,fill = c("#FF8C88"),color ="black",alpha=.4)+
  geom_label(aes(label=n),vjust=1.5,size=4)+
  labs(title = "Trimester I enrolment trend",
       x = "",
       y = "Frequency")+
  theme_pubr()+
  theme(plot.title = element_text(hjust = 0.5,size = 18,face = 'italic'),
        axis.title = element_text(colour = "black",size = 14,face = 'italic'),
        axis.text.y = element_text(colour = "black",size = 12,face = "italic"),
        axis.text.x = element_text(colour = "black",size = 12,face = "italic",angle = 90))#+
  #scale_y_continuous(limits = c(0,140))
```

#### Proportion of Trimester I & II Enrolments

```{r}
#| label: fig-enrolmentstata
#| fig-cap: "Monthly Trend of Enrolments"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 14
#| fig-height: 6.5


trend_dta <-  ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT == "Enrollment") %>%
  select(MOMID,CON_DSSTDAT,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>% distinct(MOMID,.keep_all = T) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<14) %>% 
  mutate(Mon_year = zoo::as.yearmon(CON_DSSTDAT),
         Mon_year = as.factor(Mon_year)) %>% drop_na(MOMID) %>%
  group_by(Mon_year) %>% count() 

enrolltrn <- ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,CON_DSSTDAT) %>% 
  distinct(MOMID,.keep_all = T) %>% 
  mutate(Mon_year = factor(zoo::as.yearmon(CON_DSSTDAT))) %>% group_by(Mon_year) %>% count() %>% 
  rename(Enrollments = n)

stack_data <-  enrolltrn %>% drop_na(Mon_year) %>% full_join(trend_dta) %>% 
  mutate(trime2 = Enrollments -n) %>% 
  mutate(time1_prop = round(n/Enrollments*100,1),
         trime2_prop = 100-time1_prop)

trimester2_enr <- stack_data %>% select(Mon_year,Enrollments,n = trime2,prop = trime2_prop) %>% mutate(trimester = "Enrolments (14-<20 wks)")
trimester1_enrol <- stack_data %>% select(Mon_year,Enrollments,n,prop=time1_prop) %>% mutate(trimester = "Enrolments (<14 weeks)")


# merge data
trimester2_enr %>% bind_rows(trimester1_enrol) %>% 
  mutate(trimester = fct_relevel(trimester,"Enrolments (14-<20 wks)")) %>% 
  ggplot(aes(x=Mon_year,y=n,fill =trimester))+
  geom_col(color="black",alpha = .4,width = .6) +
  labs(x = "",y="Enrolments")+
  scale_fill_manual(values = c("#7FFFD4", "#FF8C00"))+

   geom_text(aes(x =Mon_year,y =Enrollments, label = Enrollments,vjust=-0.5),size = 4) +
  geom_text(aes(label = paste0(prop,"%")),position = position_stack(),vjust = 1.5,size = 3.5,alpha =1) +

  theme_classic() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.key.width = unit(1,"cm"),
        legend.key.height = unit(.5, "cm"),
        legend.text = element_text(size = 12,face = "italic"),
        axis.text.y = element_text(size = 13,face = 'italic'),
        axis.title = element_text(size = 15,face = "bold"),
        axis.text.x = element_text(angle = 90,size = 12,colour = "black",face = 'italic')) +

  scale_y_continuous(breaks=seq(0,200,20))
```

#### Pattern of Pre-screens,screens, Enrolments

```{r}
#| label: fig-enrolmentprescreen
#| fig-cap: "Monthly Trend of Prescreens, screens,Enrolments"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 12
#| fig-height: 5.5

# prescreen
prescreen_trnd <- ALL_PRiSMA %>% select(SCRNID,SCRN_OBSSTDAT) %>% distinct(SCRNID,.keep_all = T) %>% 
  mutate(Mon_year = factor(zoo::as.yearmon(SCRN_OBSSTDAT))) %>% group_by(Mon_year) %>% count() %>% 
  rename(PreScreens = n) #%>% filter(Mon_year!="Feb 2022")
#screen
screentrn <- ALL_PRiSMA %>% filter(complete.cases(US_OHOSTDAT)) %>%  distinct(SCRNID,.keep_all = T)  %>% 
    mutate(Mon_year = factor(zoo::as.yearmon(US_OHOSTDAT))) %>% group_by(Mon_year) %>% count() %>% 
  rename(Screens = n)
#enroll
enrolltrn <- ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,CON_DSSTDAT) %>% 
  distinct(MOMID,.keep_all = T) %>% 
  mutate(Mon_year = factor(zoo::as.yearmon(CON_DSSTDAT))) %>% group_by(Mon_year) %>% count() %>% 
  rename(Enrollments = n)

trnd_data <- prescreen_trnd %>% full_join(screentrn) %>% full_join(enrolltrn)

trnd_data %>% ggplot(aes(x=Mon_year,y=Enrollments))+
#geom_line(aes(color ="Enrollments"),width = .34,fill = c("#FF8C00"),alpha=0.8)+
  geom_line(aes(x=Mon_year,y=Enrollments,color ="Enrollments"),stat = "identity",group=1,size=.8) +
  labs(title = "Distribution of Pre-screens,Screeening and Enrolments",
       x = "",
       y = "Number of Potential Participants")+
  theme_pander(boxes = T)+
  geom_text(aes(label = paste0(Enrollments)),vjust=1.3, hjust=0.5, alpha = 1.7, size = 4,color="black") +
  geom_line(aes(x=Mon_year,y=PreScreens,color ="PreScreens"),stat = "identity",group=1,size=.8) +
  geom_line(aes(x=Mon_year,y=Screens,color ="Screens"),stat = "identity",group=1,size=.8) +
  geom_text(aes(x=Mon_year,y=Screens,label = paste0(Screens)),vjust=-.5, hjust=0.5, alpha = 1.7, size = 4) +
  geom_text(aes(x=Mon_year,y=PreScreens,label = paste0(PreScreens)),vjust=-.5, hjust=0.5, alpha = 1.7, size = 4) +
  theme(plot.title = element_text(hjust = 0.5,size = 18),
        axis.title = element_text(colour = "black",size = 14,face = 'bold'),
        axis.text.y = element_text(colour = "black",size = 12,face = "italic"),
        legend.position = "top",
        legend.title = element_blank(),
        legend.background = element_rect(fill="white"),
        axis.text.x = element_text(colour = "black",size = 12,face = "italic",angle = 90))+
  scale_y_continuous(limits = c(0,645))

```
:::

```{r}
# #### GA by LMP
# #| label: fig-lmp
# #| fig-cap: "Distributions of GA by LMP at pre-csreening stage"
# #| echo: false
# #| warning: false
# #| column: body-outset
# #| fig-width: 11
# #| fig-height: 5
# ALL_PRiSMA %>% select(SCRNID,MOMID,SCRN_OBSSTDAT,contains("lmp")) %>% distinct(SCRNID,.keep_all = T) %>% 
#   filter(complete.cases(GA_LMP_WEEKS_SCORRES)) %>% 
#   mutate(Mon_year = factor(zoo::as.yearmon(SCRN_OBSSTDAT)),
#          lmp_weeks = case_when(GA_LMP_WEEKS_SCORRES<20~"less than 20weeks",
#                                GA_LMP_WEEKS_SCORRES>=20&GA_LMP_WEEKS_SCORRES<22~"20-21 weeks",
#                                GA_LMP_WEEKS_SCORRES>=22&GA_LMP_WEEKS_SCORRES<24~"22-23 weeks",
#                                 GA_LMP_WEEKS_SCORRES>=24~"Above 24 weeks"))%>%
#     group_by(Mon_year,lmp_weeks) %>% count(lmp_weeks) %>% 
#  # mutate(GA_LMP_WEEKS_SCORRES= if_else(is.na(GA_LMP_WEEKS_SCORRES),0,GA_LMP_WEEKS_SCORRES)) %>% 
#   #pivot_wider(id_cols = c(Mon_year),names_from = lmp_weeks,values_from = n) %>% 
#   #mutate(`Above 20 weeks`= if_else(is.na(`Above 20 weeks`),0,`Above 20 weeks`))
#     ggplot(aes(x=Mon_year,y=n,color=lmp_weeks,fill=lmp_weeks))+
#       geom_col(position = position_dodge(0.9),color="black") +
#   labs(title = "Distribution of potential participants Pre-screened by LMP (GA in weeks)",
#        y= "Number of participants",
#        x ="")+
#   theme_light()+
#   geom_text(aes(label = n),position = position_dodge(0.9),color ="black",size = 4,vjust =-.5,alpha = 1)+
#   theme(plot.title = element_text(hjust = 0.5,size = 18),
#         axis.title = element_text(colour = "black",size = 14,face = 'bold'),
#         axis.text.y = element_text(colour = "black",size = 12),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         legend.background = element_rect(fill="white"),
#         axis.text.x = element_text(colour = "black",size = 12,angle = 90))
#  # scale_y_continuous(breaks = seq(0,2000,100))
```

### Graphical distribution of May 2024 Pre-screens & enrolments

::: panel-tabset
#### Enrollment

```{r}
#| label: fig-Enrol
#| fig-cap: Distribution of April 2024 Enrolments
#| echo: false
#| fig-width: 11
#| fig-height: 5
# Enrolmments
Enrols_data <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%
  select(MOMID,TYPE_VISIT,CON_DSSTDAT,SCRN_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC) %>%
  filter(TYPE_VISIT == "Enrollment") %>%
  distinct(MOMID,.keep_all = T) %>% drop_na(MOMID) %>%
  mutate(year = year(CON_DSSTDAT),
         month =month(CON_DSSTDAT),
         month =factor(month,levels = 1:12,
                       labels = c("January","February","March","April","May",
                                  "June","July","August","September",
                                  "October","November","December"))) %>%
  filter(year==2024) %>% filter(month=="May") %>% tabyl(SCRN_FAC_SPFY_OBSLOC) %>%
  mutate(percent = round(percent*100,1)) %>%
  rename(`ANC_FACILITY` = SCRN_FAC_SPFY_OBSLOC) 

  Enrols_data %>% ggplot(aes(x = reorder( `ANC_FACILITY`,percent), y = n ,fill=ANC_FACILITY)) +
  geom_col(width = .28,color = "black") +
  geom_hline(yintercept = 20,color= c("#8B0000"),size = 1.15,linetype = "dashed")+
  annotate("text",x =1.85,y=21,label = "Target = 20",size = 4,color ="darkblue")+
  geom_segment(aes(x=1.5,y=22,xend=1.5,yend =20),arrow=arrow(length = unit(.2, "cm")),size=0.8)+
  
  geom_text(aes(label = paste0(n," ", "(", percent,"%",")")),vjust=-.5, hjust=0.5, alpha = 1.7, size = 3.8,color ="black") +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Tingwangi Health Centre" = "Tingwangi",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  labs(y = "Counts",
       # title = "Graphical Distribution of Enrolled  Participants",
       x = "ANC_FACILITY") +
  #ylim(0,400) +
  theme_light() +
    scale_fill_viridis_d(option = "G",alpha = 1)+
  theme(axis.title = element_text(colour = "black", size = 14, face = "italic", color = "darkblue"),
        axis.text = element_text(colour = "black", size = 12, face = "italic"),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 18, face = "bold"),
        legend.position = "none") #+
  #scale_y_continuous(limits = c(0,max(Enrols_data$n)+1))
```

#### Pre-screens

```{r}
#| label: fig-scrn
#| fig-cap: Distribution of April 2024 Pre-screens
#| echo: false
#| fig-width: 11
#| fig-height: 5

# screens
Scrns_data <- ALL_PRiSMA %>% distinct(SCRNID, .keep_all = T) %>% drop_na(SCRNID) %>%
  select(CON_DSSTDAT,SCRN_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC) %>%
  mutate(year = year(SCRN_OBSSTDAT),
         month =month(SCRN_OBSSTDAT),
         month =factor(month,levels = 1:12,
                       labels = c("January","February","March","April","May",
                                  "June","July","August","September",
                                  "October","November","December"))) %>%
  filter(year==2024) %>% filter(month=="April") %>% tabyl(SCRN_FAC_SPFY_OBSLOC) %>%
  mutate(percent = round(percent*100,1)) %>%
  rename(`ANC_FACILITY` = SCRN_FAC_SPFY_OBSLOC)

  Scrns_data %>% ggplot(aes(x = reorder( `ANC_FACILITY`,percent), y = n ,fill=ANC_FACILITY)) +
  geom_col(width = .28,alpha = .5,color = "black") +
  geom_text(aes(label = paste0(n," ", "(", percent,"%",")")),vjust=-.5, hjust=0.5, alpha = 1.7, size = 4,color ="black") +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Tingwangi Health Centre" = "Tingwangi",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  labs(y = "Counts",
       #title = "Graphical Distribution of Pre-screened  Participants",
       x = "ANC_FACILITY") +
  theme_light() +
  scale_fill_viridis_d(option = "D",alpha = 1)+
  theme(axis.title = element_text(colour = "black", size = 14, face = "bold", color = "darkblue"),
        axis.text = element_text(colour = "black", size = 12, face = "italic"),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 18, face = "bold"),
        legend.position = "none")+
  scale_y_continuous(limits = c(0,max(Scrns_data$n)+1))
```
:::

# HDSS Linkage

::: panel-tabset
#### Proportion of PRISMA linked participants

```{r}
#| label: fig-hdsslinkage
#| fig-cap: Proportion of PRISMA participnats linked with HDSS
#| echo: false
#| fig-width: 8
#| fig-height: 5

hdss_tab <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>% 

  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% 
  tabyl(Hdss_Linkage) %>% mutate(percent = round(percent*100,1)) %>% arrange(n) 

not_linked <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>% 
  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% filter(Hdss_Linkage=="Not yet linked") %>% nrow()

hdss_pending <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>%  
  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% 
  filter(Hdss_Linkage =="Not yet linked") %>% filter(HDSSLinkage_Comments == "Pending") %>% nrow()

hdss_labs <- paste0(hdss_tab$n," (",hdss_tab$percent,"%)")
ggdonutchart(hdss_tab,"n",label = hdss_labs,
             lab.pos = "in", 
             lab.font = c(4, "bold.italic","black"),
             lab.adjust = -5,
             fill = "Hdss_Linkage",color = "darkblue",
             palette = c("#C1FFC1", "#FFB6C1")) +
  theme(legend.key.width = unit(1,"cm"),
        legend.key.height = unit(.5,"cm"),
        legend.title = element_blank(),
        legend.text = element_text(size = 12))+
  annotate("text", x =.5,y=3,label =paste0("HDSS Linkage: \n Approx. ", round(max(hdss_tab$percent)),"%"),alpha = 1,color ="darkred")

```

Of all the PRISMA enrollments, **`r not_linked`** participants have not been linked to DSS. **`r hdss_pending`** are indicated as pending linkage.

#### Participants notyet linked with HDSS

```{r}
#| label: fig-missinglinkage
#| fig-cap: Counts of PRISMA participnats pending HDSS Linkage
#| echo: false
#| fig-width: 11
#| fig-height: 5
Hdss_missing_linkage <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>%  
  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% 
  filter(Hdss_Linkage =="Not yet linked") 

Hdss_missing_linkage %>% tabyl(SCRN_FAC_SPFY_OBSLOC) %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC=str_replace(SCRN_FAC_SPFY_OBSLOC,"Kisumu County Hospital","KCRH"),
         SCRN_FAC_SPFY_OBSLOC=str_replace(SCRN_FAC_SPFY_OBSLOC,"Kuoyo Health Center","KUOYO"),
         SCRN_FAC_SPFY_OBSLOC=str_replace(SCRN_FAC_SPFY_OBSLOC,"Lumumba Sub County Hospital","LUMUMBA"),
         SCRN_FAC_SPFY_OBSLOC=str_replace(SCRN_FAC_SPFY_OBSLOC,"Siaya County Referral Hospital","SIAYA")) %>% 
ggplot(aes(x=reorder(SCRN_FAC_SPFY_OBSLOC,n,decreasing = T),n)) +
  geom_col(width = 0.3,color = "black",fill = c("#FFA500"),alpha = .7) +
  geom_text(aes(label = n),vjust = 1.5) +
  labs(x="", y = "Not yet Linked",
       subtitle = paste0("Number of participants not yet linked to HDSS: ", nrow(Hdss_missing_linkage))) +
  theme_light() +
  theme(axis.text = element_text(colour = "black",face = "italic",size = 13),
        axis.title = element_text(colour = "black", face = "italic", size = 15),
        plot.subtitle = element_text(color = "gray50",size = 13)) +
  annotate("text",x =3.5,y = 16,label = paste0(hdss_pending," participants are indicated as pending linkage"))

```

#### Days from enrolment for the pending cases

```{r}
#| label: fig-dayselapsed
#| fig-cap: Counts of PRISMA participnats pending HDSS Linkage
#| echo: false
#| fig-width: 11
#| fig-height: 5

ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>%  
  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% 
  filter(Hdss_Linkage =="Not yet linked") %>% filter(HDSSLinkage_Comments == "Pending") %>% #View()
  select(MOMID,CON_DSSTDAT) %>% mutate(time_elapsed = as.numeric(today() - CON_DSSTDAT),
                                       `days from Enrolment` = case_when(time_elapsed<5~1,
                                                                          time_elapsed>=5&time_elapsed<11~2,
                                                                          time_elapsed>=11&time_elapsed<=15~3,
                                                                          time_elapsed>15~4)) %>% 
  set_value_labels(`days from Enrolment` = c("Less than 5 days"=1,"5-10 days"=2,"11-15 days"=3,"Above 15 days"=4)) %>% 
  mutate_if(is.labelled,as_factor) %>% tabyl(`days from Enrolment`) %>% 
  ggplot(aes(x=`days from Enrolment`,y = n))+
    geom_col(width = .3, fill = c("#FF7256"), colour = "gray58",alpha =.6)+
  labs(y = "Number of days",
       subtitle = paste0("Number of participants pending linkage: ", hdss_pending)) +
  geom_text(aes(label = n),vjust =2,size=5) +
  theme_light() +
  theme(axis.text = element_text(size = 15,face = "italic"),
        axis.title = element_text(size = 16,face = "italic")) 
```
:::

## Participants indicative of pending Linkage

```{r}
#| label: fig-pendingdss
#| fig-cap: List of PRISMA participnats pending HDSS Linkage
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 14
#| fig-height: 8
ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC,contains("hdss")) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% distinct(MOMID,.keep_all = T) %>%  ungroup() %>% 
  mutate(Hdss_Linkage= if_else(is.na(HDSS_SUBJID),"Not yet linked","Linkage done")) %>% 
  filter(Hdss_Linkage =="Not yet linked") %>% filter(HDSSLinkage_Comments%in%c("Pending")) %>% 
  mutate(time_elapsed = as.numeric(today() - CON_DSSTDAT),
                                       `days from Enrolment` = case_when(time_elapsed<5~1,
                                                                          time_elapsed>=5&time_elapsed<11~2,
                                                                          time_elapsed>=11&time_elapsed<=15~3,
                                                                          time_elapsed>15~4)) %>% 
  set_value_labels(`days from Enrolment` = c("Less than 5 days"=1,"5-10 days"=2,"11-15 days"=3,"Above 15 days"=4)) %>% 
  mutate_if(is.labelled,as_factor) %>% 
  select(1:3,13,16) %>% arrange(`days from Enrolment`) %>% mutate(Index = row_number()) %>% 
  select(Index,everything()) %>% gt() %>% 
    tab_header(title = "Pending HDSS Linkage") %>% 
  opt_table_outline(style = "solid",width = px(3),color = "black") %>% 
  opt_table_lines() %>% 
  opt_row_striping() %>% opt_vertical_padding(scale = .5) %>%
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
     tab_style(
    style = list(cell_borders(color = "black")),
    locations = cells_body(columns = everything(), rows = everything())) %>% 
   tab_style(
    style = list(cell_borders(color = "black"),cell_fill(color = c("#FFD2C4E2"))),
    locations = cells_body(columns = everything(), rows = `days from Enrolment`=="Above 15 days")) 
```

# Summary of ANC, IPC and PNC study visits

::: panel-tabset
#### PRISMA study visits

```{r}
#| label: fig-PRISMA_visits
#| fig-cap: "Number of visitations made per different types of study visits"
#| echo: false
#| column: body-outset-right
#| warning: false
#| fig-width: 11
#| fig-height: 7

ALL_PRiSMA %>%  drop_na(MOMID) %>% drop_na(TYPE_VISIT) %>% 
filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>%  full_join(ALL_PRiSMA %>% filter(MOMID=="KEARC00300")) %>% 
  select(MOMID,TYPE_VISIT) %>% group_by(MOMID,TYPE_VISIT) %>% distinct() %>% ungroup() %>%
  dplyr::group_by(TYPE_VISIT) %>% count() %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit","14")) %>%
  mutate(TYPE_VISIT = factor(TYPE_VISIT,levels = c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC","PNC-0",
                                                   "PNC-1","PNC-4","PNC-6","PNC-26","PNC-52"))) %>%
  mutate(TYPE_VISIT=fct_relevel(str_wrap(TYPE_VISIT,width=6), "Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC","PNC-0",
                                "PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")) %>% drop_na(TYPE_VISIT) %>% 
  ggplot(aes(x=(TYPE_VISIT),y=n))+
  geom_col(width = 0.45,fill =  c("#19C93A"),color ="darkblue",alpha=.5) +
  geom_text(aes(label = n),hjust = 0.5,vjust = -.5,size =4,color ="darkblue")+
  labs(#title = "Number of visitations made per different types of study visits",
    y = "NUMBER OF VISITS",
    x = "TYPE OF VISIT")+
  #ylim(0,120)+
  theme_light()+
  theme(plot.title = element_text(hjust = 0.5, size = 18,face = "bold"),
        axis.title = element_text(colour = "black",size = 12,face = "italic"),
        axis.text = element_text(color = "darkblue",size = 14,face = "italic",angle = 90))

```

#### ReMAPP study visits

```{r}
#| label: fig-ReMAPP_visits
#| fig-cap: "Number of visitations made per different types of study visits"
#| echo: false
#| column: body-outset-right
#| warning: false
#| fig-width: 11
#| fig-height: 7

ALL_PRiSMA %>% filter(SCRN_OBSSTDAT>=ymd("2023-04-03")) |> 
  anti_join(ALL_PRiSMA |> drop_na(MOMID) |> filter(TYPE_VISIT=="Enrollment") |>
              filter(CON_DSSTDAT<ymd("2023-04-03")) |> select(MOMID)) %>% 
  filter(complete.cases(MOMID)) %>% drop_na(TYPE_VISIT) %>% 
filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
  full_join(ALL_PRiSMA %>% filter(MOMID=="KEARC00300")) %>% 
  select(MOMID,TYPE_VISIT) %>% group_by(MOMID,TYPE_VISIT) %>% distinct() %>% ungroup() %>%
  dplyr::group_by(TYPE_VISIT) %>% count() %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit","14")) %>%
  mutate(TYPE_VISIT = factor(TYPE_VISIT,levels = c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC","PNC-0",
                                                   "PNC-1","PNC-4","PNC-6","PNC-26","PNC-52"))) %>%
  mutate(TYPE_VISIT=fct_relevel(str_wrap(TYPE_VISIT,width=6), "Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC","PNC-0",
                                "PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")) %>% drop_na(TYPE_VISIT) %>% 
  ggplot(aes(x=(TYPE_VISIT),y=n))+
  geom_col(width = 0.45,fill =  c("#FFA54F"),color ="darkblue",alpha=.5) +
  geom_text(aes(label = n),hjust = 0.5,vjust = -.5,size =4,color ="darkblue")+
  labs(#title = "Number of visitations made per different types of study visits",
    y = "NUMBER OF VISITS",
    x = "TYPE OF VISIT")+
  #ylim(0,120)+
  theme_light()+
  theme(plot.title = element_text(hjust = 0.5, size = 18,face = "bold"),
        axis.title = element_text(colour = "black",size = 12,face = "italic"),
        axis.text = element_text(color = "darkblue",size = 14,face = "italic",angle = 90))


```
:::

# ReMAPP AIM 3

**ReMAPP Aim 3** started in `February 2024`. It is rolling over into the next five subsequent months, hence anticipated to end in the month of `June 2024`.

```{r}
April_trime2 <- readxl::read_xlsx("C:/Users/User/OneDrive - Kenya Medical Research Institute/ReMAPP Cloud/Remapp Sampled data/May trimester 2 sample_2024-05-02.xlsx") %>% 
  select(-last_seen)
April_trime3 <- readxl::read_xlsx("C:/Users/User/OneDrive - Kenya Medical Research Institute/ReMAPP Cloud/Remapp Sampled data/May trimester 3 sample_2024-05-02.xlsx") %>% 
select(-last_seen)
```

## Progress of ReMAPP Aim 3

```{r}
#| label: fig-aim3progress
#| fig-cap: Tracking of Aim 3 participants.
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 14
#| fig-height: 8

ALL_Random_sample <- readxl::read_xlsx("C:/Users/User/OneDrive - Kenya Medical Research Institute/ReMAPP Cloud/Remapp Sampled data/ALL Random sample.xlsx")

Aim3 <- ALL_PRiSMA %>% drop_na(MOMID) %>% drop_na(LB_REMAPP3_TRI) %>% droplevels() %>% 
  mutate(month_year = zoo::as.yearmon(visit_date),spec_collect_month = zoo::as.yearmon(MAT_SPEC_COLLECT_DAT)) %>%
  mutate(Trimester = case_when(Ga_visit_weeks<14~"Trimester I (<14 weeks)",
                               TYPE_VISIT=="ANC-20"~"Trimester II (ANC-20)",
                               TYPE_VISIT=="ANC-32"~"Trimester III (ANC-32)")) %>% 
 select(MOMID,US_GA_WKS_AGE_FTS1_Enrol,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,SCRN_OBSSTDAT,CON_DSSTDAT,ANC_OBSSTDAT,
        MAT_SPEC_COLLECT_DAT,visit_date,LB_REMAPP3_TRI,LB_REMAPP3,month_year,Trimester,FORMCOMPLID_MNH07,FORMCOMPLDAT_MNH07) #%>% 

#  filter(month_year=="May 2024") %>% View()

# April_trime3 %>% select(MOMID) %>% left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,visit_date,LB_REMAPP3,LB_REMAPP3_TRI,FORMCOMPLID_MNH07)) %>% View()

 # filter(Trimester=="Trimester II (ANC-32)") %>%  View()

# Aim3 %>% left_join(ALL_Random_sample) %>% mutate(sampled_month  = zoo::as.yearmon(`sampled month` )) %>%
#   drop_na(sampled_month) %>% tabyl(month_year,sampled_month) %>% View()

ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,visit_date,Ga_visit_weeks,SCRN_FAC_SPFY_OBSLOC) %>% filter(MOMID=="KEARC00952") %>% View()

Aim3 %>%  select(month_year,Trimester) %>% 
  tbl_summary(by="month_year",statistic = all_categorical() ~ "{n}") %>% 
  bold_labels() %>% italicize_levels() %>% add_overall() %>% 
    as_gt() %>% opt_table_outline(style = "solid", width = px(1.7),color = "black") %>% 
     tab_style(
    style = cell_fill(color = c("#F2FADA")), 
    locations = cells_body(
      rows = c(2)
    )
  ) %>% 
  tab_style(
    style = cell_fill(color = c("#BDF2DF")), 
    locations = cells_body(
      rows = c(3)
    )
  ) %>% 
  tab_style(
    style = cell_fill(color = c("#FAC5E0")), 
    locations = cells_body(
      rows = c(4)
    )
  ) 
 
 
 # ALL_PRiSMA %>% drop_na(MOMID) %>% drop_na(LB_REMAPP3_TRI) %>% droplevels() %>% mutate(month_year = zoo::as.yearmon(visit_date)) %>%
 #  mutate(Trimester = case_when(Ga_visit_weeks<14~"Trimester I (<14 weeks)",
 #                               TYPE_VISIT=="ANC-20"~"Trimester II (ANC-20)",
 #                               TYPE_VISIT=="ANC-32"~"Trimester III (ANC-32)")) %>%
 # select(MOMID,US_GA_WKS_AGE_FTS1_Enrol,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,SCRN_OBSSTDAT,CON_DSSTDAT,ANC_OBSSTDAT,
 #        MAT_SPEC_COLLECT_DAT,visit_date,LB_REMAPP3,month_year,Trimester,FORMCOMPLID_MNH07,FORMCOMPLDAT_MNH07) %>% arrange(month_year,TYPE_VISIT) %>%
 #   View()
 # 
 # ALL_PRiSMA %>% drop_na(MOMID) %>% drop_na(LB_REMAPP3_TRI) %>% droplevels() %>% mutate(month_year = zoo::as.yearmon(visit_date)) %>%
 #  # select(MOMID,US_GA_WKS_AGE_FTS1_Enrol,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,Ga_visit_weeks,LB_REMAPP3_TRI,LB_REMAPP3,visit_date) %>%
 #  mutate(Trimester = case_when(Ga_visit_weeks<14~"Trimester I (<14 weeks)",
 #                               TYPE_VISIT=="ANC-20"~"Trimester II (ANC-20)",
 #                               TYPE_VISIT=="ANC-32"~"Trimester III (ANC-32)")) %>%
 # select(MOMID,US_GA_WKS_AGE_FTS1_Enrol,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,SCRN_OBSSTDAT,CON_DSSTDAT,
 #        MAT_SPEC_COLLECT_DAT,LB_REMAPP3,month_year,Trimester,FORMCOMPLID_MNH07,FORMCOMPLDAT_MNH07) %>% #View()
 #  filter(month_year=="April 2024") %>% #View()
 # filter(Trimester=="Trimester II (ANC-20)")  %>% View()
 # 
 # ALL_PRiSMA %>% filter(MOMID=="KEARC00926") %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,LB_REMAPP3_TRI,LB_REMAPP3) %>% View()
 
```

#### Trimester II & III Pending (Yet to be seen) Aim 3 participants - (June 2024)

::: panel-tabset
#### Trimester II

```{r}
#| label: tbl-febtrimester2
#| tbl-cap: List of participnats yet to be seen for the month of June
#| echo: false
#| warning: false
#| column: body-outset-right
#| tbl-width: 14
#| tbl-height: 8

June_trime2 %>% select(1,2,5,6,7) %>% 
  mutate_at(vars(ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date),as_date) %>% 
  #mutate(ANC_20_Latest_Date =  replace(ANC_20_Latest_Date,ANC_20_Latest_Date>=ymd("2024-06-01"),ymd("2024-06-30"))) %>% 
  left_join(ALL_PRiSMA %>% filter(TYPE_VISIT=="ANC-20") %>% select(MOMID,TYPE_VISIT,visit_date)) %>% 
  filter(!complete.cases(visit_date)) %>%  arrange(SCRN_FAC_SPFY_OBSLOC) %>%  select(1:5) %>% mutate(index = row_number()) %>% gt() %>% 
  tab_header(title = "ReMAPP AIM 3 Trimester II (pending/yet to be seen) participants -- Month of June") %>% 
  opt_table_outline() %>% opt_table_lines() %>% 
  tab_options( table.font.size = 11,) %>% 
  opt_row_striping() %>% opt_vertical_padding(scale = .5) %>%
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) 
```

#### Trimester III

```{r}
#| label: tbl-febtrimester3
#| tbl-cap: List of participnats yet to be seen for the month of May
#| echo: false
#| warning: false
#| column: body-outset-right
#| tbl-width: 14
#| tbl-height: 8

June_trime3 %>% select(1,4,6,7,8) %>% 
  mutate_at(vars(ANC_32_Earliest_Date ,ANC_32_Actual_Date  ,ANC_32_Latest_Date),as_date) %>% 
  #mutate(ANC_32_Latest_Date  =  replace(ANC_32_Latest_Date ,ANC_32_Latest_Date >=ymd("2024-06-01"),ymd("2024-06-30"))) %>% 
  left_join(ALL_PRiSMA %>% filter(TYPE_VISIT=="ANC-32") %>% select(MOMID,TYPE_VISIT,visit_date)) %>% 
  filter(!complete.cases(visit_date)) %>% select(1:5) %>% arrange(SCRN_FAC_SPFY_OBSLOC) %>% mutate(index = row_number()) %>%  gt() %>% 
  tab_header(title = "ReMAPP AIM 3 Trimester III (pending/yet to be seen) participants -- Month of June") %>% 
  opt_table_outline() %>% opt_table_lines() %>% 
  opt_row_striping() %>% opt_vertical_padding(scale = .5) %>%
  tab_options( table.font.size = 11,) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) 
```
:::

## Sample collection among ReMAPP Aim 3 Participants

```{r}
#| label: fig-ReMpp_samp
#| fig-cap: "ReMAPP sample collection"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

Remapp_spe_sample <- ALL_PRiSMA %>% filter(LB_REMAPP3=="Yes") %>%
  select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,visit_date,LB_REMAPP3,LB_REMAPP3_TRI,
         MAT_BLOOD_SPEC_1:MAT_HELM_SPEC_COLLECT_COUNT,HELM_LBORRES) 

Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_1) %>% distinct(MOMID,.keep_all = T) %>%
  mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_1),"Result Available", "Missing result")) %>% #view()
  tabyl(Result) %>% mutate(Sample = paste0("EDTA tubes"),
                           Percent = round(percent*100,1)) %>%
  filter(Result == "Result Available") %>% select(Result,Sample, n , Percent) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID, SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_3) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_3),"Result Available", "Missing result"))  %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("Serum separator tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_4) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_4),"Result Available", "Missing result")) %>% #View()
          tabyl(Result) %>% mutate(Sample = paste0("Trace-element-free\n polyethylene evacuated tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID, SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_5) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_5),"Result Available", "Missing result")) %>% #View()
          tabyl(Result) %>% mutate(Sample = paste0("Lithium Heparin tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_6) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_6),"Result Available", "Missing result")) %>% 
          tabyl(Result) %>% mutate(Sample = paste0("Fluoride tube"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_URINE_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_URINE_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("urine containers"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_TB_SYM_TEST, MAT_TB_SPEC_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%
          #filter(MAT_TB_SYM_TEST == "Yes") %>%
          mutate(Result = if_else(!is.na(MAT_TB_SPEC_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("sputum specimen - TB"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Remapp_spe_sample %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,HELM_LBORRES, MAT_HELM_SPEC_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%
  mutate_if(is.numeric,~replace(.x,.x==-5,NA)) %>% 
  mutate(MAT_HELM_SPEC_COLLECT_COUNT = if_else(is.na(MAT_HELM_SPEC_COLLECT_COUNT) & HELM_LBORRES%in%c("Positive","Negative"),
                                                       1,MAT_HELM_SPEC_COLLECT_COUNT)) %>% 
          mutate(Result = if_else(!is.na(MAT_HELM_SPEC_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("stool specimen"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  lollipop_chart(x = Sample, y = Percent,line_size = 1.5,point_size = 4) +
  #geom_col(width = .7, fill = c("#8B5A2B")) +
  #ylim(0,125) +
  labs(x = "",
      # title = "Sample Collection For ReMAPP Aim 3 Participants",
       y = "Completeness (%)") +
  theme_light() +
  geom_text(aes(label = paste0(n, "(",Percent,"%",")")), hjust = -0.1, color = "black", size = 4.5) +
  theme(axis.text = element_text(angle = 0,hjust = 1.1,vjust = 1.1,colour = "black", size = 14,face = "italic"),
        axis.text.y = element_text(colour = "darkblue", size = 14),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 14, face = "bold"),
        axis.title = element_text(colour = "black", size = 15,color = "black", face = "italic")) +
  scale_y_continuous(limits = c(0,119), breaks = seq(0,119,20)) +
  coord_flip()
```

```{r}

#| label: fig-schedules
#| fig-cap: "Enrollments and ANC Visits schedules"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 14
#| fig-height: 8



#### Enrollments and ANC Visits Tracker:

# ===================================================================
#                   ANC SCHEDULES SUMMARY
#=================================================================


Reten_Data <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%  select(MOMID,TYPE_VISIT,ANC_OBSSTDAT,DELIV_DSSTDAT_INF1,CLOSE_DSSTDAT) %>%
  group_by(MOMID,TYPE_VISIT) %>% fill(DELIV_DSSTDAT_INF1) %>% ungroup() %>%
  mutate(DELIV_DSSTDAT_INF1 = as.Date(DELIV_DSSTDAT_INF1),
         composite_obsdate = ANC_OBSSTDAT,
         composite_obsdate = if_else(is.na(composite_obsdate),DELIV_DSSTDAT_INF1,ANC_OBSSTDAT)) %>%
  full_join(ALL_PRiSMA %>% filter(TYPE_VISIT == "Enrollment") %>% distinct(MOMID,.keep_all = T) %>%
              select(MOMID,CON_DSSTDAT, TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,US_OHOSTDAT, US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
              mutate(US_OHOSTDAT = as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     CON_DSSTDAT = as.Date(CON_DSSTDAT,"%d/%m/%Y"),
                     GA_days = (as.double(US_GA_WKS_AGE_FTS1)*7) + as.numeric(US_GA_DAYS_AGE_FTS1)) %>%
              mutate(ANC_20_Actual_Date = ((20 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_20_Earliest_Date = ANC_20_Actual_Date - 14,
                     ANC_20_Latest_Date = ANC_20_Actual_Date + 20,
                     ANC_28_Actual_Date = ((28 *7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_28_Earliest_Date = ANC_28_Actual_Date - 14,
                     ANC_28_Latest_Date = ANC_28_Actual_Date + 20,
                     ANC_32_Actual_Date = ((32 * 7) - GA_days)  + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_32_Earliest_Date = ANC_32_Actual_Date - 7,
                     ANC_32_Latest_Date = ANC_32_Actual_Date + 13,
                     ANC_36_Actual_Date = ((36 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_36_Earliest_Date = ANC_36_Actual_Date - 14,
                     ANC_36_Latest_Date = ANC_36_Actual_Date + 20) %>%
              select(MOMID, CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC, US_GA_WKS_AGE_FTS1, US_GA_DAYS_AGE_FTS1,
                     ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date,ANC_28_Earliest_Date,
                     ANC_28_Actual_Date, ANC_28_Latest_Date, ANC_32_Earliest_Date, ANC_32_Actual_Date,
                     ANC_32_Latest_Date, ANC_36_Earliest_Date, ANC_36_Actual_Date, ANC_36_Latest_Date)) %>% drop_na(MOMID)   #%>% view()

# To be removed
RM_ANC20 <- Reten_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_20_Earliest_Date) %>% distinct(MOMID) %>%
  full_join( Reten_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(composite_obsdate<ANC_20_Earliest_Date)%>% distinct(MOMID))

RM_ANC28 <- Reten_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_28_Earliest_Date) %>% distinct(MOMID) %>%
  full_join(Reten_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(composite_obsdate<ANC_28_Earliest_Date) %>% distinct(MOMID))

RM_ANC32 <- Reten_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID) %>%
  full_join(Reten_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID))

RM_ANC36 <- Reten_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_36_Earliest_Date) %>% distinct(MOMID) %>%
  full_join(Reten_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(composite_obsdate<ANC_28_Earliest_Date) %>% distinct(MOMID))

#Enrollment
ENROL_NUM <- Reten_Data %>% filter(TYPE_VISIT == "Enrollment") %>%
  distinct(MOMID,.keep_all = T) %>% mutate(status = paste0("Enrollment")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) #%>% view()
# ANC 20
ANC_20_retaind <- Reten_Data %>% filter(TYPE_VISIT=="ANC-20") %>% distinct() %>%  mutate(status = paste0("Retained")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>% distinct() %>% anti_join(RM_ANC20)

Anc20_WO <- Reten_Data %>% anti_join(ANC_20_retaind %>% select(MOMID)) %>%
  filter(TYPE_VISIT=="Enrollment") %>% rowwise() %>%
  mutate(status = case_when(between(today(),ANC_20_Earliest_Date,ANC_20_Latest_Date)~"Window open (Yet to be seen)",
                            today()<ANC_20_Earliest_Date~"Booked for ANC-20 /n Window NOT Yet Open",
                            today()>ANC_20_Latest_Date~"Missed Visit"),
         TYPE_VISIT = replace(TYPE_VISIT,TYPE_VISIT=="Enrollment","ANC-20")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>%
  ungroup() %>% distinct() %>%  anti_join(RM_ANC20)

# ANC 28
ANc28_data <- Reten_Data %>% filter(TYPE_VISIT=="ANC-20") %>% distinct() %>%
  full_join(Reten_Data %>% filter(today()>ANC_20_Latest_Date) %>% distinct()) %>% arrange(MOMID) %>% anti_join(RM_ANC28)
#ANc28_data %>% tabyl(TYPE_VISIT)

ANC_28_retaind <- ANc28_data %>% filter(TYPE_VISIT=="ANC-28") %>% distinct() %>%  mutate(status = paste0("Retained")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>% distinct() #%>% view()

Anc28_WO <- ANc28_data %>% anti_join(ANC_28_retaind %>% select(MOMID)) %>%
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20")) %>% distinct(MOMID,TYPE_VISIT,.keep_all = T) %>% rowwise() %>%
  mutate(status = case_when(between(today(),ANC_28_Earliest_Date,ANC_28_Latest_Date)~"Window open (Yet to be seen)",
                            today()<ANC_28_Earliest_Date~"Booked for ANC-28 /n Window NOT Yet Open",
                            today()>ANC_28_Latest_Date~"Missed Visit"),
         TYPE_VISIT = replace(TYPE_VISIT,TYPE_VISIT%in%c("Enrollment","ANC-20"),"ANC-28")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>%
  ungroup() %>% distinct() #%>% view()


# ANC 32
ANc32_data <- Reten_Data %>% filter(TYPE_VISIT=="ANC-28") %>% distinct() %>%
  full_join(Reten_Data %>% filter(today()>ANC_28_Latest_Date) %>% distinct()) %>% arrange(MOMID) %>% anti_join(RM_ANC32)

ANC_32_retaind <- ANc32_data %>% filter(TYPE_VISIT=="ANC-32") %>% distinct() %>%  mutate(status = paste0("Retained")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>% distinct() #%>% view()


Anc32_WO <- ANc32_data %>% anti_join(ANC_32_retaind %>% select(MOMID)) %>%
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28")) %>% distinct(MOMID,TYPE_VISIT,.keep_all = T) %>% rowwise() %>%
  mutate(status = case_when(between(today(),ANC_32_Earliest_Date,ANC_32_Latest_Date)~"Window open (Yet to be seen)",
                            today()<ANC_32_Earliest_Date~"Booked for ANC-32 /n Window NOT Yet Open",
                            today()>ANC_32_Latest_Date~"Missed Visit"),
         TYPE_VISIT = replace(TYPE_VISIT,TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28"),"ANC-32")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>%
  ungroup() %>% distinct() #%>% view()


# ANC 36
ANc36_data <- Reten_Data %>% filter(TYPE_VISIT=="ANC-32") %>% distinct() %>%
  full_join(Reten_Data %>% filter(today()>ANC_32_Latest_Date) %>% distinct()) %>% arrange(MOMID) %>% anti_join(RM_ANC36)

ANC_36_retaind <- ANc36_data %>% filter(TYPE_VISIT=="ANC-36") %>% distinct() %>%  mutate(status = paste0("Retained")) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>% distinct() #%>% view()


Anc36_WO <- ANc36_data %>% anti_join(ANC_36_retaind %>% select(MOMID)) %>%
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32")) %>% distinct(MOMID,.keep_all = T) %>% rowwise() %>%
  mutate(status = case_when(between(today(),ANC_36_Earliest_Date,ANC_36_Latest_Date)~"Window open (Yet to be seen)",
                            today()<ANC_36_Earliest_Date~"Booked for ANC-36 /n Window NOT Yet Open",
                            today()>ANC_36_Latest_Date~"Missed Visit"),
         TYPE_VISIT = replace(TYPE_VISIT,TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32"),"ANC-36")) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,status) %>%
  ungroup() %>% distinct() #%>% view()

# Rbind data
Bind_data <- rbind(ENROL_NUM,ANC_20_retaind,Anc20_WO,ANC_28_retaind,Anc28_WO,ANC_32_retaind,Anc32_WO,ANC_36_retaind,Anc36_WO) %>%
  filter(!TYPE_VISIT=="IPC")
#%>% view()

# plotting Overal ANC REtention

reten_anc_overall <- Bind_data %>% group_by(TYPE_VISIT,status) %>% count() %>% ungroup() %>% group_by(TYPE_VISIT) %>%
  mutate(prop = round((n/sum(n))*100,1),
         status =replace(status,status %in%c("Booked for ANC-20 /n Window NOT Yet Open","Booked for ANC-28 /n Window NOT Yet Open",
                                             "Booked for ANC-32 /n Window NOT Yet Open","Booked for ANC-36 /n Window NOT Yet Open"),
                         "Booked (Window NOT Yet Open)"))

# reten_anc_overall %>% mutate(TYPE_VISIT = fct_relevel(TYPE_VISIT, "Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>%
#   ggplot(aes(x =TYPE_VISIT,y = prop,fill =status)) +
#   geom_col(position = position_dodge(0.9),alpha=1,color="darkgrey")+
#   #geom_text(aes(label =paste0(n)),vjust=-.6,angle = 0,position = position_dodge(0.9),size=7,color ="black",alpha=10)+
#   geom_text(aes(label =paste0(n,"(",prop,"%",")")),vjust=-.5,angle = 0,position = position_dodge(0.9),size=4,color ="black",alpha=10)+
#   labs(x  ="",
#        y = "Percentage % ",
#        title = paste0("Enrollments and ANC Visits Tracker: Data as of"," ", today()),
#        subtitle = expression(underline(italic("ALL FACILITIES"))))+
#   ylim(0,120)+
#   ggpubr::theme_pubclean()+
#   theme(legend.position = "top",
#         axis.title.y = element_text(colour = "black",size = 14,face = "bold"),
#         axis.text.x = element_text(color = "black",size = 12,face = "bold"),
#         axis.text.y = element_text(color = "black",size = 10),
#         legend.text = element_text(size = 11.3,colour = "black"),
#         legend.key.size = unit(1.2,"cm"),
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,colour = "black",face = "bold"),
#         plot.subtitle = element_text(size = 14,colour = "blue"))
```

# RETENTION RATES

### ANC Retention Rates

```{r}
#| label: fig-ancRet
#| fig-cap: "Overal ANC Retention rate"
#| column: screen-inset-right
#| layout-ncol: 2
#| echo: false
#| warning: false
#| fig-height: 6.5


# ===================================================================
#   RETENTION RATES
#=================================================================
library(tidylog)
OverallReten_Data <- ALL_PRiSMA %>% drop_na(MOMID) %>%  
  mutate(DELIV_DSSTDAT_INF1 = if_else(FETAL_LOSS_DSDECOD=="Miscarriage/spontaneous abortion",FETAL_LOSS_DSSTDAT,DELIV_DSSTDAT_INF1)) %>% 
  select(MOMID,CON_DSSTDAT,FETAL_LOSS_DSDECOD,FETAL_LOSS_DSSTDAT,MAT_VISIT_MNH04,TYPE_VISIT,ANC_OBSSTDAT,DELIV_DSSTDAT_INF1,CLOSE_DSSTDAT,visit_date) %>% 
  group_by(MOMID,TYPE_VISIT) %>% fill(DELIV_DSSTDAT_INF1) %>% ungroup() %>%
  full_join(ALL_PRiSMA %>% filter(TYPE_VISIT == "Enrollment") %>% distinct(MOMID,.keep_all = T) %>%
              select(MOMID,CON_DSSTDAT, TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,US_OHOSTDAT, US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1,visit_date) %>% 
              mutate(CON_DSSTDAT = as.Date(CON_DSSTDAT,"%d/%m/%Y"),
                     GA_days = (as.double(US_GA_WKS_AGE_FTS1)*7) + as.double(US_GA_DAYS_AGE_FTS1)) %>%
              mutate(ANC_20_Actual_Date = ((20 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_20_Earliest_Date = ANC_20_Actual_Date - 14,
                     ANC_20_Latest_Date = ANC_20_Actual_Date + 20,
                     ANC_20_Latest_Date_LW = ANC_20_Actual_Date + 41,
                     ANC_28_Actual_Date = ((28 *7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_28_Earliest_Date = ANC_28_Actual_Date - 14,
                     ANC_28_Latest_Date = ANC_28_Actual_Date + 20,
                     ANC_32_Actual_Date = ((32 * 7) - GA_days)  + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_32_Earliest_Date = ANC_32_Actual_Date - 7,
                     ANC_32_Latest_Date = ANC_32_Actual_Date + 13,
                     ANC_36_Actual_Date = ((36 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_36_Earliest_Date = ANC_36_Actual_Date - 14,
                     ANC_36_Latest_Date = ANC_36_Actual_Date + 20) %>%
              select(MOMID, CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC, US_GA_WKS_AGE_FTS1, US_GA_DAYS_AGE_FTS1,
                     ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date,ANC_28_Earliest_Date,
                     ANC_28_Actual_Date, ANC_28_Latest_Date, ANC_32_Earliest_Date, ANC_32_Actual_Date,
                     ANC_32_Latest_Date, ANC_36_Earliest_Date, ANC_36_Actual_Date, ANC_36_Latest_Date,GA_days)
            ) %>% 
  filter(complete.cases(visit_date))
# -- consider miscarriages
# To be removed
RM_ANC20 <- OverallReten_Data %>% filter(TYPE_VISIT=="IPC") %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-20") %>% select(MOMID)) %>% 
  filter(DELIV_DSSTDAT_INF1<ANC_20_Earliest_Date|between(DELIV_DSSTDAT_INF1,ANC_20_Earliest_Date,ANC_20_Latest_Date)) %>% distinct(MOMID,.keep_all = T) %>%
  full_join( OverallReten_Data %>% drop_na(CLOSE_DSSTDAT) %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-20") %>% select(MOMID)) %>% 
               filter(CLOSE_DSSTDAT<ANC_20_Earliest_Date|between(CLOSE_DSSTDAT,ANC_20_Earliest_Date,ANC_20_Latest_Date))%>% distinct(MOMID)) %>% select(MOMID)

RM_ANC28 <- OverallReten_Data %>% filter(TYPE_VISIT=="IPC") %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-28") %>% select(MOMID)) %>% 
  filter(DELIV_DSSTDAT_INF1<ANC_28_Earliest_Date|between(DELIV_DSSTDAT_INF1,ANC_28_Earliest_Date,ANC_28_Latest_Date)) %>% distinct(MOMID,.keep_all = T) %>%
  full_join(OverallReten_Data %>% drop_na(CLOSE_DSSTDAT) %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-28") %>% select(MOMID)) %>% 
              filter(CLOSE_DSSTDAT<ANC_28_Earliest_Date|between(CLOSE_DSSTDAT,ANC_28_Earliest_Date,ANC_28_Latest_Date))%>% distinct(MOMID)) %>% select(MOMID)

RM_ANC32 <- OverallReten_Data %>% filter(TYPE_VISIT=="IPC") %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-32") %>% select(MOMID)) %>% 
  filter(DELIV_DSSTDAT_INF1<ANC_32_Earliest_Date|between(DELIV_DSSTDAT_INF1,ANC_32_Earliest_Date,ANC_32_Latest_Date)) %>% distinct(MOMID,.keep_all = T) %>%
  full_join(OverallReten_Data %>% drop_na(CLOSE_DSSTDAT) %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-32") %>% select(MOMID)) %>% 
              filter(CLOSE_DSSTDAT<ANC_32_Earliest_Date|between(CLOSE_DSSTDAT,ANC_32_Earliest_Date,ANC_32_Latest_Date))%>% distinct(MOMID)) %>% select(MOMID)

RM_ANC36 <- OverallReten_Data %>% filter(TYPE_VISIT=="IPC") %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-36") %>% select(MOMID)) %>% 
  filter(DELIV_DSSTDAT_INF1<ANC_36_Earliest_Date|between(DELIV_DSSTDAT_INF1,ANC_36_Earliest_Date,ANC_36_Latest_Date)) %>% distinct(MOMID,.keep_all = T) %>%
  full_join(OverallReten_Data %>% drop_na(CLOSE_DSSTDAT) %>% anti_join(OverallReten_Data %>% filter(TYPE_VISIT=="ANC-36") %>% select(MOMID)) %>% 
              filter(CLOSE_DSSTDAT<ANC_36_Earliest_Date|between(CLOSE_DSSTDAT,ANC_36_Earliest_Date,ANC_36_Latest_Date))%>% distinct(MOMID)) %>% select(MOMID)

#Enrollment
ENROLMNTS <- OverallReten_Data %>% filter(TYPE_VISIT == "Enrollment") %>%
  distinct(MOMID,.keep_all = T) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,GA_days,CON_DSSTDAT,
         ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date,ANC_28_Earliest_Date,
         ANC_28_Latest_Date,ANC_28_Actual_Date, ANC_32_Earliest_Date,
         ANC_32_Latest_Date,ANC_32_Actual_Date, ANC_36_Earliest_Date,ANC_36_Actual_Date, ANC_36_Latest_Date) %>%
  mutate(current_Ga = GA_days + as.numeric(today()-CON_DSSTDAT),
         status = paste0("Expected"))

# ANC 20
ANC_20Rete_expec <- ENROLMNTS  %>% filter(current_Ga>=126) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,status, ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date) %>%
  rename(Earliest_Date = ANC_20_Earliest_Date, Actual_Date = ANC_20_Actual_Date, Latest_Date = ANC_20_Latest_Date) %>%
  anti_join(RM_ANC20) #%>% view()

ANC_20_retent <- OverallReten_Data %>% filter(TYPE_VISIT=="ANC-20") %>% distinct() %>%
  select(MOMID,visit_date) %>% mutate(status = paste0("Retained")) %>%  distinct() #%>% view()

ANC20_merged <- ANC_20Rete_expec %>% full_join(ANC_20_retent) %>% group_by(MOMID) %>%
  fill(SCRN_FAC_SPFY_OBSLOC,visit_date,Earliest_Date,Latest_Date,Actual_Date,.direction = "updown") %>%
  mutate(TYPE_VISIT =paste0("ANC-20")) #%>% view()

# ANC 28
ANC_28Rete_expec <- ENROLMNTS  %>% filter(current_Ga>=182) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,status, ANC_28_Earliest_Date,ANC_28_Actual_Date,ANC_28_Latest_Date) %>%
  rename(Earliest_Date = ANC_28_Earliest_Date, Actual_Date = ANC_28_Actual_Date, Latest_Date = ANC_28_Latest_Date) %>% anti_join(RM_ANC28)

ANC_28_retent <- OverallReten_Data %>% filter(TYPE_VISIT=="ANC-28") %>% distinct() %>%
  select(MOMID,visit_date) %>% mutate(status = paste0("Retained")) %>%  distinct()# %>% view()


ANC28_merged <- ANC_28Rete_expec %>% full_join(ANC_28_retent) %>% group_by(MOMID) %>%
  fill(SCRN_FAC_SPFY_OBSLOC,visit_date,Earliest_Date,Latest_Date,Actual_Date,.direction = "updown") %>%
  mutate(TYPE_VISIT =paste0("ANC-28"))


# ANC 32
ANC_32Rete_expec <- ENROLMNTS  %>% filter(current_Ga>=217) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,status, ANC_32_Earliest_Date,ANC_32_Actual_Date,ANC_32_Latest_Date) %>%
  rename(Earliest_Date = ANC_32_Earliest_Date,Actual_Date = ANC_32_Actual_Date, Latest_Date = ANC_32_Latest_Date) %>% anti_join(RM_ANC32)

ANC_32_retent <- OverallReten_Data %>% filter(TYPE_VISIT=="ANC-32") %>% distinct() %>%
  select(MOMID,visit_date) %>% mutate(status = paste0("Retained")) %>%  distinct() #%>% view()


ANC32_merged <- ANC_32Rete_expec %>% full_join(ANC_32_retent) %>% group_by(MOMID) %>%
  fill(SCRN_FAC_SPFY_OBSLOC,visit_date,Earliest_Date,Latest_Date,Actual_Date,.direction = "updown") %>%
  mutate(TYPE_VISIT =paste0("ANC-32"))


# ANC 36
ANC_36Rete_expec <- ENROLMNTS  %>% filter(current_Ga>=238) %>%
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,status, ANC_36_Earliest_Date,ANC_36_Actual_Date,ANC_36_Latest_Date) %>%
  rename(Earliest_Date = ANC_36_Earliest_Date, Actual_Date = ANC_36_Actual_Date, Latest_Date = ANC_36_Latest_Date) %>% anti_join(RM_ANC36)

ANC_36_retent <- OverallReten_Data %>% filter(TYPE_VISIT=="ANC-36") %>% distinct() %>%
  select(MOMID,visit_date) %>% mutate(status = paste0("Retained")) %>%  distinct() #%>% view()


ANC36_merged <- ANC_36Rete_expec %>% full_join(ANC_36_retent) %>% group_by(MOMID) %>%
  fill(SCRN_FAC_SPFY_OBSLOC,visit_date,Earliest_Date,Latest_Date,Actual_Date,.direction = "updown") %>%
  mutate(TYPE_VISIT =paste0("ANC-36"))


#-------------------------------------------------------------------------------------------
# all data
# shld be 36
anc20_32 <- bind_rows(ANC20_merged,ANC28_merged,ANC32_merged,ANC36_merged) %>% 
  mutate(Retention = if_else(status =="Retained"&between(visit_date,Earliest_Date,Latest_Date),"Retained","Missed visit"),
         Retention = if_else(status == "Expected","Expected",Retention)) %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Lumumba Sub County Hospital","Lumumba Sub-County\n Hospital"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Siaya County Referral Hospital","Siaya County\n Referral Hospital")) #%>% View()

anc20_36 <- anc20_32 %>% filter(Latest_Date<=ymd("2024-03-31")) #%>% anti_join(three_cons_vists)

missed_visits <- anc20_36 %>% filter(!complete.cases(visit_date)) %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,Earliest_Date,Actual_Date,Latest_Date) %>% 
  left_join(ALL_PRiSMA1 %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,MAT_VISIT_MNH04)) %>% group_by(MOMID) %>% 
  mutate(index = row_number()) %>% ungroup() # %>% 

# more than three Missed visits

three_cons_vists <- missed_visits %>% filter((TYPE_VISIT=="ANC-32" & index==3)|(TYPE_VISIT=="ANC-36" & index==4)) %>% distinct(MOMID) %>% 
 mutate(TYPE_VISIT="ANC-36") #%>% View()
  
missed_vsts <- missed_visits %>% anti_join(three_cons_vists)

anc20_32 <- anc20_36 %>% anti_join(three_cons_vists)
#----------------------------------------------------------------------------------------



overall_reten <- anc20_32 %>% 
  #filter(between(Actual_Date,ymd(input$overalStart),ymd(input$overalEnd))) %>%
  group_by(TYPE_VISIT) %>% count(Retention) %>% ungroup() %>% filter(Retention!="Missed visit") #%>% View()

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "TYPE_VISIT",names_from = "Retention",values_from = n ) %>%
  mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
  mutate(Retention = "Expected")

overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  #filter(between(Actual_Date,ymd(input$overalStart),ymd(input$overalEnd))) %>%
  group_by(SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = c("SCRN_FAC_SPFY_OBSLOC","TYPE_VISIT"),names_from = "Retention",values_from = "n" ) %>%
  mutate(prop = (round(Retained/Expected,3)*100)) %>% select(SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,prop) %>% 
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "TYPE_VISIT",values_from = "prop") %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kisumu County Hospital","KCRH"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kuoyo Health Center","KUOYO"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Lumumba Sub-County\n Hospital","LUMUMBA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Siaya County\n Referral Hospital","SIAYA"))
overall_table <- overall_reten %>%
  pivot_wider(id_cols = c("SCRN_FAC_SPFY_OBSLOC","TYPE_VISIT"),names_from = "Retention",values_from = "n" ) %>%
  mutate(prop = (round(Retained/Expected,3)*100)) %>% select(SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,prop) %>% 
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "TYPE_VISIT",values_from = "prop") %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kisumu County Hospital","KCRH"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kuoyo Health Center","KUOYO"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Lumumba Sub-County\n Hospital","LUMUMBA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Siaya County\n Referral Hospital","SIAYA"))

#  overall_props %>% select(SCRN_FAC_SPFY_OBSLOC,`ANC-20`,`ANC-28`,`ANC-32`,`ANC-36`) %>% 
#    ggspider(polygon = F,
#           fill_opacity = .2,
#        scaled = F,
#        background_color = c("#F9FAF0"),
#        area_fill = T,
#        draw_axis = T,
#        n_labels = 6,
#        axis_label_font_size = 3.8,
#        axis_name_font_size = 5,
#        axis_label_font_face = 7,
#        axis_name_font_face = 7) +
#    labs(title = "Overall ANC Retention rates") +
# theme(axis.text = element_text(size = 1),
#       plot.title = element_text(hjust = 0.3,size = 16),
#       legend.text = element_text(size = 14,face = "bold"),
#       legend.title = element_blank())
#  



```

::: panel-tabset
#### Visit types

```{r}
#| label: fig-overallancvist
#| fig-cap: "Overall ANC Retention by Visit type"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

# overall retention rate

overall_reten <- anc20_32 %>% 
  filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  group_by(TYPE_VISIT) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "TYPE_VISIT",names_from = "Retention",values_from = n ) %>%
  mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

ANCs_Prop <- overall_props

overall_props %>% ggplot(aes(TYPE_VISIT,prop))+
  geom_col(width = .3,color = "gray50",alpha =1,fill = "lavender") +
  labs(x = "",
       title = "Overall ANC Retention by Visit type",
       y = "Percentages (%)")+
   scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue"))


# 
# 
# overall_reten <- anc20_32 %>% 
#   filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   group_by(TYPE_VISIT) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "TYPE_VISIT",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(TYPE_VISIT,n,fill=Retention))+
#   geom_col(position = position_dodge(0.4),width = .4,color = "gray50",alpha =.5) +
#   labs(x = "",
#        #title = "Overall ANC Retention by Visit type",
#        y = "Number of Participants")+
#   #subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 4,alpha=10,color="black")+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#    scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 10),
#         axis.title = element_text(face = "italic",colour = "darkblue",size = 12),
#         legend.text = element_text(size = 10),
#         legend.key.width = unit(2,units = "cm"),
#        # panel.background = element_rect(colour = "darkblue"),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue"))+
#     scale_y_continuous(limits = c(0, max(overall_reten$n)+10))+
#   geom_text(data = overall_props, aes(x=TYPE_VISIT,y=Expected,label=prop),vjust=-.8,size = 4,color="black")

```

#### Facilities

```{r}
#| label: fig-overallancfac
#| fig-cap: "Overall ANC Retention by Facilities" 
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
  mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

overall_props %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,prop))+
  geom_col(width = .3,color = "black",alpha =.7,fill = "#98FB98") +
  labs(x = "",
       title = "Overall ANC Retention by Facilities",
       y = "Number of Participants")+
  # subtitle = "2023-07-01 to 2023-07-31")+
  
  scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue")) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County\n Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub-County\n Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi \n Health Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))

  # code for preg. outcome table
overall_AncRetention <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
  mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")


# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,n,fill=Retention))+
#   geom_col(position = position_dodge(0.5),width = .5,color = "black",alpha =.7) +
#   labs(x = "",
#        title = "Overall ANC Retention by Facilities",
#        y = "Number of Participants")+
#   # subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 3.5,alpha=10,color="black")+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#   # scale_fill_viridis_d(option = "E",alpha = 0.2)+
#   
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
#         axis.title = element_text(face = "italic",colour = "black",size = 12),
#         legend.text = element_text(size = 14),
#         legend.position = "bottom",
#        #legend.key.width = unit(2,units = "cm"),
#        # panel.background = element_rect(colour = "darkblue"),
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 14,color = "black",face = "italic"),
#         plot.subtitle = element_text(hjust = 0.1,size = 16,color = c("#838B8B"),face = "italic"))+
#   scale_y_continuous(limits = c(0, max(overall_reten$n)+100))+
#   geom_text(data = overall_props, aes(x=SCRN_FAC_SPFY_OBSLOC,y=Expected,label=prop),vjust=-.8,size = 4.5,color="black") +
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County\n Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub-County\n Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
# 
# 
# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% filter(SCRN_FAC_SPFY_OBSLOC=="Kisumu County Hospital") #%>% View()

```

#### ANC-20

```{r}
#| label: fig-overallanc20
#| fig-cap: "Overall ANC-20 Retention by Facilities" 
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5


overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  
  filter(TYPE_VISIT == "ANC-20") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
 mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

overall_props %>%  ggplot(aes(SCRN_FAC_SPFY_OBSLOC,prop))+
   geom_col(width = .3,color = "black",alpha =.7,fill = "#FFA500") +#c("#FFA500")
  labs(x = "",
       title = "ANC-20 Retention",
       y = "Number of Participants")+
    scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue")) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County\n Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub-County\n Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))


# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   
#   filter(TYPE_VISIT == "ANC-20") %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,n,fill=Retention))+
#   geom_col(position = position_dodge(0.5),width = .5,color = "black",alpha =.7) +
#   labs(x = "",
#        title = "ANC-20 Retention",
#        y = "Number of Participants")+
#   #subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 4.5,alpha=10,color="black")+
#    scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#   # scale_fill_viridis_d(option = "E",alpha = 0.2)+
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 10),
#         axis.title = element_text(face = "italic",colour = "darkblue",size = 12),
#         legend.text = element_text(size = 10),
#         #panel.background = element_rect(colour = "darkblue"),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue",face = "italic"))+
#     scale_y_continuous(limits = c(0, max(overall_reten$n)+10))+
#   geom_text(data = overall_props, aes(x=SCRN_FAC_SPFY_OBSLOC,y=Expected,label=prop),vjust=-.8,size = 4.5,color="black") +
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County\n Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub-County\n Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
```

#### ANC-28

```{r}
#| label: fig-overallanc28
#| fig-cap: "Overall ANC-28 Retention by Facilities" 
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  filter(TYPE_VISIT == "ANC-28") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
  mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

overall_props %>%  ggplot(aes(SCRN_FAC_SPFY_OBSLOC,prop))+
   geom_col(width = .3,color = "black",alpha =.7,fill = "#FFA500") +
  labs(x = "",
       title = "ANC-28 Retention",
       y = "Number of Participants")+
    scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue")) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County\n Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub-County\n Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi \n Health Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))



# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   filter(TYPE_VISIT == "ANC-28") %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,n,fill=Retention))+
#   geom_col(position = position_dodge(0.5),width = .5,color = "black",alpha =.7) +
#   labs(x = "",
#        title = "ANC-28 Retention",
#        y = "Number of Participants")+
#   #subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 4.5,alpha=10,color="black")+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#    scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
#   # scale_fill_viridis_d(option = "E",alpha = 0.2)+
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 10),
#         axis.title = element_text(face = "italic",colour = "darkblue",size = 12),
#         legend.text = element_text(size = 10),
#         #panel.background = element_rect(colour = "darkblue"),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue"))+
#     scale_y_continuous(limits = c(0, max(overall_reten$n)+10))+
#   geom_text(data = overall_props, aes(x=SCRN_FAC_SPFY_OBSLOC,y=Expected,label=prop),vjust=-.8,size = 4.5,color="black") +
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County\n Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub-County\n Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
```

#### ANC-32

```{r}
#| label: fig-overallanc32
#| fig-cap: "Overall ANC-32 Retention by Facilities" 
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5


overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  filter(TYPE_VISIT == "ANC-32") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
 mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

overall_props %>%  ggplot(aes(SCRN_FAC_SPFY_OBSLOC,prop))+
   geom_col(width = .3,color = "black",alpha =.7,fill = "#FFA500") +
  labs(x = "",
       title = "ANC-32 Retention",
       y = "Number of Participants")+
  #subtitle = "2023-07-01 to 2023-07-31")+
      scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue")) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County\n Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub-County\n Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
  
# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   filter(TYPE_VISIT == "ANC-32") %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,n,fill=Retention))+
#   geom_col(position = position_dodge(0.5),width = .5,color = "black",alpha =.7) +
#   labs(x = "",
#        title = "ANC-32 Retention",
#        y = "Number of Participants")+
#   #subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 4.5,alpha=10,color="black")+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#   # scale_fill_viridis_d(option = "E",alpha = 0.2)+
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 10),
#         axis.title = element_text(face = "italic",colour = "darkblue",size = 12),
#         legend.text = element_text(size = 10),
#        # panel.background = element_rect(colour = "darkblue"),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue", face = "italic"))+
#    scale_y_continuous(limits = c(0, max(overall_reten$n)+10))+
#   geom_text(data = overall_props, aes(x=SCRN_FAC_SPFY_OBSLOC,y=Expected,label=prop),vjust=-.8,size = 4.5,color="black") +
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County\n Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub-County\n Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
```

#### ANC-36

```{r}
#| label: fig-overallanc36
#| fig-cap: "Overall ANC-36 Retention by Facilities" 
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5


overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
  filter(TYPE_VISIT == "ANC-36") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")

overall_props <- overall_reten %>%
  pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
 mutate(prop = as.numeric(paste0(round(Retained/Expected,3)*100))) %>%
  mutate(Retention = "Expected")

overall_props %>%  ggplot(aes(SCRN_FAC_SPFY_OBSLOC,prop))+
   geom_col(width = .3,color = "black",alpha =.7,fill = "#FFA500") +
  labs(x = "",
       title = "ANC-36 Retention",
       y = "Number of Participants")+
    #subtitle = "2023-07-01 to 2023-07-31")+
      scale_y_continuous(limits = c(0, max(overall_props$prop)+10))+
  #subtitle = "2023-07-01 to 2023-07-31")+
  geom_text(aes(label=paste0(prop,"%")),vjust= -1,size = 4.5,alpha=10,color="black")+
   theme_pander() +  #scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
   #scale_y_continuous(limits = c(0, max(overall_reten$n)+40))+
  theme(axis.text = element_text(face = "italic",colour = "black",size = 12),
        axis.title = element_text(face = "italic",colour = "darkblue",size = 16),
        legend.text = element_text(size = 10),
        #legend.key.width = unit(2,units = "cm"),
        panel.border = element_rect(colour = "gray"),
        legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue")) +
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County\n Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub-County\n Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))
  


# overall_reten <- anc20_32 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>%
#   filter(TYPE_VISIT == "ANC-36") %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention)%>% ungroup() %>% filter(Retention!="Missed visit")
# 
# overall_props <- overall_reten %>%
#   pivot_wider(id_cols = "SCRN_FAC_SPFY_OBSLOC",names_from = "Retention",values_from = n ) %>%
#   mutate(prop = paste0(round(Retained/Expected,3)*100,"%")) %>%
#   mutate(Retention = "Expected")
# 
# overall_reten %>% ggplot(aes(SCRN_FAC_SPFY_OBSLOC,n,fill=Retention))+
#   geom_col(position = position_dodge(0.5),width = .5,color = "black",alpha =.7) +
#   labs(x = "",
#        title = "ANC-36 Retention",
#        y = "Number of Participants")+
#   #subtitle = "2023-07-01 to 2023-07-31")+
#   geom_text(aes(label=n),position = position_dodge(0.5),vjust= 2,size = 4.5,alpha=10,color="black")+
#    theme_pander() +  scale_fill_manual(values = c("#FFBBFF", "#98FB98"))+ #c("#FFD39B", "#C1FFC1")
#   # scale_fill_viridis_d(option = "E",alpha = 0.2)+
#   theme(axis.text = element_text(face = "italic",colour = "black",size = 10),
#         axis.title = element_text(face = "italic",colour = "darkblue",size = 12),
#         legend.text = element_text(size = 10),
#         #panel.background = element_rect(colour = "darkblue",linewidth = .2),
#         legend.position = "bottom",
#         legend.title = element_blank(),
#         plot.title = element_text(hjust = 0.5,size = 15,color = "darkblue", face = "italic"))+
#    scale_y_continuous(limits = c(0, max(overall_reten$n)+10))+
#   geom_text(data = overall_props, aes(x=SCRN_FAC_SPFY_OBSLOC,y=Expected,label=prop),vjust=-.8,size = 4.5,color="black") +
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County\n Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub-County\n Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))

```

```{r}
#| label: fig-overallanctable
#| fig-cap: "Overall ANC Retention Rates"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 6.5

#### Table Format

ANC <- bind_rows(overall_table %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`ANC-20`,`ANC-28`,`ANC-32`,`ANC-36`) %>% rowwise() %>% 
                   mutate(`Mean` = rowMeans(across(where(is.numeric)),na.rm=T)),
                 overall_table %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`ANC-20`,`ANC-28`,`ANC-32`,`ANC-36`) %>% 
                   summarise(across(where(is.numeric), ~mean(.,na.rm = T))) %>% mutate(Facility = "Mean"))

overallANCreten <- mean(ANC$Mean,na.rm = T) 

# table
#options(digits = 3)
anctab <- gt(bind_rows(overall_table %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`ANC-20`,`ANC-28`,`ANC-32`,`ANC-36`) %>% rowwise() %>% 
               mutate(`Mean` = rowMeans(across(where(is.numeric)),na.rm=T)),
             overall_table %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`ANC-20`,`ANC-28`,`ANC-32`,`ANC-36`) %>% 
               summarise(across(where(is.numeric), ~mean(.,na.rm = T))) %>% mutate(Facility = "Mean")) %>% mutate(Mean = replace(Mean,Facility=="Mean",overallANCreten))) %>% 
  opt_table_outline(color = "black") %>% opt_table_lines() %>% 
  opt_vertical_padding(scale = 0.6) %>% 
  tab_header(title = md("**Overall ANC Retention Rates (%)**")) %>% 
  opt_vertical_padding(scale = 0.5) %>% 
  tab_style(style = cell_fill(color = c("#FFE4E1")),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_fill(color = c("white")),
            locations = cells_body()) %>%  
  tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
            locations = list(cells_body(),cells_column_labels())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
            locations = list(cells_body(),cells_footnotes())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
            locations = list(cells_column_labels()))
```

#### ANC Missed visits

```{r}
#| label: fig-ANCmissed
#| fig-cap: "Missed visits"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 11
#| fig-height: 5

cum <- missed_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC) %>%
  bind_rows(anc20_32 %>% filter(Retention=="Missed visit") %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(SCRN_FAC_SPFY_OBSLOC = "Cumulatively") # based on the ontime windows: for any query, remove late window visits

missed_vsts  %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC) %>% 
    bind_rows(anc20_32 %>% filter(Retention=="Missed visit") %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC)) %>% 
  group_by(TYPE_VISIT) %>% count(SCRN_FAC_SPFY_OBSLOC) %>% bind_rows(cum) %>% 

ggplot(aes(area = n,fill=TYPE_VISIT,
                           label = paste0(TYPE_VISIT,"\n","(",n,")")))+
  geom_treemap(lty = 1,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 10,
                    grow = F) +
  facet_wrap(~SCRN_FAC_SPFY_OBSLOC)+
  theme_minimal() +
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "none",
        legend.title = element_blank(),
        strip.text = element_text(
          size = 12,face = "italic",colour = "black"),
        legend.text = element_text(size = 11,face = "italic"))+
  scale_fill_manual(values = c("#FFEFDB", "#90EE90", "#FFF68F","#FABBBB"))
```
:::

```{r}
IPCdta <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit","14")) %>% 
  mutate(month_visit = zoo::as.yearmon(US_EDD_BRTHDAT_FTS1)) %>% 
  mutate(Cal_EDD = if_else(TYPE_VISIT == "Enrollment",US_EDD_BRTHDAT_FTS1,NA),
         IPC_status = if_else(TYPE_VISIT == "IPC","IPC: Available",NA)) %>% 
  group_by(MOMID) %>% fill(Cal_EDD,month_visit,IPC_status,.direction = "updown") %>% 
  mutate(IPC_status = if_else(is.na(IPC_status),"IPC: Missing/pending",IPC_status)) %>% 
  arrange(MOMID,TYPE_VISIT) %>% 
  mutate(rank = row_number(),max_rank = max(rank),
         last_seen = if_else(max_rank == rank,TYPE_VISIT,NA)) %>% 
fill(last_seen,.direction = "updown") %>% ungroup() %>% 

distinct(MOMID,.keep_all = T) %>% 
  filter(Cal_EDD <=ymd("2024-05-31")) %>% 
 # filter(US_EDD_BRTHDAT_FTS1 <=ymd("2024-03-31")) %>%
  select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,US_EDD_BRTHDAT_FTS1,Cal_EDD,month_visit,GA_today_weeks,IPC_status,last_seen) %>% 
  anti_join(ALL_PRiSMA %>% filter(complete.cases(CLOSE_DSSTDAT)) %>% 
  anti_join(ALL_PRiSMA %>% filter(complete.cases(CLOSE_DSSTDAT)) %>% filter(TYPE_VISIT=="IPC") %>% select(MOMID)) %>% distinct(MOMID)) #%>% View()
  
 # IPCdta %>% filter(IPC_status == "IPC: Missing/pending") %>% #filter(GA_today_weeks>=36) %>%
 #   arrange(Cal_EDD) %>% View()

IPCdta %>% filter(IPC_status=="IPC: Missing/pending") %>% View()
```

```{r}
# Lynda task --ipcs
# 
# IPCdta <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit","14")) %>%
#   mutate(month_visit = zoo::as.yearmon(US_EDD_BRTHDAT_FTS1)) %>%
#   mutate(Cal_EDD = if_else(TYPE_VISIT == "Enrollment",US_EDD_BRTHDAT_FTS1,NA),
#          IPC_status = if_else(TYPE_VISIT == "IPC","IPC: Available",NA)) %>%
#   group_by(MOMID) %>% fill(Cal_EDD,month_visit,IPC_status,.direction = "updown") %>%
#   mutate(IPC_status = if_else(is.na(IPC_status),"IPC: Missing/pending",IPC_status)) %>%
#   arrange(MOMID,TYPE_VISIT) %>%
#   mutate(rank = row_number(),max_rank = max(rank),
#          last_seen = if_else(max_rank == rank,TYPE_VISIT,NA)) %>%
# fill(last_seen,.direction = "updown") %>% ungroup() %>%
# 
# distinct(MOMID,.keep_all = T) %>%
#    filter(Cal_EDD <=ymd("2024-03-31")) %>%
#   #filter(Cal_EDD>=ymd("2024-03-01")&Cal_EDD <=ymd("2024-03-31")) %>%
#   select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,US_EDD_BRTHDAT_FTS1,Cal_EDD,month_visit,GA_today_weeks,IPC_status,last_seen) %>%
#   anti_join(ALL_PRiSMA %>% filter(complete.cases(CLOSE_DSSTDAT)) %>%
#   anti_join(ALL_PRiSMA %>% filter(complete.cases(CLOSE_DSSTDAT)) %>% filter(TYPE_VISIT=="IPC") %>% select(MOMID)) %>% distinct(MOMID)) %>%
#   filter(IPC_status == "IPC: Missing/pending") %>% #filter(GA_today_weeks>=36) %>%
#    arrange(SCRN_FAC_SPFY_OBSLOC) %>% View()
```

### Intra-partum Care

::: panel-tabset
#### Monthly Expected IPCs

```{r}
#| label: fig-ipcretention
#| fig-cap: Intra-partum care (IPCs)
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 11
#| fig-height: 5

IPCdta_counts <- IPCdta %>% group_by(month_visit) %>% count(IPC_status) 

IPCdta_counts %>% mutate(percent = round((n/sum(n))*100,1)) %>% 
  ggplot(aes(x = factor(month_visit), y = n,fill = IPC_status)) +
  geom_col(position = position_dodge(0.9),color = "black") +
  labs(x = "", y = "Frequency",fill = "IPC status",#title = "IPCs performed by month"
       ) +
  scale_fill_manual(values = c("paleturquoise", "thistle")) +
  theme_classic2() +
  geom_text(aes(label = n, #paste0(n,"(",percent,"%)")
),
vjust = -1,position = position_dodge(0.9)) +
  theme(plot.title = element_text(hjust = .5,size = 12,face = "italic",color="blue"),
        axis.text = element_text(face = "italic",size = 14,angle = 90),
        legend.title = element_blank(),
        legend.position = "bottom",
        #legend.title = element_text(face = "bold",size = 16),
        legend.text =  element_text(face = "italic",size = 14),
        #legend.key.height = unit(1,"cm"),
        #legend.key.width = unit(2,"cm"),
        axis.title = element_text(face = "bold",size = 16)) +
  scale_y_continuous(limits = c(0,max(IPCdta_counts$n)+5))
```

#### Missed IPC's

```{r}
IPCdta %>%  filter(Cal_EDD <=ymd("2024-05-31")) %>% 
filter(IPC_status =="IPC: Missing/pending") %>% 
group_by(month_visit) %>% count(SCRN_FAC_SPFY_OBSLOC) %>% 
ggplot(aes(x = factor(month_visit), y = n)) +
  geom_col(width =.4,color = "gray50",fill = c("#FFE1FF")) +
  theme_bw() + labs(y = "")+
  geom_text(aes(label = n),vjust=2,color = "black") +
facet_wrap(vars(SCRN_FAC_SPFY_OBSLOC),scales = "free") +
theme(axis.text.x = element_text(angle = 90,face="italic",size = 12),
strip.background = element_rect(fill="gray97"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
#axis.text.y = element_text(face="italic",size = 12,color="black"),
strip.text = element_text(size= 10),
axis.title.x = element_blank())

```
:::

```{r}
# #| label: fig-ipclastseen
# #| fig-cap: Distribution of their last seen visits
# #| out-width: "310px"
# #| echo: false
#   ::: {layout-ncol="2" layout-valign="bottom"}
# IPCdta %>% filter(IPC_status == "IPC: Missing/pending") %>% arrange(Cal_EDD) %>% 
#   droplevels() %>% tabyl(last_seen) %>% adorn_pct_formatting() %>% adorn_totals() %>% 
#   rename(`Last seen` = last_seen) %>% 
# gt() %>% tab_header(title = "Distribution of their last seen visits") %>% 
#   opt_row_striping()
# :::
```

### ANC-PNC On-Time Retention Rates

```{r}
#| label: fig-pncRet
#| fig-cap: "Overal PNC Retention rate"
#| column: screen-inset-right
#| echo: false
#| warning: false
#| fig-height: 6.5

#                               PNC RETENTION RATES    
#-------------------------------------------------------------------------------------
# Fetal losses
ftl_loses <- ALL_PRiSMA %>% drop_na(MOMID) %>%
    select(MOMID,Ga_Enrollment,CON_DSSTDAT,INFANTID,TYPE_VISIT,visit_date,Ga_visit_weeks,FETAL_LOSS_DSDECOD,FETAL_LOSS_DSSTDAT,
           BIRTH_DSTERM_INF1,BIRTH_DSTERM_INF2,DELIV_DSSTDAT_INF1) %>% 
  mutate(FETAL_LOSS_DSDECOD = replace(FETAL_LOSS_DSDECOD, FETAL_LOSS_DSDECOD==77,NA)) %>% 
    mutate(is_ga_wk_20wks = if_else(BIRTH_DSTERM_INF1 == "Fetal death",(as.numeric(DELIV_DSSTDAT_INF1 - CON_DSSTDAT) + Ga_Enrollment)/7,NA)) %>% 
  mutate(stillbirth = if_else(is_ga_wk_20wks>=20,"Yes",as.character(NA)),
         miscarriage = if_else(FETAL_LOSS_DSDECOD == "Miscarriage/spontaneous abortion","Yes",as.character(NA)),
         stillbirth1 = replace(stillbirth,BIRTH_DSTERM_INF1 == "Live birth","No"),
         stillbirth2 = if_else(BIRTH_DSTERM_INF2=="Fetal death","Yes",NA)) %>% group_by(MOMID) %>% 
  fill(stillbirth1,stillbirth2,miscarriage,.direction = "updown") %>% mutate(stillbirth1 = replace(stillbirth1,is.na(stillbirth1)&FETAL_LOSS_DSDECOD == "Stillbirth","Yes")) #%>% view()

# Fetal loses beolw 20 weeks -- followed up to PNC-6
fetal_loss_less_20wks <- ftl_loses %>%  filter(miscarriage == "Yes") %>%  distinct(MOMID,.keep_all = T) %>%
  anti_join( ftl_loses %>%  filter(TYPE_VISIT == "IPC",stillbirth1 == "Yes") %>%  distinct(MOMID)) 

# Fetal loss above 20weeks -- followed upto PNC-52
fetal_loss_above_20wks <- ftl_loses %>%  filter(TYPE_VISIT == "IPC",stillbirth1 == "Yes") %>%  distinct(MOMID)

# Neeonatal deaths - Followed upto PNC-52

infant_closeout <- read_rds(here("Data","MNH24_Infant_close_out.rds"))
Neon_deaths <- ALL_PRiSMA %>% drop_na(MOMID) %>% group_by(MOMID) %>% 
  fill(BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15,.direction = "updown") %>% 
  ungroup() %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% 
  select(MOMID,TYPE_VISIT,BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15) %>% 
  mutate(Neonatal_death = if_else(INF_VITAL_MNH11 == "Died"|INF_VITAL_MNH13 == "Died"|INF_VITAL_MNH14== "Died"|INF_VITAL_MNH15== "Died","Yes",NA)) %>% 
  filter(Neonatal_death == "Yes") %>% distinct(MOMID) %>% full_join(infant_closeout %>% filter(MOMID%in%c("KEARC01006","KEARC00102")) %>% distinct(MOMID))


# making the IPC data
IPC_data <- ALL_PRiSMA %>% drop_na(MOMID) %>%  filter(TYPE_VISIT=="IPC") %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,DELIV_DSSTDAT_INF1,CLOSE_DSSTDAT) %>% 
  group_by(MOMID) %>% fill(DELIV_DSSTDAT_INF1,.direction = "updown") %>% distinct(MOMID,.keep_all = T) %>%   
  drop_na(DELIV_DSSTDAT_INF1) %>% ungroup() %>% 
  mutate(PNC_0_Actual_Date = DELIV_DSSTDAT_INF1 +3,
         PNC_0_Latest_Date = DELIV_DSSTDAT_INF1 +5,
         PNC_1_Actual_Date = DELIV_DSSTDAT_INF1 +7,
         PNC_1_Latest_Date = DELIV_DSSTDAT_INF1 +14,
         PNC_4_Actual_Date = DELIV_DSSTDAT_INF1 +28,
         PNC_4_Latest_Date = DELIV_DSSTDAT_INF1 +35,
         PNC_6_Actual_Date = DELIV_DSSTDAT_INF1 +42,
         PNC_6_Latest_Date = DELIV_DSSTDAT_INF1 +55,
         
         # PNC-6 late windows
         #-------------------------------------------
         PNC_6_Late_WindowS = DELIV_DSSTDAT_INF1 +56,
         PNC_6_Late_WindowE = DELIV_DSSTDAT_INF1 +90,
         #------------------------------------------
         
         PNC_26_Actual_Date = DELIV_DSSTDAT_INF1 +182,
         PNC_26_Latest_Date = DELIV_DSSTDAT_INF1 +202,
         
         # PNC-26 late windows
         #-------------------------------------------
         PNC_26_Late_WindowS = DELIV_DSSTDAT_INF1 +203,
         PNC_26_Late_WindowE = DELIV_DSSTDAT_INF1 +279,
         #-------------------------------------------
         
         PNC_52_Actual_Date = DELIV_DSSTDAT_INF1 +364,
         PNC_52_Latest_Date = DELIV_DSSTDAT_INF1 +384,
         
         # PNC-52 late windows
         #-------------------------------------------
         PNC_52_Late_WindowS = DELIV_DSSTDAT_INF1 +385,
         PNC_52_Late_WindowE = DELIV_DSSTDAT_INF1 +454)



# To be removed
PNC_0_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_0_Actual_Date)
PNC_1_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_1_Actual_Date)
PNC_4_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_4_Actual_Date)
PNC_6_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_6_Actual_Date)
PNC_26_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_26_Actual_Date)
PNC_52_clsd <- IPC_data %>% filter(CLOSE_DSSTDAT<PNC_52_Actual_Date)


# pnc 0 retention
pnc_0_ret <- IPC_data %>% filter(PNC_0_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_0_Actual_Date,latest_date = PNC_0_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-0") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-0") %>% 
  anti_join(PNC_0_clsd) #%>% View()


# pnc 1 retention
pnc_1_ret <- IPC_data %>% filter(PNC_1_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_1_Actual_Date,latest_date = PNC_1_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-1") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-1") %>% 
  anti_join(PNC_1_clsd) #%>% View()

# pnc 4 retention
pnc_4_ret <- IPC_data %>% filter(PNC_4_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_4_Actual_Date,latest_date = PNC_4_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-4") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-4") %>% 
  anti_join(PNC_4_clsd) #%>% View()


# pnc 6 retention
pnc_6_ret <- IPC_data %>% 
  filter(PNC_6_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_6_Actual_Date,latest_date = PNC_6_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-6") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-6") %>% 
   anti_join(PNC_6_clsd) #%>% View()

# pnc 26 retention
pnc_26_ret <- IPC_data %>% filter(PNC_26_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_26_Actual_Date,latest_date = PNC_26_Latest_Date) %>% #anti_join(fetal_loss_less_20wks) %>% 
  left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
              group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-26") %>% 
              distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-26") %>% 
 anti_join(PNC_26_clsd) %>% anti_join(fetal_loss_less_20wks) #%>% View()

# pnc 52 retention
pnc_52_ret <- IPC_data %>% filter(PNC_52_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_52_Actual_Date,latest_date = PNC_52_Latest_Date) %>% #anti_join(fetal_loss_less_20wks) %>% 
  left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
              group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-52") %>% 
              distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-52") %>% 
  anti_join(PNC_52_clsd) %>% anti_join(fetal_loss_less_20wks) #%>% View()


all_pnc0_52 <- bind_rows(pnc_0_ret,pnc_1_ret,pnc_4_ret,pnc_6_ret,pnc_26_ret,pnc_52_ret)

pnc_re <-  all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Lumumba Sub County Hospital","LUMUMBA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Siaya County Referral Hospital","SIAYA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kisumu County Hospital","KCRH"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kuoyo Health Center","KUOYO")) %>% 
  group_by(TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>%
  select(TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,percent) %>% 
  pivot_wider(id_cols = SCRN_FAC_SPFY_OBSLOC,names_from = TYPE_VISIT,values_from = percent) %>% tibble::as_tibble()
```

::: panel-tabset
#### ANC-20 to PNC-52

```{r}
#| label: fig-overallanc_pnc52_ontime
#| fig-cap: "ANC & PNC Retention Ontime Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

pnc_ontime <- all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  group_by(TYPE_VISIT) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") 

ANCs_Prop %>% select(TYPE_VISIT,percent = prop) %>% bind_rows(pnc_ontime %>% select(TYPE_VISIT,percent)) %>% 
  mutate(TYPE_VISIT = fct_relevel(TYPE_VISIT,"ANC-20","ANC-28","ANC-32","ANC-36","PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")) %>% 
  ggplot(aes(x=TYPE_VISIT,y = percent)) +
  geom_col(width = 0.3,alpha=.6,colour="black",fill = c("darksalmon")) +
 # geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4,alpha=15) +
  labs(x=NULL, y = "Percent (%)", #title = paste0("Overall Retention Rates")
       )+
   scale_fill_viridis_d() +
  theme_light()+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+ 

   scale_y_continuous(limits = c(0,110),breaks = seq(0,110,20))
```

#### Facilities

```{r}
#| label: fig-overallpncfac
#| fig-cap: "Overall PNC Retention Rate by Facilities"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5


fac_ontime<- all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") 

# fac_late <- all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
#   # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
#   mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained")

  fac_ontime %>% ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"\n(",percent,"%)")),vjust =-.6,size = 4.5,alpha=15,colour ="black") +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15,colour ="black") +  
  labs(x=NULL, y = "Percent (%)", title = paste0("Overall PNC Retention Rate"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_fill_viridis_d(option = "A",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "italic"),
        axis.title = element_text(size = 18,color = "black", face = "italic"),
        panel.border = element_rect(colour = "gray",linewidth = 1),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "italic",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,max(fac_ontime$percent) + 10))


  # code for preg. outcome table
  overall_PncRetention <- all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") 
  

  
# fac_ontime<- all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
#   # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
#   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
#   mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") 
# 
# # fac_late <- all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
# #   # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
# #   group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
# #   mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained")
# 
#   fac_ontime %>% ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
#   geom_col(width = 0.3,alpha=.5,color="black") +
#   geom_text(aes(label = paste0(n,"\n(",percent,"%)")),vjust =-.6,size = 4.5,alpha=15,colour ="black") +
#   labs(x=NULL, y = "Percent (%)", title = paste0("Overall PNC Retention Rate"))+
#   #subtitle = "2023-07-01 to 2023-07-31") +
#   theme_pander() +
#   scale_fill_viridis_d(option = "A",alpha = 1)+
#   theme(legend.position = "none",
#         axis.text = element_text(size = 14,color = "black", face = "italic"),
#         axis.title = element_text(size = 18,color = "black", face = "italic"),
#         #panel.background = element_rect(colour = "darkblue",linewidth = 1),
#         plot.title = element_text(size = 18,color = "black",hjust = 0.5),
#         plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "italic",hjust = 0.1))+
#   scale_x_discrete("",
#                    labels = c("JOOTRH" = "JOOTRH",
#                               "Kuoyo Health Center" = "KUOYO",
#                               "Siaya County Referral Hospital" = "SIAYA",
#                               "Kisumu County Hospital" = "KCRH",
#                               "Lumumba Sub County Hospital" = "LUMUMBA",
#                               "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                               "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                               "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
#   scale_y_continuous(limits = c(0,max(fac_ontime$percent) + 10))
```

#### Visit types

```{r}
#| label: fig-overallpncvist
#| fig-cap: "Overall PNC Retention rates by Visit type"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

pnc_ontime <- all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  group_by(TYPE_VISIT) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") #%>% 

 pnc_ontime %>%    mutate(TYPE_VISIT = factor(TYPE_VISIT,levels = c("PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")),
         TYPE_VISIT = fct_relevel(TYPE_VISIT,"PNC-0","PNC-1","PNC-4","PNC-6","PNC-26")) %>% 
  ggplot(aes(x=TYPE_VISIT,y = percent,fill = TYPE_VISIT))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
   geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("Overall PNC Retention rates by Visit type"))+
  # subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_fill_viridis_d(option ="B",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = 1),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1)) +
scale_y_continuous(limits = c(0,110))
```

#### PNC-0

```{r}
#| label: fig-overallpnc0
#| fig-cap: "PNC-0 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

panderOptions("graph.grid.color", "gray")
all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-0") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=0.4,color ="black") +
 # geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-0 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_color_pander()+
  scale_fill_viridis_d(option = "C",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,110))
```

#### PNC-1

```{r}
#| label: fig-overallpnc1
#| fig-cap: "PNC-1 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52 %>%  filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-1") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,color="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-1 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_colour_pander()+
  scale_fill_viridis_d(option = "D",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,110))
```

#### PNC-4

```{r}
#| label: fig-overallpnc4
#| fig-cap: "PNC-4 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-4") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,colour="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.9,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-4 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  #scale_fill_viridis_d(option = "E",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,110))
```

#### PNC-6

```{r}
#| label: fig-overallpnc6
#| fig-cap: "PNC-6 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-6") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,colour="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=1) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-6 Retention Rates"))+
  theme_pander()+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,110))
```

#### PNC-26

```{r}
#| label: fig-overallpnc26
#| fig-cap: "PNC-26 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-26") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-26 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander(12) +
  scale_fill_viridis_d(option = "E",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
  scale_y_continuous(limits = c(0,110))
```

#### PNC-52

```{r}
#| label: fig-overallpnc52
#| fig-cap: "PNC-52 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5


all_pnc0_52 %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-52") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.4,alpha=.6,color ="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 8,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=1) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-52 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_fill_viridis_d(option = "F",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1)) +
  scale_y_continuous(limits = c(0,110)) #+
# scale_x_discrete("",
#                labels = c("JOOTRH" = "JOOTRH",
#                           "Kuoyo Health Center" = "KUOYO",
#                           "Siaya County Referral Hospital" = "SIAYA",
#                           "Kisumu County Hospital" = "KCRH",
#                           "Lumumba Sub County Hospital" = "LUMUMBA",
#                           "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                           "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                           "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))

```

```{r}
#### Table Format

#| label: fig-overallpnctable
#| fig-cap: "Overall PNC Retention Rates"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 6.5


# PNC <- bind_rows(pnc_re %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`PNC-0`,`PNC-1`,`PNC-4`,`PNC-6`,`PNC-26`) %>% rowwise() %>% 
#                    mutate(`Mean` = rowMeans(across(where(is.numeric)),na.rm=T)),
#                  pnc_re %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`PNC-0`,`PNC-1`,`PNC-4`,`PNC-6`,`PNC-26`)  %>% 
#                    summarise(across(where(is.numeric), ~mean(.x,na.rm = T))) %>% mutate(Facility = "Mean"))
# 
# overallPNCreten <- mean(PNC$Mean,na.rm = T) 
# 
# # table
# options(digits = 3)
# 
# gt(bind_rows(pnc_re %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`PNC-0`,`PNC-1`,`PNC-4`,`PNC-6`,`PNC-26`) %>% rowwise() %>% 
#                mutate(`Mean` = rowMeans(across(where(is.numeric)),na.rm=T)),
#              pnc_re %>% select(Facility = SCRN_FAC_SPFY_OBSLOC,`PNC-0`,`PNC-1`,`PNC-4`,`PNC-6`,`PNC-26`)  %>% 
#                summarise(across(where(is.numeric), ~mean(.x,na.rm = T))) %>% mutate(Facility = "Mean")) %>% 
#      mutate(Mean = replace(Mean,Facility=="Mean",overallPNCreten)))  %>% 
#   opt_table_outline(color = "black") %>% opt_table_lines() %>% 
#   opt_vertical_padding(scale = 0.6) %>% 
#   tab_header(title = md("**Overall PNC Retention Rates (%)**")) %>% 
#   opt_vertical_padding(scale = 0.5) %>% 
#   tab_style(style = cell_fill(color = c("#FFE4E1")),
#             locations = cells_column_labels()) %>% 
#   tab_style(style = cell_fill(color = c("white")),
#             locations = cells_body()) %>%  
#   tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
#             locations = list(cells_body(),cells_column_labels())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
#             locations = list(cells_body(),cells_footnotes())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
#             locations = list(cells_column_labels()))


# Overall Retention rates: ANC **`r round(overallANCreten,1)`**, PNC **`r round(overallPNCretenLW,1)`** while (ANC & PNC combined) is at **`r  paste0(round((overallPNCretenLW+overallANCreten)/2,1),"%")`**.
```
:::

### ANC-PNC Late Window Retention Rates

```{r}
#| label: fig-pnclateWindow
#| fig-cap: "Overal PNC Retention rate (Late Windows)"
#| column: screen-inset-right
#| echo: false
#| warning: false
#| fig-height: 6.5

# pnc 0 retention
pnc_0_ret_late <-  IPC_data %>% filter(PNC_0_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_0_Actual_Date,latest_date = PNC_0_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-0") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-0") %>% 
  anti_join(PNC_0_clsd) #%>% View()


# pnc 1 retention
pnc_1_ret_late <- IPC_data %>% filter(PNC_1_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_1_Actual_Date,latest_date = PNC_1_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-1") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-1") %>% 
  anti_join(PNC_1_clsd) #%>% View()

# pnc 4 retention
pnc_4_ret_late <- IPC_data %>% filter(PNC_4_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_4_Actual_Date,latest_date = PNC_4_Latest_Date) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-4") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-4") %>% 
  anti_join(PNC_4_clsd) #%>% View()


# pnc 6 retention
pnc_6_ret_late <- IPC_data %>% 
  filter(PNC_6_Latest_Date<today()) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_6_Actual_Date,latest_date = PNC_6_Late_WindowE) %>% left_join(
    ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
      group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-6") %>% 
      distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-6") %>% 
   anti_join(PNC_6_clsd) #%>% View()


# map out pnc6
# pnc_6_ret_late <- IPC_data %>% 
#   filter(PNC_6_Latest_Date<today()) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,PNC_6_Actual_Date,PNC_6_Latest_Date,PNC_6_Late_WindowS, PNC_6_Late_WindowE) %>% left_join(
#     ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
#       group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-6") %>% 
#       distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
#   mutate(Retention = if_else(between(visit_date,PNC_6_Late_WindowS,PNC_6_Late_WindowE),"Late","On-time"),
#          Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-6") %>% 
#    anti_join(PNC_6_clsd) %>% filter(Retention=="Late")



# pnc 26 retention
pnc_26_ret_late <- IPC_data %>% filter(PNC_26_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_26_Actual_Date,latest_date = PNC_26_Late_WindowE,) %>% #anti_join(fetal_loss_less_20wks) %>% 
  left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
              group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-26") %>% 
              distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-26") %>% 
 anti_join(PNC_26_clsd) %>% anti_join(fetal_loss_less_20wks) #%>% View()


# pnc_26_ret_late <- IPC_data %>% filter(PNC_26_Latest_Date<today()) %>% 
#   select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_26_Actual_Date,PNC_26_Latest_Date,PNC_26_Late_WindowS,latest_date = PNC_26_Late_WindowE,) %>% #anti_join(fetal_loss_less_20wks) %>% 
#   left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
#               group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-26") %>% 
#               distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
#   mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
#          Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-26") %>% 
#  anti_join(PNC_26_clsd) %>% anti_join(fetal_loss_less_20wks) #%>% View()



# pnc 52 retention
pnc_52_ret_late <- IPC_data %>% filter(PNC_52_Latest_Date<today()) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,Actual_Date = PNC_52_Actual_Date,latest_date = PNC_52_Late_WindowE) %>% anti_join(fetal_loss_less_20wks) %>% 
  left_join(ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,VISIT_OBSSTDAT_PNC_var,visit_date) %>% 
              group_by(MOMID,TYPE_VISIT) %>% fill(visit_date,VISIT_OBSSTDAT_PNC_var,.direction = "updown") %>% filter(TYPE_VISIT=="PNC-52") %>% 
              distinct(MOMID,.keep_all = T) %>% select(MOMID,VISIT_OBSSTDAT_PNC_var,visit_date)) %>% rename(visit = TYPE_VISIT) %>% 
  mutate(Retention = if_else(between(visit_date,Actual_Date,latest_date),"Retained","Missed visit"),
         Retention = replace(Retention, is.na(Retention),"Missed visit")) %>% mutate(TYPE_VISIT = "PNC-52") %>% 
  anti_join(PNC_52_clsd) %>% anti_join(fetal_loss_less_20wks) #%>% View()


all_pnc0_52_late <- bind_rows(pnc_0_ret_late,pnc_1_ret_late,pnc_4_ret_late,pnc_6_ret_late,pnc_26_ret_late,pnc_52_ret_late)

pnc_re_late <-  all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  mutate(SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Lumumba Sub County Hospital","LUMUMBA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Siaya County Referral Hospital","SIAYA"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kisumu County Hospital","KCRH"),
         SCRN_FAC_SPFY_OBSLOC = replace(SCRN_FAC_SPFY_OBSLOC,SCRN_FAC_SPFY_OBSLOC=="Kuoyo Health Center","KUOYO")) %>% 
  group_by(TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>%
  select(TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,percent) %>% 
  pivot_wider(id_cols = SCRN_FAC_SPFY_OBSLOC,names_from = TYPE_VISIT,values_from = percent) %>% tibble::as_tibble()
```

::: panel-tabset
#### ANC-20 to PNC-52

```{r}
#| label: fig-overallanc_pnc52
#| fig-cap: "ANC & PNC Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

vsit_late <- all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  
  group_by(TYPE_VISIT) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  mutate(TYPE_VISIT = factor(TYPE_VISIT,levels = c("PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")),
         TYPE_VISIT = fct_relevel(TYPE_VISIT,"PNC-0","PNC-1","PNC-4","PNC-6","PNC-26"))

ANCs_Prop %>% select(TYPE_VISIT,percent = prop) %>% bind_rows(vsit_late %>% select(TYPE_VISIT,percent)) %>% 
  mutate(TYPE_VISIT = fct_relevel(TYPE_VISIT,"ANC-20","ANC-28","ANC-32","ANC-36","PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")) %>% 
  ggplot(aes(x=TYPE_VISIT,y = percent)) +
  geom_col(width = 0.3,alpha=.6,colour="black",fill = c("darksalmon")) +
 # geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4,alpha=15) +
  labs(x=NULL, y = "Percent (%)", #title = paste0("Overall Retention Rates")
       )+
   scale_fill_viridis_d() +
  theme_light()+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+ 

   scale_y_continuous(limits = c(0,110),breaks = seq(0,110,20))
```

#### Facilities

```{r}
#| label: fig-overallpncfac_late
#| fig-cap: "Overall PNC Retention Rate by Facilities"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

fac_late <- all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  # filter(SCRN_FAC_SPFY_OBSLOC == input$pnc_facilities) %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") #%>% 


  fac_late %>% ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"\n(",percent,"%)")),vjust =-.6,size = 5,alpha=15) +
    geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)",
       title = paste0("Overall PNC Retention Rate")
       )+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_light() +
  scale_fill_viridis_d(option = "A",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 16,color = "black", face = "italic"),
        axis.title = element_text(size = 18,color = "black", face = "italic"),
        #panel.background = element_rect(colour = "darkblue",linewidth = 1),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "italic",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
   scale_y_continuous(limits = c(0,max(fac_ontime$percent) + 10))   
```

#### Visit types

```{r}
#| label: fig-overallpncvist_late
#| fig-cap: "Overall PNC Retention rates by Visit type"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

vsit_late <- all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  
  group_by(TYPE_VISIT) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  mutate(TYPE_VISIT = factor(TYPE_VISIT,levels = c("PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")),
         TYPE_VISIT = fct_relevel(TYPE_VISIT,"PNC-0","PNC-1","PNC-4","PNC-6","PNC-26")) #%>% 


  vsit_late %>% ggplot(aes(x=TYPE_VISIT,y = percent,fill = TYPE_VISIT))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"\n(",percent,"%)")),vjust =-.6,size = 4.7,alpha=15) +
    geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", 
       title = paste0("Overall PNC Retention rates by Visit type")
       )+
  # subtitle = "2023-07-01 to 2023-07-31") +
  theme_light() +
  scale_fill_viridis_d(option ="D",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 18,color = "black", face = "bold"),
        #panel.background = element_rect(colour = "darkblue",linewidth = 1),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1)) +
    scale_y_continuous(limits = c(0,max(vsit_late$percent) + 10))  
```

#### PNC-0

```{r}
#| label: fig-overallpnc0_late
#| fig-cap: "PNC-0 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

panderOptions("graph.grid.color", "gray")
all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-0") %>% 
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=0.4,color ="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-0 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_color_pander()+
  scale_fill_viridis_d(option = "C",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = 1),
       # panel.background = element_rect(colour = "darkblue",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
    scale_y_continuous(limits = c(0,110))
```

#### PNC-1

```{r}
#| label: fig-overallpnc1_late
#| fig-cap: "PNC-1 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52_late %>%  filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-1") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,color="black") +
 # geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-1 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_colour_pander()+
  scale_fill_viridis_d(option = "D",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))+
    scale_y_continuous(limits = c(0,110))
```

#### PNC-4

```{r}
#| label: fig-overallpnc4_late
#| fig-cap: "PNC-4 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-4") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,colour="black") +
#  geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-4 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  #scale_fill_viridis_d(option = "E",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
    scale_y_continuous(limits = c(0,110))
```

#### PNC-6

```{r}
#| label: fig-overallpnc6_late
#| fig-cap: "PNC-6 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-6") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,colour="black") +
 # geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-6 Retention Rates"))+
  theme_pander()+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
    scale_y_continuous(limits = c(0,110))
```

#### PNC-26

```{r}
#| label: fig-overallpnc26_late
#| fig-cap: "PNC-26 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-26") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.5,color="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 3.7,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-26 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander(12) +
  scale_fill_viridis_d(option = "E",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1))+
  scale_x_discrete("",
                   labels = c("JOOTRH" = "JOOTRH",
                              "Kuoyo Health Center" = "KUOYO",
                              "Siaya County Referral Hospital" = "SIAYA",
                              "Kisumu County Hospital" = "KCRH",
                              "Lumumba Sub County Hospital" = "LUMUMBA",
                              "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
                              "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
                              "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary")) +
    scale_y_continuous(limits = c(0,110))
```

#### PNC-52

```{r}
#| label: fig-overallpnc52_late
#| fig-cap: "PNC-52 Retention Rates"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

all_pnc0_52_late %>% filter(between(Actual_Date,ymd("2023-01-01"),ymd("2024-03-31"))) %>% 
  filter(TYPE_VISIT == "PNC-52") %>% 
  
  group_by(SCRN_FAC_SPFY_OBSLOC) %>% count(Retention) %>% 
  mutate(percent =round(n/sum(n)*100,1)) %>% filter(Retention == "Retained") %>% 
  ggplot(aes(x=SCRN_FAC_SPFY_OBSLOC,y = percent,fill = SCRN_FAC_SPFY_OBSLOC))+
  geom_col(width = 0.3,alpha=.6,color ="black") +
  #geom_text(aes(label = paste0(n,"(",percent,"%)")),vjust =-.6,size = 8,alpha=15) +
  geom_text(aes(label = paste0(percent,"%")),vjust =-.6,size = 4.5,alpha=15) +
  labs(x=NULL, y = "Percent (%)", title = paste0("PNC-52 Retention Rates"))+
  #subtitle = "2023-07-01 to 2023-07-31") +
  theme_pander() +
  scale_fill_viridis_d(option = "F",alpha = 1)+
  theme(legend.position = "none",
        axis.text = element_text(size = 14,color = "black", face = "bold"),
        axis.title = element_text(size = 15,color = "black", face = "bold"),
        panel.border = element_rect(colour = "gray",linewidth = .3),
        plot.title = element_text(size = 18,color = "black",hjust = 0.5),
        plot.subtitle =  element_text(size = 18,color = c("#A1A1A1"), face = "bold",hjust = 0.1)) +
    scale_y_continuous(limits = c(0,110))#+
# scale_x_discrete("",
#                labels = c("JOOTRH" = "JOOTRH",
#                           "Kuoyo Health Center" = "KUOYO",
#                           "Siaya County Referral Hospital" = "SIAYA",
#                           "Kisumu County Hospital" = "KCRH",
#                           "Lumumba Sub County Hospital" = "LUMUMBA",
#                           "Migosi Sub County Hospital" = "Migosi Sub \n County Hospital",
#                           "Tingwangi Health Centre" = "Tingwangi Health \n Centre",
#                           "Kisumu Police Lines Dispensary" = "Kisumu Police \n Lines Dispensary"))

```

#### PNC missed visits

```{r}
#| label: fig-pncmissed
#| fig-cap: "The figure displays number of missed visits - cumulatively & per facility"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 11
#| fig-height: 5

cum_pnc <- all_pnc0_52_late  %>% filter(Retention=="Missed visit")  %>% filter(latest_date<ymd("2024-03-31")) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(SCRN_FAC_SPFY_OBSLOC = "Cumulatively")
  
  all_pnc0_52_late %>%filter(latest_date<ymd("2024-03-31")) %>%  filter(Retention=="Missed visit") %>% 
  group_by(TYPE_VISIT) %>% count(SCRN_FAC_SPFY_OBSLOC) %>% bind_rows(cum_pnc) %>% 
filter(SCRN_FAC_SPFY_OBSLOC!="Tingwangi Health Centre") %>% 

ggplot(aes(area = n,fill=TYPE_VISIT,
                           label = paste0(TYPE_VISIT,"\n","(",n,")")))+
  geom_treemap(lty = 1,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 10,
                    grow = F) +
  facet_wrap(~SCRN_FAC_SPFY_OBSLOC)+
  theme_minimal() +
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "none",
        legend.title = element_blank(),
        strip.text = element_text(
          size = 12,face = "italic",colour = "black"),
        legend.text = element_text(size = 11,face = "italic"))+ 
  scale_fill_manual(values = c("#FFD39B", "#AFEEEE", "#FFF68F", "#E4C7FCFE", "#54FF9F"))
  
  
```
:::

# Data Completion

::: panel-tabset
#### ANC CRF's Completion.

```{r}
#| label: ANCRFs
#| fig-cap: "ANC forms completion status"
#| echo: false
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 5.5

 if(here() == "C:/Users/User/OneDrive - Kenya Medical Research Institute/Rcloud"){
MNH_forms <- CleanEasy::load_multipl_df("C:\\Users\\User\\OneDrive - Kenya Medical Research Institute\\PRiSMA Harmonized\\rds ouput files",format = ".rds")
}else if(here() == "C:/Users/Edwin/OneDrive - Kenya Medical Research Institute/Rcloud"){
 MNH_forms <- CleanEasy::load_multipl_df("C:\\Users\\Edwin\\OneDrive - Kenya Medical Research Institute\\PRiSMA Harmonized\\rds ouput files",format = ".rds")
}
 
#                          forms at enrolmemt
#-------------------------====================----------------------------------------------------------
# screening form
Enrol_forms <- ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>%  left_join(
  MNH_forms$MNH00_prescreening %>% drop_na(SCRNID) %>% distinct(SCRNID) %>% mutate(form_type = "MNH00")) %>% 
  mutate(`Form name` = "MNH00:Pre-screening",
         status = if_else(!is.na(form_type),"filled","Not filled")) %>% 
  select(`Form name`,status) %>% 
  #Ultrasound
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH01_US %>% drop_na(SCRNID) %>% filter(TYPE_VISIT == "Enrollment") %>%  distinct(SCRNID) %>% 
      mutate(form_type = "MNH01")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH01: Ultrasound Form") %>%  select(`Form name`,status)) %>% 
  # Enrolments
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH02_Enrolment_status %>% drop_na(MOMID) %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH02")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH02: Enrolment Status") %>%  select(`Form name`,status)) %>% 
  #Socio demographics
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH03_Socio_Demographics_Data %>% drop_na(MOMID) %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH03")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH03: Socio Demographics") %>%  select(`Form name`,status)) %>% 
  # ANC clinical status
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>%  distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH04_Clinical_Status_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "Enrollment") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH04")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH04: ANC Clinical Status") %>%  select(`Form name`,status)) %>% 
  #Anthropometrics form
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(MOMID) %>% mutate(MOMID = as.character(MOMID)) %>% left_join(
    MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT) %>%  filter(TYPE_VISIT == "Enrollment") %>% 
      select(MOMID)%>% mutate(form_type = "MNH05") %>% mutate(MOMID = as.character(MOMID))) %>% 
      mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
             `Form name` = "MNH05: Maternal Anthropometrics") %>% 
      select(`Form name`,status)) %>% 
  
  # Maternal POC diagnostics
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "Enrollment") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status)) %>% 
  # Maternal specimen collection
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "Enrollment") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # Maternal Lab Results
  bind_rows(ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% select(SCRNID,MOMID) %>% left_join(
    MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "Enrollment") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") #%>% modify_header(update = stat_2~"**Not filled**")

#------------------------------------------------------------------------------------------------------------------------------------------------
# ANC 20 FORMS
#----------------------------------------------------------------------------------------------------------------------
ALL_PRiSMA_No_anc20 <- ALL_PRiSMA %>% drop_na(MOMID) %>%  mutate(us_ga_enrol = US_GA_WKS_AGE_FTS1, us_ga_enrolmnt = replace(us_ga_enrol,TYPE_VISIT!="Enrollment", NA)) %>% 
  group_by(MOMID) %>% fill(us_ga_enrolmnt,.direction = "updown") %>% ungroup() %>% 
  mutate(anc20_check = if_else(TYPE_VISIT == "ANC-20"& us_ga_enrolmnt>=18,NA,us_ga_enrolmnt)) %>% filter(complete.cases(anc20_check))


# ANC clinical status
ANc20_forms <- ALL_PRiSMA_No_anc20  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
    MNH_forms$MNH04_Clinical_Status_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-20") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH04")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH04: ANC Clinical Status") %>%  select(`Form name`,status) %>% 
  # Anthropometrics
  bind_rows(ALL_PRiSMA_No_anc20  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-20") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status)) %>% 
  # Maternal POC diagnostics
  bind_rows(ALL_PRiSMA_No_anc20  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-20") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status)) %>% 
  # Maternal Specimen Collection
  bind_rows(ALL_PRiSMA_No_anc20  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "ANC-20") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # MATERNAL lab results
  bind_rows(ALL_PRiSMA_No_anc20  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "ANC-20") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  # Maternal depression form
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
              filter(TYPE_VISIT == "ANC-20") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH25_depression %>% drop_na(MOMID) %>% mutate(TYPE_VISIT = case_when(ANC_VISIT_N == 1~"Enrollment",
                                                                                              ANC_VISIT_N == 2~"ANC-20",
                                                                                              ANC_VISIT_N == 4~"ANC-32",
                                                                                              ANC_VISIT_N == 5~"ANC-36",
                                                                                              ANC_VISIT_N == 10~"PNC-6")) %>% 
                  filter(TYPE_VISIT%in%c("ANC-20","Enrollment")) %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH25")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH25: Maternal Depression Form") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**")

#-------------------------------------------------------------------------------------------------------------------
#                                        ANC 28 FORMS
#---------------------------------------===============----------------------------------------------------------------

# ANC clinical status
ANc28_forms <- ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  filter(TYPE_VISIT == "ANC-28") %>%  select(MOMID) %>% left_join(
    MNH_forms$MNH04_Clinical_Status_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-28") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH04")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH04: ANC Clinical Status") %>%  select(`Form name`,status) %>% 
  # Anthropometrics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-28") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-28") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status)) %>% 
  # Maternal POC diagnostics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-28") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-28") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status)) %>% 
  # Maternal Specimen Collection
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-28") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "ANC-28") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # MATERNAL lab results
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-28") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "ANC-28") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") #%>% modify_header(update = stat_2~"**Not filled**")



#             ANC 32 forms 
#------------------------------------------------------------------------------------------------------

#Ultrasound
ANC32_forms <- ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
    MNH_forms$MNH01_US %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-32") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH01")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH01: Ultrasound Form") %>%  select(`Form name`,status) %>%
  # ANC clinical status
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH04_Clinical_Status_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-32") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH04")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH04: ANC Clinical Status") %>%  select(`Form name`,status)) %>% 
  # Anthropometrics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-32") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status)) %>% 
  # Maternal POC diagnostics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-32") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status)) %>% 
  # Maternal specimen collection
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "ANC-32") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # Maternal Lab Results
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "ANC-32") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  # Maternal depression form
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
              filter(TYPE_VISIT == "ANC-32") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH25_depression %>% drop_na(MOMID) %>% mutate(TYPE_VISIT = case_when(ANC_VISIT_N == 1~"Enrollment",
                                                                                              ANC_VISIT_N == 2~"ANC-20",
                                                                                              ANC_VISIT_N == 4~"ANC-32",
                                                                                              ANC_VISIT_N == 5~"ANC-36",
                                                                                              ANC_VISIT_N == 10~"PNC-6")) %>% 
                  filter(TYPE_VISIT%in%c("ANC-32")) %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH25")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH25: Maternal Depression Form") %>%  select(`Form name`,status)) %>%
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**")




#                                       ANC 36 forms
#-------------------------------------------------------------------------------

# ANC clinical status
ANc36_forms <- ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  filter(TYPE_VISIT == "ANC-36") %>%  select(MOMID) %>% left_join(
    MNH_forms$MNH04_Clinical_Status_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-36") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH04")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH04: ANC Clinical Status") %>%  select(`Form name`,status) %>% 
  # Anthropometrics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-36") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-36") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status)) %>% 
  # Maternal POC diagnostics
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-36") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "ANC-36") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status)) %>% 
  # MATERNAL lab results
  bind_rows(ALL_PRiSMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "ANC-36") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "ANC-36") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                         `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") #%>% modify_header(update = stat_2~"**Not filled**")

#                                IPC forms
# ---------------------------------------------------------------------------


# fetal_loss_less_20wks <- ALL_PRiSMA %>% drop_na(MOMID) %>%  filter(PRG_DSDECOD=="Fetal loss") %>% 
#   select(MOMID,PRG_DSDECOD,FETAL_LOSS_DSSTDAT,CON_DSSTDAT,US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol) %>% 
#   mutate(ga_enrol_days = (US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol,
#          ga_outcome_weeks = (ga_enrol_days + as.numeric(FETAL_LOSS_DSSTDAT - CON_DSSTDAT))/7) %>% 
#   filter(ga_outcome_weeks<20) %>% select(MOMID) %>% distinct()

fetal_losses <- Locked_PRISMA %>% filter(pregnancy_outcomes%in%c("Miscarriages","Stillbirths")) %>% distinct(MOMID,INFANTID)
#-------------------------------------------------------------------------------------

#  # Anthropometrics
IPC_forms <- ALL_PRiSMA  %>%   filter(TYPE_VISIT == "IPC") %>% distinct(MOMID,INFANTID, .keep_all = T) %>%select(MOMID,INFANTID) %>%  left_join(
  MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>%  distinct(MOMID) %>% 
    mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                           `Form name` = "MNH05: Maternal Anthropometrics") %>%  anti_join(fetal_loss_less_20wks) %>%   select(`Form name`,status) %>% 
  #MNH09_LabourAndDelivery_Data
  bind_rows( ALL_PRiSMA  %>%   filter(TYPE_VISIT == "IPC") %>% distinct(MOMID,INFANTID, .keep_all = T) %>%select(MOMID,INFANTID) %>%  left_join(
    MNH_forms$MNH09_LabourAndDelivery_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH09")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH09: Maternal Labor & Delivery Outcome") %>%  anti_join(fetal_loss_less_20wks) %>%  select(`Form name`,status)) %>% 
  # MNH10_Labour_Delivery
  bind_rows( ALL_PRiSMA  %>%   filter(TYPE_VISIT == "IPC") %>% distinct(MOMID,INFANTID, .keep_all = T) %>%select(MOMID,INFANTID) %>% left_join(
    MNH_forms$MNH10_Labour_Delivery %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>%  distinct(MOMID) %>% 
      mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                             `Form name` = "MNH10: Maternal Post. Deliv Outcome") %>%  anti_join(fetal_loss_less_20wks) %>%  select(`Form name`,status)) %>% 
  # MNH11_Newborn_birth_outcome
  bind_rows( ALL_PRiSMA  %>%   filter(TYPE_VISIT == "IPC") %>% distinct(MOMID,INFANTID, .keep_all = T) %>%select(MOMID,INFANTID) %>% 
               left_join(
                 MNH_forms$MNH11_Newborn_birth_outcome %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>%  distinct(MOMID,INFANTID) %>% 
                   mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH11: Newborn Birth Outcome Form") %>%  anti_join(fetal_loss_less_20wks) %>% 
               select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(by = status,percent = "row", digits = list(everything()~c(0,1)),statistic = all_categorical()~"{n} ({p}%)") %>% 
  modify_header(update = stat_1~"**Filled**") #%>% modify_header(update = stat_2~"**Not filled**") 


#                          merging ANC - IPC tables
tbl_merge(tbls = list(Enrol_forms,ANc20_forms,ANc28_forms,ANC32_forms,ANc36_forms,IPC_forms),
          tab_spanner = c(paste0("Enrollment N: ",ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID, .keep_all = T) %>% nrow()),
                          paste0("ANC-20 N: ",ALL_PRiSMA %>% drop_na(MOMID) %>%
                                    filter(MAT_VISIT_MNH04=="Yes, visit conducted in person") %>%  
                                   filter(TYPE_VISIT == "ANC-20") %>% 
                                   distinct(MOMID, .keep_all = T) %>% nrow()),
                          paste0("ANC-28 N: ",ALL_PRiSMA %>% drop_na(MOMID) %>% 
                                    filter(MAT_VISIT_MNH04=="Yes, visit conducted in person") %>%  
                                   filter(TYPE_VISIT == "ANC-28") %>% 
                                   distinct(MOMID, .keep_all = T) %>% nrow()),
                          paste0("ANC-32 N: ",ALL_PRiSMA %>% drop_na(MOMID) %>% 
                                   filter(MAT_VISIT_MNH04=="Yes, visit conducted in person") %>%  
                                   filter(TYPE_VISIT == "ANC-32") %>% 
                                   distinct(MOMID, .keep_all = T) %>% nrow()),
                          paste0("ANC-36 N: ",ALL_PRiSMA %>% drop_na(MOMID) %>% 
                                    filter(MAT_VISIT_MNH04=="Yes, visit conducted in person") %>%  
                                   filter(TYPE_VISIT == "ANC-36") %>% 
                                   distinct(MOMID, .keep_all = T) %>% nrow()),
                          paste0("IPC N: ",ALL_PRiSMA  %>%   filter(TYPE_VISIT == "IPC") %>% 
                                   distinct(MOMID,INFANTID, .keep_all = T) %>% select(MOMID,INFANTID)  %>% nrow()))) %>% bold_levels() %>% 
  as_gt() %>% opt_table_lines(extent = "all") %>% opt_table_outline() %>% 
  tab_options(table.background.color = "white") %>% 
  tab_options(data_row.padding = px(10)) %>% 
  tab_header(title = md("**Enrollment, ANC & IPC Forms -- Completeness Status**")) %>% 
  tab_options(table.width = pct(100))%>% 
  tab_options(data_row.padding = px(5)) %>% 
  tab_options(table.border.top.color = "black") %>% 
  tab_options(table.border.bottom.color = "black") %>% 
  tab_options(table.border.right.color = "black") %>% 
  tab_options(table.border.left.color = "black") %>% 
  tab_options(heading.border.bottom.color = "black") %>% #opt_vertical_padding(scale = 0.5) %>% 
  tab_options(heading.background.color = c("#CDC0B0")) %>% opt_vertical_padding(scale = .5)
```

#### PNC CRFs completion

```{r}
#| label: fig-PNCRFs
#| fig-cap: "PNC forms completion status"
#| echo: false
#| warning: false
#| column: screen-inset-right
#| fig-width: 16
#| fig-height: 6

#           PNC FORMS
#============================+++++++===++++++++++================+====+++++++++++++==================+++++++++++++++++++=

Stillbirth_data <- Locked_PRISMA %>% drop_na(MOMID) %>%
  select(MOMID,Ga_Enrollment,CON_DSSTDAT,INFANTID,TYPE_VISIT,visit_date,Ga_visit_weeks,FETAL_LOSS_DSDECOD,BIRTH_DSTERM_INF1,BIRTH_DSTERM_INF2,DELIV_DSSTDAT_INF1) %>% 
  mutate(FETAL_LOSS_DSDECOD = replace(FETAL_LOSS_DSDECOD, FETAL_LOSS_DSDECOD==77,NA)) %>% 
  mutate(is_ga_wk_20wks = if_else(BIRTH_DSTERM_INF1 == "Fetal death",(as.numeric(DELIV_DSSTDAT_INF1 - CON_DSSTDAT) + Ga_Enrollment)/7,NA)) %>% 
  mutate(stillbirth = if_else(is_ga_wk_20wks>=20,"Yes",as.character(NA)),
         miscarriage = if_else(FETAL_LOSS_DSDECOD == "Miscarriage/spontaneous abortion","Yes",as.character(NA)),
         stillbirth1 = replace(stillbirth,BIRTH_DSTERM_INF1 == "Live birth","No"),
         stillbirth2 = if_else(BIRTH_DSTERM_INF2=="Fetal death","Yes",NA)) %>% group_by(MOMID) %>% 
  fill(stillbirth1,stillbirth2,miscarriage,.direction = "updown") %>% mutate(stillbirth1 = replace(stillbirth1,is.na(stillbirth1)&FETAL_LOSS_DSDECOD == "Stillbirth","Yes")) #%>% view()

# Fetal losses
#fetal_losses <- Stillbirth_data %>% filter(miscarriage=="Yes"|stillbirth1=="Yes") %>% distinct(MOMID,INFANTID) #%>% drop_na(INFANTID)
#fetal_losses <- Locked_PRISMA %>% filter(Miscarriages == "Yes"|StillBirths =="Yes") %>% distinct(MOMID,INFANTID) #%>% select(MOMID,INFANTID,Miscarriages,StillBirths) %>% View()
fetal_losses <- Locked_PRISMA %>% filter(pregnancy_outcomes%in%c("Miscarriages","Stillbirths")) %>% distinct(MOMID,INFANTID)

infant_closeout <- read_rds(here("Data","MNH24_Infant_close_out.rds"))

# neondeaths <- Locked_PRISMA %>% drop_na(MOMID) %>% group_by(MOMID) %>% 
#   fill(BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15,.direction = "updown") %>% 
#   ungroup() %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% 
#   select(MOMID,TYPE_VISIT,BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15) %>% 
#   mutate(Neonatal_death = if_else(INF_VITAL_MNH11 == "Died"|INF_VITAL_MNH13 == "Died"|INF_VITAL_MNH14== "Died"|INF_VITAL_MNH15== "Died","Yes",NA)) %>% 
#   filter(Neonatal_death == "Yes") %>% distinct(MOMID) %>% full_join(infant_closeout %>% filter(MOMID%in%c("KEARC01006","KEARC00102")) %>% select(MOMID)) 

neondeaths <- Locked_PRISMA %>% filter(Neonatal_inf_death=="Yes") %>% distinct(MOMID,INFANTID)
#============================+++++++===++++++++++================+====+++++++++++++==================+++++++++++++++++++=

#                              PNC 0 FORMS

# Maternal POC diagnostics
PNC_0_table <- Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
  select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-0") %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%  
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                              `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status) %>%
  
  
  # Maternal PNC Clinical forms
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
              #filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-0") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%  
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Maternal PNC Clinical forms
  # bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  #             select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-0") %>% left_join(
  #               MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%  
  #                 mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
  #                                                        `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Infant PNC Clinicl status -- remove fetal losses
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-0") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>%   left_join(
                MNH_forms$MNH13_Clinical_status %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%  
                  mutate(form_type = "MNH13")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH13: Infant PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Mnh14 Infant POc Diagnostics
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-0") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH14_POC_Diagnostics %>% drop_na(MOMID) %>% filter(POC_VISIT == "PNC-0") %>%  
                  mutate(form_type = "MNH14")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH14: Infant POc Diagnostics") %>%  select(`Form name`,status)) %>% 
  
  # mnh 15: Infant Vaccination Form
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-0") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH15_infant_vaccination %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%  
                  mutate(form_type = "MNH15")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH15: Infant Vaccination Form") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(by = status,percent = "row", digits = list(everything()~c(0,1)),statistic = all_categorical()~"{n} ({p}%)") %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**") 


#                 PNC 1
#----------------******---------------------------

# Maternal POC diagnostics
PNC_1_table <- Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-1") %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%  
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                              `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status) %>% 
  
  # Maternal PNC Clinical forms
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-1") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%  
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # # Infant PNC clinical Status
  # bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  #             select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-1") %>% left_join(
  #               MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%  
  #                 mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
  #                                                        `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Infant PNC Clinicl status -- remove fetal losses
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-1") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH13_Clinical_status %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%  
                  mutate(form_type = "MNH13")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH13: Infant PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Mnh14 Infant POc Diagnostics
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-1") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH14_POC_Diagnostics %>% drop_na(MOMID) %>% filter(POC_VISIT == "PNC-1") %>%  
                  mutate(form_type = "MNH14")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH14: Infant POc Diagnostics") %>%  select(`Form name`,status)) %>% 
  
  # mnh 15: Infant Vaccination Form
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-1") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH15_infant_vaccination %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%  
                  mutate(form_type = "MNH15")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH15: Infant Vaccination Form") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(by = status,percent = "row", digits = list(everything()~c(0,1)),statistic = all_categorical()~"{n} ({p}%)") %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**")


#                       pnc 4 forms
#------------------------------------------------------------

# Maternal POC diagnostics
PNC_4_table <- Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-4") %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%  
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                              `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status) %>% 
  
  # Maternal PNC Clinical forms
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-4") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%  
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  
  # Infant PNC clinical Status
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>%
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-4") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>%
  
  # Infant PNC Clinicl status -- remove fetal losses
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-4") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH13_Clinical_status %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%  
                  mutate(form_type = "MNH13")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH13: Infant PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Mnh14 Infant POc Diagnostics
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-4") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH14_POC_Diagnostics %>% drop_na(MOMID) %>% filter(POC_VISIT == "PNC-4") %>%  
                  mutate(form_type = "MNH14")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH14: Infant POc Diagnostics") %>%  select(`Form name`,status)) %>% 
  
  # mnh 15: Infant Vaccination Form
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-4") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH15_infant_vaccination %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%  
                  mutate(form_type = "MNH15")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH15: Infant Vaccination Form") %>%  select(`Form name`,status)) %>% 
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(by = status,percent = "row", digits = list(everything()~c(0,1)),statistic = all_categorical()~"{n} ({p}%)") %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**")

#----------------------------------------------------------------------------------------------------

#                       pnc 26 forms
#------------------------------------------------------------

# Maternal POC diagnostics
PNC_26_table <- Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-26") %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%  
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                              `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status) %>% 
  
  # Maternal PNC Clinical forms
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-26") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%  
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  
  # Infant PNC clinical Status
  # bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  #             select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-4") %>% left_join(
  #               MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%  
  #                 mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
  #                                                        `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Infant PNC Clinicl status -- remove fetal losses
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-26") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH13_Clinical_status %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%  
                  mutate(form_type = "MNH13")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH13: Infant PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Mnh14 Infant POC Diagnostics
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-26") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH14_POC_Diagnostics %>% drop_na(MOMID) %>% filter(POC_VISIT == "PNC-26") %>%  
                  mutate(form_type = "MNH14")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH14: Infant POc Diagnostics") %>%  select(`Form name`,status)) %>% 
  
  # mnh 15: Infant Vaccination Form
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-26") %>% anti_join(fetal_losses)%>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH15_infant_vaccination %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%  
                  mutate(form_type = "MNH15")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH15: Infant Vaccination Form") %>%  select(`Form name`,status)) %>% 
  # Anthropometrics
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-26") %>%  select(MOMID) %>%  left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status))%>% 
  
  # Maternal specimen collection
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-26") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "PNC-26") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # Maternal Lab Results
  # bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>%
  #             filter(TYPE_VISIT == "PNC-26") %>%  select(MOMID) %>% left_join(
  #               MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "PNC-26") %>%  distinct(MOMID) %>%
  #                 mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
  #                                                        `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>%
  mutate(status = fct_relevel(status,"filled")) %>% 
  tbl_summary(by = status,percent = "row", digits = list(everything()~c(0,1)),statistic = all_categorical()~"{n} ({p}%)") %>% 
  modify_header(update = stat_1~"**Filled**") #%>% modify_header(update = stat_2~"**Not filled**")


#                        pnc 6 forms
# ---------------------------------------------------------------

# Maternal POC diagnostics
PNC_6_table <- Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-6") %>% left_join(
    MNH_forms$MNH06_Maternal_POC %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  
      mutate(form_type = "MNH06")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                              `Form name` = "MNH06: Maternal POC Diagnostics") %>%  select(`Form name`,status) %>% 
  
  # Maternal PNC Clinical forms
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-6") %>% left_join(
                MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  
                  mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Infant PNC clinical Status
  # bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
  #             select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-6") %>% left_join(
  #               MNH_forms$MNH12_Maternal_PNC_clinical %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  
  #                 mutate(form_type = "MNH12")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
  #                                                        `Form name` = "MNH12: Maternal PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Infant PNC Clinicl status -- remove fetal losses
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT) %>% filter(TYPE_VISIT == "PNC-6") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH13_Clinical_status %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  
                  mutate(form_type = "MNH13")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH13: Infant PNC Clinical Status") %>%  select(`Form name`,status)) %>% 
  
  # Mnh14 Infant POc Diagnostics
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-6") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH14_POC_Diagnostics %>% drop_na(MOMID) %>% filter(POC_VISIT == "PNC-6") %>%  
                  mutate(form_type = "MNH14")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH14: Infant POc Diagnostics") %>%  select(`Form name`,status)) %>% 
  
  # mnh 15: Infant Vaccination Form
  bind_rows(Locked_PRISMA %>% drop_na(MOMID) %>% distinct(MOMID,TYPE_VISIT,INFANTID, .keep_all = T) %>% 
              select(SCRNID,MOMID,TYPE_VISIT,INFANTID) %>% filter(TYPE_VISIT == "PNC-6") %>% anti_join(fetal_losses) %>% anti_join(as.data.frame(neondeaths)) %>% left_join(
                MNH_forms$MNH15_infant_vaccination %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  
                  mutate(form_type = "MNH15")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH15: Infant Vaccination Form") %>%  select(`Form name`,status)) %>% 
  
  
  # Anthropometrics
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-6") %>%  select(MOMID) %>%  left_join(
                MNH_forms$MNH05_MaternalAnthro_Data %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH05")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH05: Maternal Anthropometrics") %>%  select(`Form name`,status))%>% 
  
  # Maternal specimen collection
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-6") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH07_Maternal_Spec_Coll_Data %>% drop_na(MOMID) %>% filter(MAT_SPEC_COLLECT_VISIT == "PNC-6") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH07")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH07: Maternal specimen collection") %>%  select(`Form name`,status)) %>% 
  # Maternal Lab Results
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-6") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH08_Maternal_Lab_Results %>% drop_na(MOMID) %>% filter(VISIT_LBSTDAT == "PNC-6") %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH08")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH08: Maternal Laboratory Results") %>%  select(`Form name`,status)) %>% 
  # Maternal depression form
  bind_rows(Locked_PRISMA  %>% distinct(MOMID,TYPE_VISIT, .keep_all = T) %>% 
              filter(TYPE_VISIT == "PNC-6") %>%  select(MOMID) %>% left_join(
                MNH_forms$MNH25_depression %>% drop_na(MOMID) %>% mutate(TYPE_VISIT = case_when(ANC_VISIT_N == 1~"Enrollment",
                                                                                                ANC_VISIT_N == 2~"ANC-20",
                                                                                                ANC_VISIT_N == 4~"ANC-32",
                                                                                                ANC_VISIT_N == 5~"ANC-36",
                                                                                                ANC_VISIT_N == 10~"PNC-6")) %>% 
                  filter(TYPE_VISIT%in%c("PNC-6")) %>%  distinct(MOMID) %>% 
                  mutate(form_type = "MNH25")) %>% mutate(status = if_else(!is.na(form_type),"filled","Not filled"),
                                                          `Form name` = "MNH25: Maternal Depression Form") %>%  select(`Form name`,status)) %>%
  mutate(status = fct_relevel(status,"filled","Not filled")) %>% 
  tbl_summary(status,percent = "row", digits = list(everything()~c(0,1))) %>% 
  modify_header(update = stat_1~"**Filled**") %>% modify_header(update = stat_2~"**Not filled**")



# merging PNC tables

tbl_merge(tbls = list(PNC_0_table,PNC_1_table,PNC_4_table,PNC_6_table,PNC_26_table),
          tab_spanner = c(
            paste0("PNC-0 N: ",Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-0") %>%
                     distinct(MOMID, .keep_all = T) %>% nrow()),
            paste0("PNC-1 N: ",Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-1") %>%
                     distinct(MOMID, .keep_all = T) %>% nrow()),
            paste0("PNC-4 N: ",Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-4") %>%
                     distinct(MOMID, .keep_all = T) %>% nrow()),
            paste0("PNC-6 N: ",Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-6") %>%
                     distinct(MOMID, .keep_all = T) %>% nrow()),
            paste0("PNC-26 N: ",Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "PNC-26") %>%
                     distinct(MOMID, .keep_all = T) %>% nrow()))) %>% bold_levels() %>%
  as_gt() %>% opt_table_lines(extent = "all") %>% opt_table_outline() %>%
  tab_options(table.background.color = "white") %>%
  #tab_options(data_row.padding = px(10)) %>%
  tab_header(title = md("**PNC Forms Completion Status**")) %>%
  tab_options(table.width = pct(100))%>%
  tab_options(data_row.padding = px(5)) %>%
  tab_options(table.border.top.color = "black") %>%
  tab_options(table.border.bottom.color = "black") %>%
  tab_options(table.border.right.color = "black") %>%
  tab_options(table.border.left.color = "black") %>%
  tab_options(heading.border.bottom.color = "black")%>% opt_vertical_padding(scale = .5)
```
:::

### Completeness of sample collection at enrollment

```{r}
#| label: fig-samples
#| fig-cap: "sample collection at enrollment"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 11
#| fig-height: 5

Sample_Data <-  ALL_PRiSMA %>% filter(MOMID!="KEARC00300") %>%  filter(complete.cases(MOMID), TYPE_VISIT == "Enrollment") %>%
  select(MOMID,TYPE_VISIT, CON_DSSTDAT, SCRN_FAC_SPFY_OBSLOC, MAT_BLOOD_SPEC_1, MAT_BLOOD_SPEC_COUNT_1,
         MAT_BLOOD_SPEC_2, MAT_BLOOD_SPEC_COUNT_2, MAT_BLOOD_SPEC_3,
         MAT_BLOOD_SPEC_COUNT_3, MAT_BLOOD_SPEC_4, MAT_BLOOD_SPEC_COUNT_4, MAT_BLOOD_SPEC_5,MAT_BLOOD_SPEC_COUNT_5,
         MAT_BLOOD_SPEC_6, MAT_BLOOD_SPEC_COUNT_6, MAT_URINE_COLLECT_YN, MAT_URINE_COLLECT_COUNT, MAT_TB_SYM_TEST, MAT_TB_SPEC_COLLECT,
         MAT_TB_SPEC_COLLECT_COUNT,HELM_LBTSTDAT,HELM_LBPERF_1,HELM_LBORRES, MAT_HELM_SPEC_COLLECT, MAT_HELM_SPEC_COLLECT_COUNT) %>%
  mutate_if(is.integer, ~replace(.,.==-7,NA)) %>%  mutate_if(is.integer, ~replace(.,.==-5,NA)) %>%  
  mutate_if(is.numeric, ~replace(.x, .x%in%c(55,-5), NA)) %>% mutate_if(is.factor, ~replace(.x, .x%in%c(55), NA))

Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_1) %>% distinct(MOMID,.keep_all = T) %>%
  mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_1),"Result Available", "Missing result")) %>% #view()
  tabyl(Result) %>% mutate(Sample = paste0("EDTA tubes"),
                           Percent = round(percent*100,1)) %>%
  filter(Result == "Result Available") %>% select(Result,Sample, n , Percent) %>%
  # 
  #       rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID, MAT_BLOOD_SPEC_COUNT_2) %>% distinct(MOMID,.keep_all = T) %>%
  #               mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_2),"Result Available", "Missing result")) %>%
  #               tabyl(Result) %>% mutate(Sample = paste0("Sodium Heparin tubes"),
  #                                        Percent = round(percent*100,1)) %>%
  #               filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID, SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_3) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_3),"Result Available", "Missing result"))  %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("Serum separator tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_4) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_4),"Result Available", "Missing result")) %>% #View()
          tabyl(Result) %>% mutate(Sample = paste0("Trace-element-free polyethylene evacuated tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID, SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_5) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_5),"Result Available", "Missing result")) %>% #View()
          tabyl(Result) %>% mutate(Sample = paste0("Lithium Heparin tubes"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_BLOOD_SPEC_COUNT_6) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_BLOOD_SPEC_COUNT_6),"Result Available", "Missing result")) %>% 
          tabyl(Result) %>% mutate(Sample = paste0("Fluoride tube"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_URINE_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%
          mutate(Result = if_else(!is.na(MAT_URINE_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("urine containers"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT, MAT_TB_SYM_TEST, MAT_TB_SPEC_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%
          filter(MAT_TB_SYM_TEST == "Yes") %>%
          mutate(Result = if_else(!is.na(MAT_TB_SPEC_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("sputum specimen - TB"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>%
  
  rbind(Sample_Data %>% filter(complete.cases(MOMID)) %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,HELM_LBORRES, MAT_HELM_SPEC_COLLECT_COUNT) %>% distinct(MOMID,.keep_all = T) %>%

    mutate(MAT_HELM_SPEC_COLLECT_COUNT = if_else(is.na(MAT_HELM_SPEC_COLLECT_COUNT) & HELM_LBORRES%in%c("Positive","Negative"),
                                                       1,MAT_HELM_SPEC_COLLECT_COUNT)) %>% 
          mutate(Result = if_else(!is.na(MAT_HELM_SPEC_COLLECT_COUNT),"Result Available", "Missing result")) %>% #view()
          tabyl(Result) %>% mutate(Sample = paste0("stool specimen"),
                                   Percent = round(percent*100,1)) %>%
          filter(Result == "Result Available") %>% select(Result,Sample, n , Percent)) %>% 
  
  lollipop_chart(x = Sample, y = Percent,line_size = 1,point_size = 4,top_n = 6) +
  #geom_col(width = .7, fill = c("#8B5A2B")) +
  #ylim(0,125) +
  labs(x = "",
       #title = "COMPLETENESS OF SAMPLE COLLECTION AT ENROLLMENT",
       y = "Completeness (%)") +
  theme_light() +
  geom_text(aes(label = paste0(n, "(",Percent,"%",")")), hjust = -0.3, color = "black", size = 4.4) +
  theme(axis.text.x = element_text(angle = 0,hjust = 1.1,vjust = 1.1,colour = "black", size = 15.5),
        axis.text.y = element_text(colour = "darkblue", size = 12),
        plot.title = element_text(colour = "black",hjust = 0.5,size = 14),
        axis.title = element_text(colour = "black", size = 12,color = "black", face = "bold")) +
  scale_y_continuous(limits = c(0,119), breaks = seq(0,119,20)) +
  coord_flip()
```

### Breakdown of Pending CBC Results

::: panel-tabset
#### Pending CBC Results at Enrollment

```{r}
#| label: fig-cbc
#| fig-cap: "Breakdown of Pending Results"
#| warning: false
#| fig-align: center
#| fig-width: 11
#| fig-height: 5
#| echo: false


# cbc
cbc_na <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT=="Enrollment") %>% #filter(MOMID!="KEARC00300") %>% 
  select(MOMID, CON_DSSTDAT,ANC_OBSSTDAT,visit_date, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT, contains("CBC")) %>%
  mutate(CBC_HB_LBORRES = if_else(CBC_LBPERF_1 == "No" & CBC_HB_LBORRES%in%c(0,-7),as.double(NA), CBC_HB_LBORRES),
         CBC_HCT_LBORRES = if_else(CBC_LBPERF_2 == "No" & CBC_HCT_LBORRES%in%c(0,-7),as.double(NA), CBC_HCT_LBORRES),
         CBC_WBC_LBORRES = if_else(CBC_LBPERF_3 == "No" & CBC_WBC_LBORRES%in%c(0,-7),as.double(NA), CBC_WBC_LBORRES),
         CBC_NEU_PCT_LBORRES = if_else(CBC_LBPERF_4 == "No" & CBC_NEU_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_NEU_PCT_LBORRES),
         CBC_NEU_FCC_LBORRES = if_else(CBC_LBPERF_5 == "No" & CBC_NEU_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_NEU_FCC_LBORRES),
         CBC_LYMPH_PCT_LBORRES = if_else(CBC_LBPERF_6 == "No" & CBC_LYMPH_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_LYMPH_PCT_LBORRES),
         CBC_LYMPH_FCC_LBORRES = if_else(CBC_LBPERF_7 == "No" & CBC_LYMPH_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_LYMPH_FCC_LBORRES),
         CBC_ERYTH_MM_LBORRES = if_else(CBC_LBPERF_8 == "No" & CBC_ERYTH_MM_LBORRES%in%c(0,-7),as.double(NA), CBC_ERYTH_MM_LBORRES),
         CBC_MCV_LBORRES = if_else(CBC_LBPERF_9 == "No" & CBC_MCV_LBORRES%in%c(0,-7),as.double(NA), CBC_MCV_LBORRES),
         CBC_MCH_LBORRES = if_else(CBC_LBPERF_10 == "No" & CBC_MCH_LBORRES%in%c(0,-7),as.double(NA), CBC_MCH_LBORRES),
         CBC_MCHC_GDL_LBORRES = if_else(CBC_LBPERF_11 == "No" & CBC_MCHC_GDL_LBORRES%in%c(0,-7),as.double(NA), CBC_MCHC_GDL_LBORRES),
         CBC_PLATE_LBORRES = if_else(CBC_LBPERF_12 == "No" & CBC_PLATE_LBORRES%in%c(0,-7),as.double(NA), CBC_PLATE_LBORRES),
         CBC_MONO_PCT_LBORRES = if_else(CBC_LBPERF_13 == "No" & CBC_MONO_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_MONO_PCT_LBORRES),
         CBC_MONO_FCC_LBORRES = if_else(CBC_LBPERF_14 == "No" & CBC_MONO_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_MONO_FCC_LBORRES),
         CBC_EOS_PCT_LBORRES = if_else(CBC_LBPERF_15 == "No" & CBC_EOS_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_EOS_PCT_LBORRES),
         CBC_EOS_FCC_LBORRES = if_else(CBC_LBPERF_16 == "No" & CBC_EOS_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_EOS_FCC_LBORRES),
         CBC_RDW_PCT_LBORRES = if_else(CBC_LBPERF_17 == "No" & CBC_RDW_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_RDW_PCT_LBORRES),
         CBC_PDW_CT_LBORRES = if_else(CBC_LBPERF_18 == "No" & CBC_PDW_CT_LBORRES%in%c(0,-7),as.double(NA), CBC_PDW_CT_LBORRES),
         CBC_PCT_PCT_LBORRES = if_else(CBC_LBPERF_19 == "No" & CBC_PCT_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_PCT_PCT_LBORRES)) %>%
  mutate_if(is.double,~replace(.,.==-7,NA)) %>% replace(.,.==-7,NA) %>% 
  mutate(ANC_OBSSTDAT = if_else(is.na(ANC_OBSSTDAT),visit_date,ANC_OBSSTDAT)) #%>% view()

# select(MOMID, CON_DSSTDAT,ANC_OBSSTDAT,visit_date, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT, CBC_HB_LBORRES, CBC_HCT_LBORRES, CBC_WBC_LBORRES, CBC_NEU_PCT_LBORRES,
#        CBC_LBPERF_1,CBC_LBPERF_2,CBC_LBPERF_3,CBC_LBPERF_4,CBC_LBPERF_5,CBC_LBPERF_6,CBC_LBPERF_7,CBC_LBPERF_8,CBC_LBPERF_9,CBC_LBPERF_10,
#        CBC_LBPERF_11,CBC_LBPERF_12,CBC_LBPERF_13,CBC_LBPERF_14,CBC_LBPERF_15,CBC_LBPERF_16,CBC_LBPERF_17,CBC_LBPERF_18,CBC_LBPERF_19,
#        CBC_NEU_FCC_LBORRES, CBC_LYMPH_PCT_LBORRES, CBC_LYMPH_FCC_LBORRES, CBC_ERYTH_MM_LBORRES, CBC_MCV_LBORRES,
#        CBC_MCH_LBORRES, CBC_MCHC_GDL_LBORRES, CBC_PLATE_LBORRES, CBC_MONO_PCT_LBORRES, CBC_MONO_FCC_LBORRES, CBC_EOS_PCT_LBORRES,
#        CBC_EOS_FCC_LBORRES, CBC_RDW_PCT_LBORRES, CBC_PDW_CT_LBORRES, CBC_PCT_PCT_LBORRES) %>% 




# CBC_HB_LBORRES
CBC_HB <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_HB_LBORRES) %>% filter(is.na(CBC_HB_LBORRES)) %>% nrow()
# CBC_HCT_LBORRES
CBC_HCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_HCT_LBORRES) %>% filter(is.na(CBC_HCT_LBORRES)) %>% nrow()
# CBC_WBC_LBORRES
CBC_WBC <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_WBC_LBORRES) %>% filter(is.na(CBC_WBC_LBORRES)) %>% nrow()
# CBC_NEU_PCT_LBORRES
CBC_NEU_PCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_PCT_LBORRES) %>% filter(is.na(CBC_NEU_PCT_LBORRES)) %>% nrow()
# CBC_NEU_FCC_LBORRES
CBC_NEU_FCC <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_FCC_LBORRES) %>% filter(is.na(CBC_NEU_FCC_LBORRES)) %>% nrow()
# CBC_LYMPH_PCT_LBORRES
CBC_LYMPH_PCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_PCT_LBORRES) %>% filter(is.na(CBC_LYMPH_PCT_LBORRES)) %>% nrow()
# CBC_LYMPH_FCC_LBORRES
CBC_LYMPH_FCC <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_FCC_LBORRES) %>% filter(is.na(CBC_LYMPH_FCC_LBORRES)) %>% nrow()
# CBC_ERYTH_MM_LBORRES
CBC_ERYTH_MM <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_ERYTH_MM_LBORRES) %>% filter(is.na(CBC_ERYTH_MM_LBORRES)) %>% nrow()
# CBC_MCV_LBORRES
CBC_MCV <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCV_LBORRES) %>% filter(is.na(CBC_MCV_LBORRES)) %>% nrow()
# CBC_MCH_LBORRES
CBC_MCH <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCH_LBORRES) %>% filter(is.na(CBC_MCH_LBORRES)) %>% nrow()
# CBC_MCHC_GDL_LBORRES
CBC_MCHC_GDL <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCHC_GDL_LBORRES) %>% filter(is.na(CBC_MCHC_GDL_LBORRES)) %>% nrow()
# CBC_PLATE_LBORRES
CBC_PLATE <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_PLATE_LBORRES) %>% filter(is.na(CBC_PLATE_LBORRES)) %>% nrow()
# CBC_MONO_PCT_LBORRES
CBC_MONO_PCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_PCT_LBORRES) %>% filter(is.na(CBC_MONO_PCT_LBORRES)) %>% nrow()
# CBC_MONO_FCC_LBORRES
CBC_MONO_FCC <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_FCC_LBORRES) %>% filter(is.na(CBC_MONO_FCC_LBORRES)) %>% nrow()
# CBC_EOS_PCT_LBORRES
CBC_EOS_PCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_PCT_LBORRES) %>% filter(is.na(CBC_EOS_PCT_LBORRES)) %>% nrow()
# CBC_EOS_FCC_LBORRES
CBC_EOS_FCC <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_FCC_LBORRES) %>% filter(is.na(CBC_EOS_FCC_LBORRES)) %>% nrow()
# CBC_RDW_PCT_LBORRES
CBC_RDW_PCT <- cbc_na %>% select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_RDW_PCT_LBORRES) %>% filter(is.na(CBC_RDW_PCT_LBORRES)) %>% nrow()
# CBC_PDW_CT_LBORRES
CBC_PDW_CT <- cbc_na %>% #filter(CBC_LBPERF_18%in%c("Yes",NA)) %>%  
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_18,CBC_PDW_CT_LBORRES) %>% filter(is.na(CBC_PDW_CT_LBORRES)) %>% nrow()
# CBC_PCT_PCT_LBORRES
CBC_PCT_PCT <- cbc_na %>% #filter(CBC_LBPERF_19%in%c("Yes",NA)) %>%  
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_19,CBC_PCT_PCT_LBORRES) %>% filter(is.na(CBC_PCT_PCT_LBORRES)) %>% nrow()


data.frame(CBC_HB,CBC_HCT,CBC_WBC,CBC_NEU_PCT,CBC_NEU_FCC,CBC_LYMPH_PCT,CBC_LYMPH_FCC,CBC_ERYTH_MM,CBC_MCV,CBC_MCH,CBC_MCHC_GDL,
           CBC_PLATE,CBC_MONO_PCT,CBC_MONO_FCC,CBC_EOS_PCT,CBC_EOS_FCC,CBC_RDW_PCT,CBC_PDW_CT,CBC_PCT_PCT) %>% 
  pivot_longer(names_to = "CBC components",values_to = "frequency",cols = CBC_HB :CBC_PCT_PCT) %>% 
  ggplot(aes(area = frequency, 
             label = paste0(`CBC components`, "\n","(",frequency,")")))+
  geom_treemap(fill ="#FFEFDB",lty = 3,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,
                    grow = F) +
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 14,face = "bold"))

```

#### Pending CBC Results at different visits

```{r}
#| label: fig-cbcvst
#| fig-cap: "Breakdown of Pending CBC Results "
#| warning: false
#| fig-align: center
#| fig-width: 11.2
#| fig-height: 5.2
#| echo: false

cbc20_rmve <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  select(MOMID,TYPE_VISIT,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks>=18.0 & Ga_weeks<20.0) %>% filter(TYPE_VISIT=="ANC-20") %>% 
  select(MOMID,TYPE_VISIT) 

cbc_na_vsts <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% anti_join(cbc20_rmve) %>% 
 filter(CON_DSSTDAT>=ymd("2023-04-03")) |> 
    filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-36","PNC-6")) %>% #filter(MOMID!="KEARC00300") |> 
    #filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
    select(MOMID, CON_DSSTDAT,MAT_VISIT_MNH04,MAT_VISIT_MNH12,ANC_OBSSTDAT,visit_date, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT, contains("CBC")) %>%
    mutate(CBC_HB_LBORRES = if_else(CBC_LBPERF_1 == "No" & CBC_HB_LBORRES%in%c(0,-7),as.double(NA), CBC_HB_LBORRES),
           CBC_HCT_LBORRES = if_else(CBC_LBPERF_2 == "No" & CBC_HCT_LBORRES%in%c(0,-7),as.double(NA), CBC_HCT_LBORRES),
           CBC_WBC_LBORRES = if_else(CBC_LBPERF_3 == "No" & CBC_WBC_LBORRES%in%c(0,-7),as.double(NA), CBC_WBC_LBORRES),
           CBC_NEU_PCT_LBORRES = if_else(CBC_LBPERF_4 == "No" & CBC_NEU_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_NEU_PCT_LBORRES),
           CBC_NEU_FCC_LBORRES = if_else(CBC_LBPERF_5 == "No" & CBC_NEU_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_NEU_FCC_LBORRES),
           CBC_LYMPH_PCT_LBORRES = if_else(CBC_LBPERF_6 == "No" & CBC_LYMPH_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_LYMPH_PCT_LBORRES),
           CBC_LYMPH_FCC_LBORRES = if_else(CBC_LBPERF_7 == "No" & CBC_LYMPH_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_LYMPH_FCC_LBORRES),
           CBC_ERYTH_MM_LBORRES = if_else(CBC_LBPERF_8 == "No" & CBC_ERYTH_MM_LBORRES%in%c(0,-7),as.double(NA), CBC_ERYTH_MM_LBORRES),
           CBC_MCV_LBORRES = if_else(CBC_LBPERF_9 == "No" & CBC_MCV_LBORRES%in%c(0,-7),as.double(NA), CBC_MCV_LBORRES),
           CBC_MCH_LBORRES = if_else(CBC_LBPERF_10 == "No" & CBC_MCH_LBORRES%in%c(0,-7),as.double(NA), CBC_MCH_LBORRES),
           CBC_MCHC_GDL_LBORRES = if_else(CBC_LBPERF_11 == "No" & CBC_MCHC_GDL_LBORRES%in%c(0,-7),as.double(NA), CBC_MCHC_GDL_LBORRES),
           CBC_PLATE_LBORRES = if_else(CBC_LBPERF_12 == "No" & CBC_PLATE_LBORRES%in%c(0,-7),as.double(NA), CBC_PLATE_LBORRES),
           CBC_MONO_PCT_LBORRES = if_else(CBC_LBPERF_13 == "No" & CBC_MONO_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_MONO_PCT_LBORRES),
           CBC_MONO_FCC_LBORRES = if_else(CBC_LBPERF_14 == "No" & CBC_MONO_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_MONO_FCC_LBORRES),
           CBC_EOS_PCT_LBORRES = if_else(CBC_LBPERF_15 == "No" & CBC_EOS_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_EOS_PCT_LBORRES),
           CBC_EOS_FCC_LBORRES = if_else(CBC_LBPERF_16 == "No" & CBC_EOS_FCC_LBORRES%in%c(0,-7),as.double(NA), CBC_EOS_FCC_LBORRES),
           CBC_RDW_PCT_LBORRES = if_else(CBC_LBPERF_17 == "No" & CBC_RDW_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_RDW_PCT_LBORRES),
           CBC_PDW_CT_LBORRES = if_else(CBC_LBPERF_18 == "No" & CBC_PDW_CT_LBORRES%in%c(0,-7),as.double(NA), CBC_PDW_CT_LBORRES),
           CBC_PCT_PCT_LBORRES = if_else(CBC_LBPERF_19 == "No" & CBC_PCT_PCT_LBORRES%in%c(0,-7),as.double(NA), CBC_PCT_PCT_LBORRES)) %>%
    mutate_if(is.double,~replace(.,.==-7,NA)) |>  mutate(ANC_OBSSTDAT = if_else(is.na(ANC_OBSSTDAT),visit_date,ANC_OBSSTDAT))  %>% 
  filter(TYPE_VISIT!="Enrollment")


 # cbc_na %>% filter(TYPE_VISIT!="Enrollment") %>% 
 #    select(MOMID,ANC_OBSSTDAT,SCRN_FAC_SPFY_OBSLOC,TYPE_VISIT,MAT_VISIT_MNH04,MAT_VISIT_MNH12,contains("LBORRES")) %>% filter(is.na(CBC_HB_LBORRES)) %>% View()
 #   group_by()


# CBC_HB_LBORRES
CBC_HB_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_HB_LBORRES) %>% filter(is.na(CBC_HB_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_HB")
# CBC_HCT_LBORRES
CBC_HCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_HCT_LBORRES) %>% filter(is.na(CBC_HCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_HCT")
# CBC_WBC_LBORRES
CBC_WBC_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_WBC_LBORRES) %>% filter(is.na(CBC_WBC_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_WBC")
# CBC_NEU_PCT_LBORRES
CBC_NEU_PCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_PCT_LBORRES) %>% filter(is.na(CBC_NEU_PCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_NEU_PCT")
# CBC_NEU_FCC_LBORRES
CBC_NEU_FCC_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_FCC_LBORRES) %>% filter(is.na(CBC_NEU_FCC_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_NEU_FCC")
# CBC_LYMPH_PCT_LBORRES
CBC_LYMPH_PCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_PCT_LBORRES) %>% filter(is.na(CBC_LYMPH_PCT_LBORRES)) %>%
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_LYMPH_PCT")
# CBC_LYMPH_FCC_LBORRES
CBC_LYMPH_FCC_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_FCC_LBORRES) %>% filter(is.na(CBC_LYMPH_FCC_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_HCT")
# CBC_ERYTH_MM_LBORRES
CBC_ERYTH_MM_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_ERYTH_MM_LBORRES) %>% filter(is.na(CBC_ERYTH_MM_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_ERYTH_MM")
# CBC_MCV_LBORRES
CBC_MCV_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_MCV_LBORRES) %>% filter(is.na(CBC_MCV_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_MCV")
# CBC_MCH_LBORRES
CBC_MCH_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_MCH_LBORRES) %>% filter(is.na(CBC_MCH_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_MCH")
# CBC_MCHC_GDL_LBORRES
CBC_MCHC_GDL_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_MCHC_GDL_LBORRES) %>% filter(is.na(CBC_MCHC_GDL_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_MCHC_GDL")
# CBC_PLATE_LBORRES
CBC_PLATE_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_PLATE_LBORRES) %>% filter(is.na(CBC_PLATE_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_PLATE")
# CBC_MONO_PCT_LBORRES
CBC_MONO_PCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_PCT_LBORRES) %>% filter(is.na(CBC_MONO_PCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_MONO_PCT")
# CBC_MONO_FCC_LBORRES
CBC_MONO_FCC_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_FCC_LBORRES) %>% filter(is.na(CBC_MONO_FCC_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_MONO_FCC")
# CBC_EOS_PCT_LBORRES
CBC_EOS_PCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_PCT_LBORRES) %>% filter(is.na(CBC_EOS_PCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_EOS_PCT")
# CBC_EOS_FCC_LBORRES
CBC_EOS_FCC_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_FCC_LBORRES) %>% filter(is.na(CBC_EOS_FCC_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_EOS_FCC")
# CBC_RDW_PCT_LBORRES
CBC_RDW_PCT_vsts <- cbc_na_vsts %>% select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_RDW_PCT_LBORRES) %>% filter(is.na(CBC_RDW_PCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_RDW_PCT")
# CBC_PDW_CT_LBORRES
CBC_PDW_CT_vsts <- cbc_na_vsts %>% filter(CBC_LBPERF_18%in%c("Yes",NA)) %>%  
  select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_18,CBC_PDW_CT_LBORRES) %>% filter(is.na(CBC_PDW_CT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_PDW_CT")
# CBC_PCT_PCT_LBORRES
CBC_PCT_PCT_vsts <- cbc_na_vsts %>% filter(CBC_LBPERF_19%in%c("Yes",NA)) %>%  
  select(MOMID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_19,CBC_PCT_PCT_LBORRES) %>% filter(is.na(CBC_PCT_PCT_LBORRES)) %>% 
  group_by(TYPE_VISIT) %>% count() %>% mutate(type = "CBC_PCT_PCT")


bind_rows(CBC_HB_vsts,CBC_HCT_vsts,CBC_WBC_vsts,CBC_NEU_PCT_vsts,CBC_NEU_FCC_vsts,CBC_LYMPH_PCT_vsts,CBC_LYMPH_FCC_vsts,
           CBC_ERYTH_MM_vsts,CBC_MCV_vsts,CBC_MCH_vsts,CBC_MCHC_GDL_vsts,
           CBC_PLATE_vsts,CBC_MONO_PCT_vsts,CBC_MONO_FCC_vsts,CBC_EOS_PCT_vsts,CBC_EOS_FCC_vsts,CBC_RDW_PCT_vsts,CBC_PDW_CT_vsts,CBC_PCT_PCT_vsts) %>% 
  #pivot_longer(names_to = "CBC components",values_to = "frequency",cols = CBC_HB :CBC_PCT_PCT) %>% 
  ggplot(aes(area = n, fill=TYPE_VISIT,
             label = paste0(type, "\n","(",n,")")))+
  geom_treemap(lty = 3,size=2,alpha=0.3)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,
                    grow = F) +
   facet_wrap(~TYPE_VISIT)+
  theme(legend.position = "none",
        strip.text = element_text(
          size = 12,face = "bold",colour = "black"),
        legend.text = element_text(size = 14,face = "bold"))+ 
 scale_fill_manual(values = c("#00FF00", "#FFA54F", "#00F5FF", "#FFFF00"))


```

@fig-cbc shows the break down of the pending CBC (full blood count) components

#### CBC (Not Done)

```{r}
#| label: fig-cbcnotdone
#| fig-cap: "CBC Results indicated as Not Done"
#| warning: false
#| fig-align: center
#| column: body
#| fig-width: 5
#| fig-height: 3
#| echo: false
#Tests not done
  # CBC_HB_LBORRES
  CBC_HB_NOT_done <- cbc_na %>% filter(CBC_LBPERF_1 == "No"&is.na(CBC_HB_LBORRES)) %>% 
  select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_HB_LBORRES) %>% filter(is.na(CBC_HB_LBORRES)) %>% nrow()
  # CBC_HCT_LBORRES
  CBC_HCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_2 == "No"&is.na(CBC_HCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_HCT_LBORRES) %>% filter(is.na(CBC_HCT_LBORRES)) %>% nrow()
  # CBC_WBC_LBORRES
  CBC_WBC_NOT_done <- cbc_na %>% filter(CBC_LBPERF_3 == "No"&is.na(CBC_WBC_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_WBC_LBORRES) %>% filter(is.na(CBC_WBC_LBORRES)) %>% nrow()
  # CBC_NEU_PCT_LBORRES
  CBC_NEU_PCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_4 == "No"&is.na(CBC_NEU_PCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_PCT_LBORRES) %>% filter(is.na(CBC_NEU_PCT_LBORRES)) %>% nrow()
  # CBC_NEU_FCC_LBORRES
  CBC_NEU_FCC_NOT_done <- cbc_na %>% filter(CBC_LBPERF_5 == "No"&is.na(CBC_NEU_FCC_LBORRES)) %>% 
    filter(CBC_LBPERF_2 == "No"&is.na(CBC_HCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_NEU_FCC_LBORRES) %>% filter(is.na(CBC_NEU_FCC_LBORRES)) %>% nrow()
  # CBC_LYMPH_PCT_LBORRES
  CBC_LYMPH_PCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_6 == "No"&is.na(CBC_LYMPH_PCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_PCT_LBORRES) %>% filter(is.na(CBC_LYMPH_PCT_LBORRES)) %>% nrow()
  # CBC_LYMPH_FCC_LBORRES
  CBC_LYMPH_FCC_NOT_done <- cbc_na %>% filter(CBC_LBPERF_7 == "No"&is.na(CBC_LYMPH_FCC_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LYMPH_FCC_LBORRES) %>% filter(is.na(CBC_LYMPH_FCC_LBORRES)) %>% nrow()
  # CBC_ERYTH_MM_LBORRES
  CBC_ERYTH_MM_NOT_done <- cbc_na %>% filter(CBC_LBPERF_8 == "No"&is.na(CBC_ERYTH_MM_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_ERYTH_MM_LBORRES) %>% filter(is.na(CBC_ERYTH_MM_LBORRES)) %>% nrow()
  # CBC_MCV_LBORRES
  CBC_MCV_NOT_done <- cbc_na %>% filter(CBC_LBPERF_9 == "No"&is.na(CBC_MCV_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCV_LBORRES) %>% filter(is.na(CBC_MCV_LBORRES)) %>% nrow()
  # CBC_MCH_LBORRES
  CBC_MCH_NOT_done <- cbc_na %>% filter(CBC_LBPERF_10 == "No"&is.na(CBC_MCH_LBORRES)) %>%
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCH_LBORRES) %>% filter(is.na(CBC_MCH_LBORRES)) %>% nrow()
  # CBC_MCHC_GDL_LBORRES
  CBC_MCHC_GDL_NOT_done <- cbc_na %>% filter(CBC_LBPERF_11 == "No"&is.na(CBC_MCHC_GDL_LBORRES)) %>%
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MCHC_GDL_LBORRES) %>% filter(is.na(CBC_MCHC_GDL_LBORRES)) %>% nrow()
  # CBC_PLATE_LBORRES
  CBC_PLATE_NOT_done <- cbc_na %>% filter(CBC_LBPERF_12 == "No"&is.na(CBC_PLATE_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_PLATE_LBORRES) %>% filter(is.na(CBC_PLATE_LBORRES)) %>% nrow()
  # CBC_MONO_PCT_LBORRES
  CBC_MONO_PCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_13 == "No"&is.na(CBC_MONO_PCT_LBORRES)) %>% 
    filter(CBC_LBPERF_2 == "No"&is.na(CBC_HCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_PCT_LBORRES) %>% filter(is.na(CBC_MONO_PCT_LBORRES)) %>% nrow()
  # CBC_MONO_FCC_LBORRES
  CBC_MONO_FCC_NOT_done <- cbc_na %>% filter(CBC_LBPERF_14 == "No"&is.na(CBC_MONO_FCC_LBORRES)) %>% 
    filter(CBC_LBPERF_2 == "No"&is.na(CBC_HCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_MONO_FCC_LBORRES) %>% filter(is.na(CBC_MONO_FCC_LBORRES)) %>% nrow()
  # CBC_EOS_PCT_LBORRES
  CBC_EOS_PCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_15 == "No"&is.na(CBC_EOS_PCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_PCT_LBORRES) %>% filter(is.na(CBC_EOS_PCT_LBORRES)) %>% nrow()
  # CBC_EOS_FCC_LBORRES
  CBC_EOS_FCC_NOT_done <- cbc_na %>% filter(CBC_LBPERF_16 == "No"&is.na(CBC_EOS_FCC_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_EOS_FCC_LBORRES) %>% filter(is.na(CBC_EOS_FCC_LBORRES)) %>% nrow()
  # CBC_RDW_PCT_LBORRES
  CBC_RDW_PCT_NOT_done <- cbc_na %>% filter(CBC_LBPERF_17 == "No"&is.na(CBC_RDW_PCT_LBORRES)) %>% 
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_RDW_PCT_LBORRES) %>% filter(is.na(CBC_RDW_PCT_LBORRES)) %>% nrow()
  # CBC_PDW_CT_LBORRES
CBC_PDW_CT_LBORRES <- cbc_na %>% filter(CBC_LBPERF_18%in%c("No",NA)) %>%  
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_18,CBC_PDW_CT_LBORRES) %>% filter(is.na(CBC_PDW_CT_LBORRES)) %>% nrow()
  # CBC_PCT_PCT_LBORRES
  CBC_PCT_LBORRES <- cbc_na %>% filter(CBC_LBPERF_19%in%c("No",NA)) %>%  
    select(MOMID,SCRN_FAC_SPFY_OBSLOC,CBC_LBPERF_19,CBC_PCT_PCT_LBORRES) %>% filter(is.na(CBC_PCT_PCT_LBORRES)) %>% nrow()
  
  
  
    data.frame(CBC_HB_NOT_done,CBC_HCT_NOT_done,CBC_WBC_NOT_done,CBC_NEU_PCT_NOT_done,CBC_NEU_FCC_NOT_done,
             CBC_LYMPH_PCT_NOT_done,CBC_LYMPH_FCC_NOT_done,CBC_ERYTH_MM_NOT_done,CBC_MCV_NOT_done,CBC_MCH_NOT_done,CBC_MCHC_GDL_NOT_done,
             CBC_PLATE_NOT_done,CBC_MONO_PCT_NOT_done,CBC_MONO_FCC_NOT_done,CBC_EOS_PCT_NOT_done,
             CBC_EOS_FCC_NOT_done,CBC_RDW_PCT_NOT_done,CBC_PDW_CT_LBORRES,CBC_PCT_LBORRES) %>% 
    pivot_longer(names_to = "CBC components",values_to = "frequency",cols = CBC_HB_NOT_done:CBC_PCT_LBORRES) %>% 
    ggplot(aes(area = frequency, 
               label = paste0(`CBC components`, "\n","(",frequency,")")))+
    geom_treemap(fill ="#FFEFDB",lty = 3,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,
                    grow = F) +
    # facet_grid(rows=vars(type)) +
    theme(legend.position = "bottom",
          legend.title = element_blank(),
          legend.text = element_text(size = 20,face = "bold"))
```
:::

### Breakdown of Pending LFT, KFT Results

```{r}
#| label: fig-lft
#| fig-cap: "Breakdown of Pending LFT,KFT & Urinalysis Results"
#| warning: false
#| fig-align: center
#| fig-width: 11.2
#| fig-height: 5.2
#| echo: false

#LAB VARIABLES

# KIDNEY FUNCTION TESTS

ReTention_Data <- ALL_PRiSMA %>% drop_na(MOMID) %>%   select(MOMID,TYPE_VISIT,ANC_OBSSTDAT,DELIV_DSSTDAT_INF1,CLOSE_DSSTDAT) %>%
  group_by(MOMID,TYPE_VISIT) %>% fill(DELIV_DSSTDAT_INF1) %>% ungroup() %>%
  mutate(DELIV_DSSTDAT_INF1 = as.Date(DELIV_DSSTDAT_INF1),
         composite_obsdate = ANC_OBSSTDAT,
         composite_obsdate = if_else(is.na(composite_obsdate),DELIV_DSSTDAT_INF1,ANC_OBSSTDAT)) %>% 
  full_join(ALL_PRiSMA %>% filter(TYPE_VISIT == "Enrollment") %>% distinct(MOMID,.keep_all = T) %>%
              select(MOMID,CON_DSSTDAT, TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,US_OHOSTDAT, US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
              mutate(US_OHOSTDAT = as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     CON_DSSTDAT = as.Date(CON_DSSTDAT,"%d/%m/%Y"),
                     GA_days = (as.double(US_GA_WKS_AGE_FTS1)*7) + as.numeric(US_GA_DAYS_AGE_FTS1)) %>%
              mutate(ANC_20_Actual_Date = ((20 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_20_Earliest_Date = ANC_20_Actual_Date - 14,
                     ANC_20_Latest_Date = ANC_20_Actual_Date + 20,
                     ANC_28_Actual_Date = ((28 *7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_28_Earliest_Date = ANC_28_Actual_Date - 14,
                     ANC_28_Latest_Date = ANC_28_Actual_Date + 20,
                     ANC_32_Actual_Date = ((32 * 7) - GA_days)  + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_32_Earliest_Date = ANC_32_Actual_Date - 7,
                     ANC_32_Latest_Date = ANC_32_Actual_Date + 13,
                     ANC_36_Actual_Date = ((36 * 7) - GA_days) + as.Date(US_OHOSTDAT,"%d/%m/%Y"),
                     ANC_36_Earliest_Date = ANC_36_Actual_Date - 14,
                     ANC_36_Latest_Date = ANC_36_Actual_Date + 20) %>%
              select(MOMID, CON_DSSTDAT,SCRN_FAC_SPFY_OBSLOC, US_GA_WKS_AGE_FTS1, US_GA_DAYS_AGE_FTS1,
                     ANC_20_Earliest_Date,ANC_20_Actual_Date,ANC_20_Latest_Date,ANC_28_Earliest_Date,
                     ANC_28_Actual_Date, ANC_28_Latest_Date, ANC_32_Earliest_Date, ANC_32_Actual_Date,
                     ANC_32_Latest_Date, ANC_36_Earliest_Date, ANC_36_Actual_Date, ANC_36_Latest_Date))

# KFT  

kft_na <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>%  #filter(MOMID!="KEARC00300") %>% 
  filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
 #select(MOMID,TYPE_VISIT,MAT_VISIT_MNH04) %>% View()
  # mutate(SODIUM_LBORRES = if_else(RENAL_LBPERF_3 == "No" & SODIUM_LBORRES == 0, as.integer(NA),SODIUM_LBORRES),
  #        POTASSIUM_LBORRES = if_else(RENAL_LBPERF_4 == "No" & POTASSIUM_LBORRES == 0, as.double(NA),POTASSIUM_LBORRES),
  #        CHLORIDE_LBORRES = if_else(RENAL_LBPERF_5 == "No" & CHLORIDE_LBORRES == 0, as.double(NA),CHLORIDE_LBORRES),
  #        PHOSPHORUS_LBORRES = if_else(RENAL_LBPERF_6 == "No" & PHOSPHORUS_LBORRES == 0, as.double(NA),PHOSPHORUS_LBORRES),
  #        CALCIUM_LBORRES = if_else(RENAL_LBPERF_7 == "No" & CALCIUM_LBORRES == 0, as.double(NA),CALCIUM_LBORRES),
  #        CARB_DIOX_LBORRES = if_else(RENAL_LBPERF_8 == "No" & CARB_DIOX_LBORRES == 0, as.integer(NA),CARB_DIOX_LBORRES)
  # ) %>% 
  mutate_at(vars(BUN_mmoll_LBORRES, CREAT_umoll_LBORRES,
                 SODIUM_LBORRES,	POTASSIUM_LBORRES,	CHLORIDE_LBORRES, PHOSPHORUS_LBORRES,	CALCIUM_LBORRES,
                 CARB_DIOX_LBORRES),~replace(.x,.x==-5,NA)) %>% replace(.,.==-7,NA) %>% 
  
  select(MOMID,ANC_OBSSTDAT,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,RENAL_LBPERF_1,BUN_mmoll_LBORRES, RENAL_LBPERF_2,CREAT_umoll_LBORRES,	
         RENAL_LBPERF_3,SODIUM_LBORRES,	RENAL_LBPERF_4,POTASSIUM_LBORRES,RENAL_LBPERF_5,
         CHLORIDE_LBORRES, RENAL_LBPERF_6,PHOSPHORUS_LBORRES,RENAL_LBPERF_7,	CALCIUM_LBORRES, RENAL_LBPERF_8, CARB_DIOX_LBORRES) %>% 
  mutate(ANC_OBSSTDAT = if_else(is.na(ANC_OBSSTDAT),visit_date,ANC_OBSSTDAT)) #%>% 
  # anti_join(ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID) %>%
  #             full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_32_Earliest_Date) %>% distinct(MOMID)) %>% 
  #             mutate(TYPE_VISIT = 4, TYPE_VISIT = factor(TYPE_VISIT,levels = c(4),labels = c("ANC-32"))))


# BUN_mmoll_LBORRES
BUN_mmoll_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_1%in%c("Yes",NA)) %>%
  filter(is.na(BUN_mmoll_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,BUN_mmoll_LBORRES) #%>% view()
# CREAT_umoll_LBORRES
CREAT_umoll_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_2%in%c("Yes",NA)) %>%
  filter(is.na(CREAT_umoll_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CREAT_umoll_LBORRES) #%>% view()
# SODIUM_LBORRES
SODIUM_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_3%in%c("Yes",NA)) %>%
  filter(is.na(SODIUM_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,SODIUM_LBORRES) #%>% view()
# POTASSIUM_LBORRES
POTASSIUM_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_4%in%c("Yes",NA)) %>%
  filter(is.na(POTASSIUM_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,POTASSIUM_LBORRES) #%>% view()
# CHLORIDE_LBORRES
CHLORIDE_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_5%in%c("Yes",NA)) %>%
  filter(is.na(CHLORIDE_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CHLORIDE_LBORRES) #%>% view()
# PHOSPHORUS_LBORRES
PHOSPHORUS_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_6%in%c("Yes",NA)) %>%
  filter(is.na(PHOSPHORUS_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,PHOSPHORUS_LBORRES) #%>% view()
# CALCIUM_LBORRES
CALCIUM_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_7%in%c("Yes",NA)) %>%
  filter(is.na(CALCIUM_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CALCIUM_LBORRES) #%>% view()
# CARB_DIOX_LBORRES
CARB_DIOX_LBORRES_NA <- kft_na %>% #filter(RENAL_LBPERF_8%in%c("Yes",NA)) %>%
  filter(is.na(CARB_DIOX_LBORRES)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CARB_DIOX_LBORRES) #%>% view()

#------------------------------------------------------------------------------------------------
#LIVER FUNCTION TEST.

lft_na <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% #filter(MOMID!="KEARC00300") %>% 
   filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
  select(MOMID,ANC_OBSSTDAT,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC, LFT_LBTSTDAT,	LFT_LBPERF_1,	AST_ul_LBORRES,	LFT_LBPERF_2,	ALT_ul_LBORRES,
         LFT_LBPERF_3,	ALP_LBORRES,	LFT_LBPERF_4,	TBILIRUBIN_LBORRES,	LFT_LBPERF_5,
         DBILIRUBIN_LBORRES,	LFT_LBPERF_6,	TPROTEIN_LBORRES,	LFT_LBPERF_7,	ALBUMIN_LBORRES,
         LFT_LBPERF_8,	GAMMAGT_LBORRES,	LFT_LBPERF_9,	IBILIRUBIN_LBORRES) %>% mutate_if(is.double,~replace(.,.==-7,NA)) %>% 
  replace(.,.==-7,NA) %>% 
  # anti_join(ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID) %>%
  #             full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_32_Earliest_Date) %>% distinct(MOMID)) %>% 
  #             mutate(TYPE_VISIT = 4, TYPE_VISIT = factor(TYPE_VISIT,levels = c(4),labels = c("ANC-32")))) %>% 
  # mutate(DBILIRUBIN_LBORRES = if_else(LFT_LBPERF_5 == "No" & DBILIRUBIN_LBORRES%in%c(0,-7), as.double(NA),DBILIRUBIN_LBORRES),
  #        TPROTEIN_LBORRES = if_else(LFT_LBPERF_6 == "No" & TPROTEIN_LBORRES%in%c(0,-7), as.double(NA),TPROTEIN_LBORRES),
  #        GAMMAGT_LBORRES = if_else(LFT_LBPERF_8 == "No" & GAMMAGT_LBORRES%in%c(0,-7), as.double(NA),GAMMAGT_LBORRES),
  #        IBILIRUBIN_LBORRES = if_else(LFT_LBPERF_9 == "No" & IBILIRUBIN_LBORRES%in%c(0,-7), as.double(NA),IBILIRUBIN_LBORRES)) %>%
  mutate_at(vars(AST_ul_LBORRES,	ALT_ul_LBORRES,
                 ALP_LBORRES,	TBILIRUBIN_LBORRES,	DBILIRUBIN_LBORRES,	TPROTEIN_LBORRES,
                 ALBUMIN_LBORRES, GAMMAGT_LBORRES, IBILIRUBIN_LBORRES),~replace(.x,.x==-5,NA)) %>%
  rename(AST_SGOT = AST_ul_LBORRES,	ALT_SGPT=ALT_ul_LBORRES,
         ALP = ALP_LBORRES,	TBILIRUBIN=TBILIRUBIN_LBORRES,	DBILIRUBIN=DBILIRUBIN_LBORRES,	TPROTEIN = TPROTEIN_LBORRES,
         ALBUMIN = ALBUMIN_LBORRES, GAMMAGT = GAMMAGT_LBORRES, IBILIRUBIN = IBILIRUBIN_LBORRES) %>% 
  mutate(ANC_OBSSTDAT = if_else(is.na(ANC_OBSSTDAT),visit_date,ANC_OBSSTDAT)) #%>% view()



# CARB_DIOX_LBORRES
AST_SGOT_NA <- lft_na %>% #filter(LFT_LBPERF_1%in%c("Yes",NA)) %>% 
  filter(is.na(AST_SGOT)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,AST_SGOT) #%>% view()
# ALT_SGPT
ALT_SGPT_NA <- lft_na %>% #filter(LFT_LBPERF_2%in%c("Yes",NA)) %>% 
  filter(is.na(ALT_SGPT)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,ALT_SGPT) #%>% view()
# ALP
ALP_NA <-  lft_na %>% #filter(LFT_LBPERF_3%in%c("Yes",NA)) %>% 
  filter(is.na(ALP)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,ALP) #%>% view()
# TBILIRUBIN
TBILIRUBIN_NA <- lft_na %>% #filter(LFT_LBPERF_4%in%c("Yes",NA)) %>% 
  filter(is.na(TBILIRUBIN)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,TBILIRUBIN) #%>% view()
# DBILIRUBIN
DBILIRUBIN_NA <- lft_na %>% #filter(LFT_LBPERF_5%in%c("Yes",NA)) %>% 
  filter(is.na(DBILIRUBIN)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,DBILIRUBIN) #%>% view()
# TPROTEIN
TPROTEIN_NA <- lft_na %>% #filter(LFT_LBPERF_6%in%c("Yes",NA)) %>% 
  filter(is.na(TPROTEIN)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,TPROTEIN) #%>% view()
# ALBUMIN
ALBUMIN_NA <- lft_na %>% #filter(LFT_LBPERF_7%in%c("Yes",NA)) %>% 
  filter(is.na(ALBUMIN)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,ALBUMIN) #%>% view()
# GAMMAGT
GAMMAGT_NA <- lft_na %>% #filter(LFT_LBPERF_8%in%c("Yes",NA)) %>% 
  filter(is.na(GAMMAGT)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,GAMMAGT) #%>% view()
# IBILIRUBIN
IBILIRUBIN_NA <- lft_na %>% #filter(LFT_LBPERF_9%in%c("Yes",NA)) %>% 
  filter(is.na(IBILIRUBIN)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,IBILIRUBIN) #%>% view()

#--------------------------------------------------------------------------------------
#             THYROID FUNCTION TEST

tsh_na <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% #filter(MOMID!="KEARC00300") %>% 
   filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
  select(MOMID,ANC_OBSSTDAT,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,THYROID_LBTSTDAT, THYROID_LBPERF_1, THYROID_TSH_LBORRES, THYROID_LBPERF_2,
         THYROID_FREET4_LBORRES, THYROID_LBPERF_3, THYROID_FREET3_LBORRES) %>%
  # anti_join(ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID) %>%
  #             full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_32_Earliest_Date) %>% distinct(MOMID)) %>% 
  #             mutate(TYPE_VISIT = 4, TYPE_VISIT = factor(TYPE_VISIT,levels = c(4),labels = c("ANC-32")))) %>% 
  mutate_if(is.double,~replace(.,.==-7.0,NA)) %>% mutate_if(is.double,~replace(.,.==0,NA)) %>%
  
  mutate(THYROID_FREET4_LBORRES = if_else(THYROID_LBPERF_2 == "No" & THYROID_FREET4_LBORRES == 0, as.double(NA),THYROID_FREET4_LBORRES),
         THYROID_FREET3_LBORRES = if_else(THYROID_LBPERF_3 == "No" & THYROID_FREET3_LBORRES == 0, as.double(NA),THYROID_FREET3_LBORRES)) %>%
  
  rename(THYROID_TSH = THYROID_TSH_LBORRES, THYROID_FREET4 = THYROID_FREET4_LBORRES,
         THYROID_FREET3 = THYROID_FREET3_LBORRES) %>%  mutate(ANC_OBSSTDAT = if_else(is.na(ANC_OBSSTDAT),visit_date,ANC_OBSSTDAT)) #%>% view()


# THYROID_TSH
THYROID_TSH_NA <-  tsh_na %>% #filter(THYROID_LBPERF_1%in%c("Yes",NA)) %>% 
  filter(is.na(THYROID_TSH)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,THYROID_TSH) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T)#%>% view()
# THYROID_FREET4
THYROID_FREET4_NA <- tsh_na %>% #filter(THYROID_LBPERF_2%in%c("Yes",NA)) %>% 
  filter(is.na(THYROID_FREET4)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,THYROID_FREET4) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T)#%>% view()
# THYROID_FREET3
THYROID_FREET3_NA <- tsh_na %>% #filter(THYROID_LBPERF_3%in%c("Yes",NA)) %>% 
  filter(is.na(THYROID_FREET3)) %>% select(MOMID,ANC_OBSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,THYROID_FREET3) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T)#%>% view()

#--------------------------------------------------------------------------------------

#            URINALYSIS

# Removals
# anc 20
urin_rmve <- bind_rows(ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_20_Earliest_Date) %>% distinct(MOMID) %>%
                         full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_20_Earliest_Date) %>% distinct(MOMID)) %>% 
                         mutate(TYPE_VISIT = 2, TYPE_VISIT = factor(TYPE_VISIT,levels = c(2),labels = c("ANC-20"))),
                       
                       # anc 28
                       ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_28_Earliest_Date) %>% distinct(MOMID) %>%
                         full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_28_Earliest_Date) %>% distinct(MOMID)) %>% 
                         mutate(TYPE_VISIT = 3, TYPE_VISIT = factor(TYPE_VISIT,levels = c(3),labels = c("ANC-28"))), 
                       
                       # anc 32
                       ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_32_Earliest_Date) %>% distinct(MOMID) %>%
                         full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_32_Earliest_Date) %>% distinct(MOMID)) %>% 
                         mutate(TYPE_VISIT = 4, TYPE_VISIT = factor(TYPE_VISIT,levels = c(4),labels = c("ANC-32"))),
                       
                       # anc 36
                       ReTention_Data %>% filter(TYPE_VISIT=="IPC") %>% filter(composite_obsdate<ANC_36_Earliest_Date) %>% distinct(MOMID) %>%
                         full_join(ReTention_Data %>% drop_na(CLOSE_DSSTDAT) %>% filter(CLOSE_DSSTDAT<ANC_36_Earliest_Date) %>% distinct(MOMID)) %>% 
                         mutate(TYPE_VISIT = 5, TYPE_VISIT = factor(TYPE_VISIT,levels = c(5),labels = c("ANC-36"))))



urin_na <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","PNC-6")) %>%
 # filter(MOMID!="KEARC00300") %>%  
  filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>%
  filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>%  #select(MOMID,TYPE_VISIT,MAT_VISIT_MNH04,MAT_VISIT_MNH12) %>% View()
  select(MOMID,VISIT_OBSSTDAT,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT, UA_LBPERF_1,UA_PROT_LBORRES,UA_LBPERF_2,
         UA_LEUK_LBORRES,UA_LBPERF_3,UA_NITRITE_LBORRES) %>% group_by(MOMID) %>% fill(SCRN_FAC_SPFY_OBSLOC,.direction = "updown") %>% 
  ungroup() %>% replace(.,.==77,NA) #%>% anti_join(urin_rmve)
#select(MOMID,VISIT_OBSSTDAT,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,CON_DSSTDAT,UA_PROT_LBORRES,UA_LEUK_LBORRES,UA_NITRITE_LBORRES)# %>% View()

# UA_PROT_LBORRES
UA_PROT_LBORRES_NA <-  urin_na %>% #filter(UA_LBPERF_1%in%c("Yes",NA)) %>% 
  filter(is.na(UA_PROT_LBORRES)) %>% select(MOMID,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,UA_PROT_LBORRES) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) #%>% view()

# UA_LEUK_LBORRES
UA_LEUK_LBORRES_NA <-  urin_na %>% #filter(UA_LBPERF_2%in%c("Yes",NA)) %>% 
  filter(is.na(UA_LEUK_LBORRES)) %>% select(MOMID,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,UA_LEUK_LBORRES) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T)#%>% view()

# UA_NITRITE_LBORRES
UA_NITRITE_LBORRES_NA <-  urin_na %>% #filter(UA_LBPERF_3%in%c("Yes",NA)) %>% 
  filter(is.na(UA_NITRITE_LBORRES)) %>% select(MOMID,visit_date,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,UA_NITRITE_LBORRES) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T)#%>% view()


#-------------------------------------------------------------------------------------------------------------------------

#              DIAGRAMATIC REPRESENTATION
#----------------------------------------------------------------------------------------------------------------------------


# KIDNEY FUNCTION TESTS

# BUN
Lab_data_na <- bind_rows(BUN_mmoll_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(BUN_mmoll_LBORRES))) %>% 
                           mutate(lab_variable = paste0("BUN"),
                                  type =paste0("KFT")),
                         # CREATINE
                         CREAT_umoll_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(CREAT_umoll_LBORRES))) %>% 
                           mutate(lab_variable = paste0("CREATINE"),
                                  type =paste0("KFT")),
                         # SODIUM
                         SODIUM_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(SODIUM_LBORRES))) %>% 
                           mutate(lab_variable = paste0("SODIUM"),
                                  type =paste0("KFT")),
                         # POTASSIUM
                         POTASSIUM_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(POTASSIUM_LBORRES))) %>% 
                           mutate(lab_variable = paste0("POTASSIUM"),
                                  type =paste0("KFT")),
                         # CHLORIDE
                         CHLORIDE_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(CHLORIDE_LBORRES))) %>% 
                           mutate(lab_variable = paste0("CHLORIDE"),
                                  type =paste0("KFT")),
                         # PHOSPHORUS
                         PHOSPHORUS_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(PHOSPHORUS_LBORRES))) %>% 
                           mutate(lab_variable = paste0("PHOSPHORUS"),
                                  type =paste0("KFT")),
                         # CALCIUM
                         CALCIUM_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(CALCIUM_LBORRES))) %>% 
                           mutate(lab_variable = paste0("CALCIUM"),
                                  type =paste0("KFT")),
                         # CARB_DIOX
                         CARB_DIOX_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(CARB_DIOX_LBORRES))) %>% 
                           mutate(lab_variable = paste0("CARB_DIOX"),
                                  type =paste0("KFT")),
                         
                         # LIVER FUNCTION TEST.
                         
                         # AST_SGOT
                         AST_SGOT_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(AST_SGOT))) %>% 
                           mutate(lab_variable = paste0("AST/SGOT"),
                                  type =paste0("LFT")),
                         # ALT_SGPT
                         ALT_SGPT_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(ALT_SGPT))) %>% 
                           mutate(lab_variable = paste0("ALT/SGPT"),
                                  type =paste0("LFT")),
                         # ALP
                         ALP_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(ALP))) %>% 
                           mutate(lab_variable = paste0("ALP"),
                                  type =paste0("LFT")),
                         # TBILIRUBIN
                         TBILIRUBIN_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(TBILIRUBIN))) %>% 
                           mutate(lab_variable = paste0("TBILIRUBIN"),
                                  type =paste0("LFT")),
                         # DBILIRUBIN
                         DBILIRUBIN_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(DBILIRUBIN))) %>% 
                           mutate(lab_variable = paste0("DBILIRUBIN"),
                                  type =paste0("LFT")),
                         # TPROTEIN
                         TPROTEIN_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(TPROTEIN))) %>% 
                           mutate(lab_variable = paste0("TPROTEIN"),
                                  type =paste0("LFT")),
                         # ALBUMIN
                         ALBUMIN_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(ALBUMIN))) %>% 
                           mutate(lab_variable = paste0("ALBUMIN"),
                                  type =paste0("LFT")),
                         # GAMMAGT
                         GAMMAGT_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(GAMMAGT))) %>% 
                           mutate(lab_variable = paste0("GAMMAGT"),
                                  type =paste0("LFT")),
                         # IBILIRUBIN
                         IBILIRUBIN_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(IBILIRUBIN))) %>% 
                           mutate(lab_variable = paste0("IBILIRUBIN"),
                                  type =paste0("LFT")),
                         
                         #THYROID FUNCTION TEST
                         
                         # TSH
                         THYROID_TSH_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(THYROID_TSH))) %>% 
                           mutate(lab_variable = paste0("TSH"),
                                  type =paste0("TSH")),
                         # FREET4
                         THYROID_FREET4_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(THYROID_FREET4))) %>% 
                           mutate(lab_variable = paste0("FREET4"),
                                  type =paste0("TSH")),
                         # FREET3
                         THYROID_FREET3_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(THYROID_FREET3))) %>% 
                           mutate(lab_variable = paste0("FREET3"),
                                  type =paste0("TSH")),
                         
                         #            URINALYSIS
                         
                         # Nitrites
                         UA_NITRITE_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(UA_NITRITE_LBORRES))) %>% 
                           mutate(lab_variable = paste0("Nitrites"),
                                  type =paste0("URINALYSIS")),
                         # Leukocytes
                         UA_LEUK_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(UA_LEUK_LBORRES))) %>% 
                           mutate(lab_variable = paste0("Leukocytes"),
                                  type =paste0("URINALYSIS")),
                         #Protein
                         UA_PROT_LBORRES_NA %>% group_by(TYPE_VISIT) %>% summarize(count_na = sum(is.na(UA_PROT_LBORRES))) %>% 
                           mutate(lab_variable = paste0("Protein"),
                                  type =paste0("URINALYSIS")))  

# The graph
Lab_data_na %>% ggplot(aes(area = count_na,fill=TYPE_VISIT,
                           label = paste0(lab_variable, "\n","(",count_na,")")))+
  geom_treemap(lty = 1,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,
                    grow = F) +
  facet_wrap(~type)+
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        strip.text = element_text(
          size = 12,face = "bold",colour = "black"),
        legend.text = element_text(size = 11,face = "italic"))+
  scale_fill_manual(values = c("#FFEFDB", "#FF83FA", "#87CEFF", "#90EE90", "#FFF68F","#FABBBB"))


```

### Micronutrients: Completeness of key variables

::: panel-tabset
#### Breakdown of pending micronutrient results

```{r}
#| label: fig-micronutrients
#| fig-cap: "Breakdown of pending micronutrient results"
#| warning: false
#| fig-align: center
#| fig-width: 11.2
#| fig-height: 5.2
#| echo: false

 ALL_PRiSMA %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32","PNC-6")) %>% replace(.,.==-7,NA) %>%
   filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
    select(MOMID, CON_DSSTDAT, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT,
           MN_LBTSTDAT,MN_LBPERF_1,VITB12_COB_LBORRES,MN_LBPERF_2,VITB12_HOL_LBORRES,MN_LBPERF_3,FOLATE_PLASMA_NMOLL_LBORRES,
           MN_LBPERF_4,ZINC_LBORRES,MN_LBPERF_5,IRON_HEP_LBORRES,MN_LBPERF_6,IRON_TOT_UGDL_LBORRES,MN_LBPERF_7,VITA_UGDL_LBORRES,
           MN_LBPERF_8,FERRITIN_LBORRES,MN_LBPERF_9,IODINE_LBORRES,MN_LBPERF_10,TRANSFERRIN_LBORRES,MN_LBPERF_11,RBP4_LBORRES,
           MN_LBPERF_12,CRP_LBORRES,MN_LBPERF_13,AGP_LBORRES,MN_LBPERF_14,HRP_LBORRES) %>% 
  
  select(MOMID, CON_DSSTDAT, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT, Cobalamin = VITB12_COB_LBORRES,
         Holotranscobalamin_II = VITB12_HOL_LBORRES,
         Folate_blood_serum = FOLATE_PLASMA_NMOLL_LBORRES, ZINC = ZINC_LBORRES, Iron_hepcidin = IRON_HEP_LBORRES,
         Total_iron_binding_capacity  = IRON_TOT_UGDL_LBORRES, Vitamin_A = VITA_UGDL_LBORRES, FERRITIN = FERRITIN_LBORRES,
         IODINE = IODINE_LBORRES, TRANSFERRIN = TRANSFERRIN_LBORRES, Retinol_protein = RBP4_LBORRES,  C_reactive_protein = CRP_LBORRES,
         Alpha_1_acid_glycoprotein = AGP_LBORRES,  Histidine_rich_protein_2 = HRP_LBORRES) %>%
    mutate(CON_DSSTDAT = as.Date(CON_DSSTDAT)) %>% select(MOMID,TYPE_VISIT,Cobalamin:Histidine_rich_protein_2) %>%
    mutate_at(vars(Cobalamin:Histidine_rich_protein_2),~replace(.x,.x==-5,NA)) %>% 
  pivot_longer(cols = Cobalamin:Histidine_rich_protein_2 ,names_to = "Micronutrient_var",values_to = "Results") %>% 
  mutate_if(is.numeric,as.character) %>% 
  mutate_at(vars(Results),~replace(.x,is.na(.x),"Missing results")) %>% 
  mutate_at(vars(Results),~replace(.x,.x!="Missing results","Available results")) %>% 
  group_by(Micronutrient_var,TYPE_VISIT) %>% count(Results) %>% filter(Results=="Missing results") %>% 
  
ggplot(aes(area = n,fill=TYPE_VISIT,
                           label = paste0(Micronutrient_var, "\n","(",n,")")))+
  geom_treemap(lty = 1,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,inflate.labels = TRUE,
                    grow = F) +
 # facet_wrap(~Micronutrient_var)+
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        strip.text = element_text(
          size = 12,face = "bold",colour = "black"),
        legend.text = element_text(size = 14,face = "bold"))+
  scale_fill_manual(values = c("#FFEFDB", "#90EE90", "#FFF68F"))
  
```

#### Proportion of pending micronutrient results

```{r}
#| label: fig-micron
#| fig-cap: "Proportion of pending micronutrient results"
#| warning: false
#| fig-align: center
#| fig-width: 11.6
#| fig-height: 5.7
#| echo: false


 ALL_PRiSMA %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32","PNC-6")) %>% replace(.,.==-7,NA) %>%
   filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
    select(MOMID, CON_DSSTDAT, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT,
           MN_LBTSTDAT,MN_LBPERF_1,VITB12_COB_LBORRES,MN_LBPERF_2,VITB12_HOL_LBORRES,MN_LBPERF_3,FOLATE_PLASMA_NMOLL_LBORRES,
           MN_LBPERF_4,ZINC_LBORRES,MN_LBPERF_5,IRON_HEP_LBORRES,MN_LBPERF_6,IRON_TOT_UGDL_LBORRES,MN_LBPERF_7,VITA_UGDL_LBORRES,
           MN_LBPERF_8,FERRITIN_LBORRES,MN_LBPERF_9,IODINE_LBORRES,MN_LBPERF_10,TRANSFERRIN_LBORRES,MN_LBPERF_11,RBP4_LBORRES,
           MN_LBPERF_12,CRP_LBORRES,MN_LBPERF_13,AGP_LBORRES,MN_LBPERF_14,HRP_LBORRES) %>% 
  
  select(MOMID, CON_DSSTDAT, SCRN_FAC_SPFY_OBSLOC, TYPE_VISIT, Cobalamin = VITB12_COB_LBORRES,
         Holotranscobalamin_II = VITB12_HOL_LBORRES,
         Folate_blood_serum = FOLATE_PLASMA_NMOLL_LBORRES, ZINC = ZINC_LBORRES, Iron_hepcidin = IRON_HEP_LBORRES,
         Total_iron_binding_capacity  = IRON_TOT_UGDL_LBORRES, Vitamin_A = VITA_UGDL_LBORRES, FERRITIN = FERRITIN_LBORRES,
         IODINE = IODINE_LBORRES, TRANSFERRIN = TRANSFERRIN_LBORRES, Retinol_protein = RBP4_LBORRES,  C_reactive_protein = CRP_LBORRES,
         Alpha_1_acid_glycoprotein = AGP_LBORRES,  Histidine_rich_protein_2 = HRP_LBORRES) %>%
    mutate(CON_DSSTDAT = as.Date(CON_DSSTDAT)) %>% select(MOMID,Cobalamin:Histidine_rich_protein_2) %>%
    mutate_at(vars(Cobalamin:Histidine_rich_protein_2),~replace(.x,.x==-5,NA)) %>% 
  pivot_longer(cols = Cobalamin:Histidine_rich_protein_2 ,names_to = "Micronutrient_var",values_to = "Results") %>% 
  mutate_if(is.numeric,as.character) %>% 
  mutate_at(vars(Results),~replace(.x,is.na(.x),"Missing results")) %>% 
  mutate_at(vars(Results),~replace(.x,.x!="Missing results","Available results")) %>% 
  group_by(Micronutrient_var) %>% count(Results) %>% 
  mutate(percent= round(n/sum(n)*100,1),
         perc = round(n/sum(n),1)) %>% 
  ggplot(aes(x = Micronutrient_var,y = perc, fill = Results)) +
  geom_col(color = "black") +
  labs(x = "",y = "Percent", title = "MICRONUTRIENT RESULTS -- (Proportion of Available / missing results)",
       caption = "Clinical Assessments done at Enrollment, ANC-32 & PNC-6") +
  geom_text(aes(label = paste0(percent,"%")),position = position_stack(),hjust = 2,size = 3.8) +
  theme_light() +
  scale_fill_manual(values = c("#ADFF2F", "#FFC0CB"))+
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.key.height = unit(.7,"cm"),
        legend.text = element_text(size = 13.5),
        legend.key.width = unit(1.8,"cm"),
        plot.caption = element_text(size = 14, face = "italic",colour = "darkblue"),
         plot.title =  element_text(size = 13,hjust = 0.5, face = "italic",colour = "black"),
         axis.text = element_text(size = 12, colour = "darkblue", face = "italic"),
         axis.title = element_text(size = 14,colour = "black", face = "italic"),) +
  coord_flip()
  
```
:::

### Breakdown of pending Red Blood Cell (RBC) Disorder Test Results -- Enrollment

```{r}
#| label: fig-RBC
#| fig-cap: "Breakdown of pending RBC results"
#| warning: false
#| fig-align: center
#| fig-width: 11.2
#| fig-height: 5.2
#| echo: false
 ALL_PRiSMA %>% drop_na(MOMID) %>% filter(CON_DSSTDAT >= "2023-04-03",TYPE_VISIT=="Enrollment") %>% 
  select(MOMID,TYPE_VISIT,RBC_LBTSTDAT:RBC_GLUC6_LBORRES,MAT_VISIT_MNH04,MAT_VISIT_MNH12,COVAL_MNH08,COVAL_MNH04,COYN_MNH12) %>% select(-contains("LBPERF")) %>%
  select(everything(),-contains("DAT"),TYPE_VISIT) %>% select(MOMID,TYPE_VISIT,everything()) %>% 
  mutate_at(vars(3:21),~replace(.x,.x %in%c(55,77),NA)) %>% 
  rename("Sickle cell disease" = RBC_SICKLE_LBORRES,
        "Hemoglobinopathies & Thala results" = RBC_THALA_LBORRES,
        SS = RBC_THALA_1, SC = RBC_THALA_2, SE = RBC_THALA_3, CC = RBC_THALA_4, "SD-Punjab" = RBC_THALA_5, 
        Sβthal = RBC_THALA_6, Eβthal = RBC_THALA_7, Cβthal = RBC_THALA_8, "CD-PunjabED- punjab" = RBC_THALA_9,
        "D-D-Punjab" = RBC_THALA_10, "D-Punjabβthal" = RBC_THALA_11, "thalassemia major" = RBC_THALA_12,
        "thalassemia intermedia" = RBC_THALA_13, "alpha thalassemia" = RBC_THALA_14, "F" = RBC_THALA_15,
        G6PD = RBC_GLUC6_LBORRES) %>% 
  
  
select(MOMID,TYPE_VISIT,`Sickle cell disease`:G6PD) %>%
    mutate_at(vars(`Sickle cell disease`:G6PD),~replace(.x,.x==-5,NA)) %>% 
  mutate_if(is.integer,as.character) %>%  mutate_if(is.factor,as.character) %>% 
  pivot_longer(cols = `Sickle cell disease`:G6PD ,names_to = "RBC_vars",values_to = "Results") %>% 
  mutate_at(vars(Results),~replace(.x,is.na(.x),"Missing results")) %>% 
  mutate_at(vars(Results),~replace(.x,.x!="Missing results","Available results")) %>% 
  group_by(RBC_vars,TYPE_VISIT) %>% count(Results) %>% filter(Results=="Missing results") %>% 
  
ggplot(aes(area = n,fill=TYPE_VISIT,
                           label = paste0(RBC_vars, "\n","(",n,")")))+
  geom_treemap(lty = 1,size=2)+
  geom_treemap_text(color = "black",
                    place = "centre",
                    size = 11,
                    grow = F) +
 # facet_wrap(~Micronutrient_var)+
  # facet_grid(rows=vars(type)) +
  theme(legend.position = "none",
        legend.title = element_blank(),
        strip.text = element_text(
          size = 12,face = "bold",colour = "black"),
        legend.text = element_text(size = 14,face = "bold"))+
  scale_fill_manual(values = c("#FFF3C2FE")) #c("#F0FFF0", "#FFFFFF", "#FFFFFF") c("#FFF3C2FE", "#FFFFFF", "#FFFFFF")



```

```{r}
#| label: tbs-outcomes
#| tbs-cap: "PREGNANCY SURVEILLANCE TRACKING TABLE 2023/2024"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 9
#| fig-height: 5
#                       PREGNANCY OUTCOMES
#----------------------==================-----------------------------

outcomes <- read_rds(here("Data","outcomes.rds"))
# -----------  Total potential participants Pre-screened  ---------
#           =================================================
PS.approach <- ALL_PRiSMA %>% drop_na(SCRNID) %>% distinct(SCRNID,.keep_all = T) %>% 
  #filter(between(SCRN_OBSSTDAT,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  select(SCRNID,SCRN_OBSSTDAT) %>% nrow()

#   -----------  Total Screened participants by Ultrasound  ---------
#           =================================================
PS.eligible <- ALL_PRiSMA %>% drop_na(SCRNID) %>% distinct(SCRNID,.keep_all = T) %>% 
  #filter(between(SCRN_OBSSTDAT,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(complete.cases(US_PELOC)) %>% select(SCRNID,SCRN_OBSSTDAT) %>% distinct(SCRNID,.keep_all = T) %>% nrow()

#  ------------  Total consented participants after Ultrasound  ---------
#           ===================================================
PS.consented <- ALL_PRiSMA %>% drop_na(MOMID) %>%
  #filter(between(CON_DSSTDAT,ymd("2023-06-01"),ymd("2023-06-30")) ) %>% 
  distinct(MOMID) %>% nrow()

#   ---------------------  Total Ultrasound done  ----------------
#           ===================================================
# @ Note::  After removing duplicated enrollments and duplicated ultrasound at screening
#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

No.ultrasound <- ALL_PRiSMA %>% drop_na(US_OHOSTDAT) %>% filter(!TYPE_VISIT %in%c("ANC-20")) %>% 
  #filter(between(US_OHOSTDAT,ymd("2023-06-01"),ymd("2023-06-30")) ) %>% 
  nrow()

#   ----------------- Total Ultrasound done with GA < 20 weeks  ----------------
#                ===================================================
# @ Note::  After removing duplicated enrollments and duplicated ultrasound 
#""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
ultrsnd_ga.20 <- ALL_PRiSMA %>%drop_na(SCRNID,US_OHOSTDAT) %>% 
  #filter(between(US_OHOSTDAT,ymd("2023-06-01"),ymd("2023-06-30")) ) %>% 
  filter(US_GA_WKS_AGE_FTS1 < 20) %>% distinct(SCRNID,.keep_all = T) %>% 
  nrow()

#   -----------------     Total Fetal abnormalities  ----------------
#                ===================================================
fetl.abnom <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  #filter(between(US_OHOSTDAT,ymd("2023-06-01"),ymd("2023-06-30")) ) %>% 
  filter(ANOMALY_PEDESC_FTS1 == "Yes") %>% distinct(MOMID,.keep_all = T) %>% nrow()
 
 # Locked_PRISMA %>% drop_na(MOMID) %>% group_by(MOMID) %>% fill(pregnancy_outcomes,.direction = "updown") %>% ungroup() %>% 
 #  filter(ANOMALY_PEDESC_FTS1 == "Yes") %>% select(MOMID,ANOMALY_PEDESC_FTS1,ANOMALY_SPFY_PEDESC_FTS1,pregnancy_outcomes,COVAL_MNH01) %>% View()
 
 

#   --------------- Total women deferred from Pregnancy Complications ----------------
#                ========================================================
complication <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  #filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(MAT_DSTERM == "Complication requiring higher level care" | !is.na(TRANSFER_OHOLOC)) %>% nrow()

#   ---------------        Total MITs referrals         ----------------
#         ========================================================
# No.MITS = ALL_PRiSMA %>% drop_na(MOMID) %>% 
#   filter(between(outcome_dt,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
#   filter(dth_coenrolled == 1) %>%  distinct(momid) %>% nrow()

#     --------------- Total Day 01(PNC-0) forms completed ----------------
#        ==================================================
Day.1 = ALL_PRiSMA %>% drop_na(MOMID) %>% 
  # filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(TYPE_VISIT == "IPC") %>% distinct(MOMID,.keep_all = T) %>% nrow()

#     --------------- Total Day 42 forms completed ----------------
#        ==================================================
Day.2 = ALL_PRiSMA %>% drop_na(MOMID) %>% 
  #filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(TYPE_VISIT == "PNC-6") %>% distinct(MOMID,.keep_all = T) %>% nrow()




#   ---------------        Total Fetal loss         ----------------
#         ========================================================
fetal_loss <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  #filter(between(visit_date,ymd("2023-04-01"),ymd("2023-04-30"))) %>% 
  drop_na(FETAL_LOSS_DSDECOD) %>% 
  select(MOMID,FETAL_LOSS_DSDECOD,FETAL_LOSS_DSSTDAT,visit_date,DELIV_DSSTDAT_INF1,CON_DSSTDAT,
         US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,FORMCOMPLDAT_MNH04) %>%
  mutate(Ga_days = US_GA_WKS_AGE_FTS1_Enrol*7 + US_GA_DAYS_AGE_FTS1_Enrol,
         diff_weeks = (as.numeric(FETAL_LOSS_DSSTDAT -CON_DSSTDAT ) + Ga_days)/7)  %>% 
  #filter(FETAL_LOSS_DSDECOD == "Miscarriage/spontaneous abortion") %>% view()
  tabyl(FETAL_LOSS_DSDECOD)


#   ---------------        Total Stillbirth         ----------------
#        **********************************************************
#stillbirth <- fetal_loss[3,2]
#   ---------------        Total Miscarriage         ----------------
#        **********************************************************
#Miscarriage <- fetal_loss[1,2]
#   ---------------        Total Induced abortion         ----------------
#        **********************************************************
`Induced abortion` <- fetal_loss[2,2]

#____________________________________________________________________________________________________________________________________________

 mits_data <- outcomes %>% rename(MOMID = subjid) %>% filter(complete.cases(MOMID)) %>% 
  mutate_if(is.character,~na_if(.,"N/A")) %>% 
  #  filter(between(as.Date(Outcome_Dt),ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(complete.cases(Dth_Champs_id)) 
mits1 <- mits_data %>% nrow
mits2 <- mits_data %>% drop_na(Dth_Champs_id2) %>% nrow
No.MITS <- mits1 + mits2
#                           Fetal loss
#--------------------------===========--------------------------
# Fetalloss <- ALL_PRiSMA %>% drop_na(MOMID) %>%
#   filter(FETAL_LOSS_DSDECOD%in%c("Miscarriage/spontaneous abortion","Induced abortion","Stillbirth")) %>% nrow()

indcedAbrt <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(FETAL_LOSS_DSDECOD%in%c("Induced abortion")) %>% nrow()


# stillbirths

Stillbirth_data <-  ALL_PRiSMA %>% drop_na(MOMID) %>% #filter(between(visit_date,ymd("2024-02-01"),ymd("2024-03-31"))) %>% 
  select(MOMID,Ga_Enrollment,CON_DSSTDAT,INFANTID,TYPE_VISIT,visit_date,Ga_visit_weeks,FETAL_LOSS_DSDECOD,BIRTH_DSTERM_INF1,BIRTH_DSTERM_INF2,DELIV_DSSTDAT_INF1) %>% 
  mutate(FETAL_LOSS_DSDECOD = replace(FETAL_LOSS_DSDECOD, FETAL_LOSS_DSDECOD==77,NA)) %>% 
  mutate(is_ga_wk_20wks = if_else(BIRTH_DSTERM_INF1 == "Fetal death",(as.numeric(DELIV_DSSTDAT_INF1 - CON_DSSTDAT) + Ga_Enrollment)/7,NA)) %>% 
  mutate(stillbirth = if_else(is_ga_wk_20wks>=20,"Yes",as.character(NA)),
         miscarriage = if_else(FETAL_LOSS_DSDECOD == "Miscarriage/spontaneous abortion","Yes",as.character(NA)),
         stillbirth1 = replace(stillbirth,BIRTH_DSTERM_INF1 == "Live birth","No"),
         stillbirth2 = if_else(BIRTH_DSTERM_INF2=="Fetal death","Yes",NA)) %>% group_by(MOMID) %>% 
  fill(stillbirth1,stillbirth2,miscarriage,.direction = "updown") %>% ungroup() %>% 
  mutate(stillbirth1 = replace(stillbirth1,is.na(stillbirth1)&FETAL_LOSS_DSDECOD == "Stillbirth","Yes")) %>% 
  filter(!INFANTID%in%c("KEARC00154_P1_2"))


# stillbirths counts
stills_1 <- Stillbirth_data %>%  filter(TYPE_VISIT == "IPC",stillbirth1 == "Yes") %>%  distinct(MOMID,.keep_all = T) %>% nrow()
stills_2 <-  Stillbirth_data %>%  filter(TYPE_VISIT == "IPC",stillbirth2 == "Yes") %>%  distinct(MOMID,.keep_all = T) %>% nrow()

total_stillbirths <- stills_1 + stills_2
 
# type of still births
stillbirth_type <- Stillbirth_data %>% mutate(stillbirth1=coalesce(stillbirth1,stillbirth2)) %>% filter(stillbirth1 == "Yes") %>% 
  distinct(MOMID,INFANTID,.keep_all = T) %>% drop_na(INFANTID) %>% group_by(MOMID) %>% fill(is_ga_wk_20wks) %>% ungroup() %>% 
  mutate(Type_stillbirth = case_when(is_ga_wk_20wks>=20& is_ga_wk_20wks<28~"Early stillbirth",
                                     is_ga_wk_20wks>=28& is_ga_wk_20wks<37~"Late stillbirth",
                                     is_ga_wk_20wks>=37~"Term stillbirth")) #%>% View()

earlySTlbrth <- stillbirth_type %>% filter(Type_stillbirth == "Early stillbirth") %>% nrow()
lateSTlbrth <- stillbirth_type %>% filter(Type_stillbirth == "Late stillbirth") %>% nrow()
termSTlbrth <- stillbirth_type %>% filter(Type_stillbirth == "Term stillbirth") %>% nrow()

#miscarriages
Miscarriages <- Stillbirth_data %>%  filter(miscarriage == "Yes") %>%  distinct(MOMID,.keep_all = T) %>%
  anti_join( Stillbirth_data %>%  filter(TYPE_VISIT == "IPC",stillbirth1 == "Yes") %>%  distinct(MOMID)) %>% nrow()

# fetal loses
Fetal_loss <- total_stillbirths + Miscarriages



#     --------------- Total Number of Pregnancy outcome Registered  ----------------
#                   ==================================================
IPC = ALL_PRiSMA %>% drop_na(MOMID) %>% 
  # filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(TYPE_VISIT == "IPC") %>% distinct(MOMID) %>% nrow()

# total number of delivery outcomes
IPC2 = ALL_PRiSMA %>% drop_na(MOMID) %>% 
  # filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(TYPE_VISIT == "IPC") %>% nrow()

# cases not captured in IPC


missing_ipc <- Stillbirth_data %>%  filter(miscarriage == "Yes") %>%  distinct(MOMID,.keep_all = T) %>%
  full_join( Stillbirth_data %>%  filter(TYPE_VISIT == "IPC",stillbirth1 == "Yes") %>%  distinct(MOMID)) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>% distinct(MOMID)) %>% nrow()
# total preg. outcomes
Total_preg_outcomes = IPC + missing_ipc


IPC_twins_included = ALL_PRiSMA %>% drop_na(MOMID) %>% 
  # filter(between(visit_date,ymd("2023-06-01"),ymd("2023-06-30"))) %>% 
  filter(TYPE_VISIT == "IPC") %>%  nrow()


#   ---------------        Total Live births         ----------------
#         ========================================================
live_birth <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,INFANTID,BIRTH_DSTERM_INF1,BIRTH_DSTERM_INF2) %>% 
  #filter(between(visit_date,ymd("2023-01-01"),ymd("2023-06-30"))) %>% 
  filter(BIRTH_DSTERM_INF1 == "Live birth") %>% distinct(MOMID,INFANTID) %>% nrow()


preg_outcomes <- live_birth + Fetal_loss
#--------------------------------------------------------------------------------------
# Preterm births
# pretermBrth <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,PTL_MHOCCUR) %>%  filter(PTL_MHOCCUR == "Yes") %>% select(MOMID) %>% full_join(
#   ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,PTB_MHOCCUR) %>%  filter(PTB_MHOCCUR == "Yes") %>% select(MOMID)) %>% nrow()

# preterm delivery
 pretermBrth <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,INFANTID,TYPE_VISIT,INF_VITAL_MNH11,INF_DSTERM,BIRTH_DSTERM_INF1,Ga_outcome_weeks,INFANTID,Ga_visit_weeks) %>% 
  filter(BIRTH_DSTERM_INF1%in%c("Fetal death","Live birth")) %>% 
  mutate(Ga_outcome_weeks = round(Ga_outcome_weeks,1)) %>% filter(Ga_outcome_weeks<37) %>%#View()
  filter(Ga_outcome_weeks>=20 & Ga_outcome_weeks<37) %>% #nrow()
  distinct(MOMID,.keep_all = T) %>% nrow()

# Preterm births
 preterm_births <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,INFANTID,TYPE_VISIT,INF_VITAL_MNH11,INF_DSTERM,BIRTH_DSTERM_INF1,Ga_outcome_weeks,INFANTID,Ga_visit_weeks) %>% 
  filter(BIRTH_DSTERM_INF1%in%c("Live birth")) %>% 
  mutate(Ga_outcome_weeks = round(Ga_outcome_weeks,1)) %>% filter(Ga_outcome_weeks<37) %>% 
 distinct(MOMID,.keep_all = T) %>% nrow()


# Neonatal deaths
infant_closeout <- read_rds(here("Data","MNH24_Infant_close_out.rds"))
neonDeaths <- ALL_PRiSMA %>% drop_na(MOMID) %>% group_by(MOMID) %>% 
  fill(INFANTID,BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15,.direction = "updown") %>% 
  ungroup() %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% 
  select(MOMID,INFANTID,TYPE_VISIT,DELIV_DSSTDAT_INF1,BIRTH_DSTERM_INF1,INF_VITAL_MNH11,INF_VITAL_MNH13,INF_VITAL_MNH14,INF_VITAL_MNH15) %>% 
  mutate(Neonatal_death = if_else(INF_VITAL_MNH11 == "Died"|INF_VITAL_MNH13 == "Died"|INF_VITAL_MNH14== "Died"|INF_VITAL_MNH15== "Died","Yes",NA)) %>% 
  filter(Neonatal_death == "Yes") %>% distinct(MOMID,.keep_all = T) %>% select(MOMID,INFANTID,DELIV_DSSTDAT_INF1) %>% full_join(infant_closeout %>% filter(MOMID%in%c("KEARC01006","KEARC00102")) %>% select(MOMID,INFANTID)) %>% nrow()

#neonDeaths %>% left_join(infant_closeout) %>% View()


# Anemia prevalence
anemia_prev <- ALL_PRiSMA %>% drop_na(MOMID) %>%
  #filter(complete.cases(MOMID)) %>%
  select(MOMID,TYPE_VISIT,HB_POC_LBORRES) %>%
  mutate(HB_POC = factor(case_when(HB_POC_LBORRES >=11~ 1,
                                   HB_POC_LBORRES >=10 & HB_POC_LBORRES <11~ 2,
                                   HB_POC_LBORRES >=7 & HB_POC_LBORRES <10~3,
                                   HB_POC_LBORRES <7~4), levels = c(1,2,3,4),
                         labels = c("Normal","Mild","Moderate","Severe"))) %>%
  mutate(HB_POC_1 = dplyr::recode(HB_POC,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic")) %>% drop_na() %>% 
  tabyl(TYPE_VISIT,HB_POC_1) %>% adorn_totals(where = "col") %>%  #select(TYPE_VISIT,Normal, Anemic) %>% 
  mutate(TYPE_VISIT = as.character(TYPE_VISIT)) %>%
  mutate(TYPE_VISIT=replace(TYPE_VISIT,TYPE_VISIT==" N/A",as.character(NA))) %>%
  drop_na(TYPE_VISIT) %>% filter(!TYPE_VISIT%in%c("N/A","Non-scheduled ANC visit for routine care","Non-scheduled visit",
                                                  "Non-scheduled visit for routine care")) %>%
  mutate(Prevalence = paste0(round((Anemic/Total)*100,1),"%"),
         HB_tool = paste0("POC Hemacue")) %>% 
  mutate(anemprev = paste0(Anemic,"(",Prevalence,")")) %>% select(TYPE_VISIT,anemprev) 

# BIRTHWEIGHT
# BW_FAORRES -- study staff, BW_FAORRES_REPORT--facility weight
BW <- ALL_PRiSMA %>% select(MOMID,INFANTID,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES,TYPE_VISIT,BIRTH_DSTERM_INF1) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% #View()
  mutate(inf_weight = if_else(is.na(BW_FAORRES),BW_FAORRES_REPORT,BW_FAORRES),
         inf_weight = round(inf_weight/1000,2)) %>%  filter(complete.cases(inf_weight))

# Low birth weight
low_bthW <- BW %>% mutate(bw = if_else(inf_weight<2.5,"LBW","NW")) %>% 
  tabyl(bw) %>%
  mutate(perc = round(percent*100,1),
         lbw_prc = paste0(n,"(",perc,"%)")) %>% 
  select(bw,lbw_prc)


# Very low birth weight
VLBW <-  BW %>% mutate(bw = if_else(inf_weight<1.5,"VLBW","NVLbW")) %>% tabyl(bw) %>%
  mutate(perc = round(percent*100,1),
         lbw_prc = paste0(n,"(",perc,"%)")) %>% 
  select(bw,lbw_prc) %>% filter(bw=="VLBW")

# APH
APH <- ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,APH_CEOCCUR) %>% 
  mutate(APH_CEOCCUR = replace(APH_CEOCCUR, APH_CEOCCUR == "Don’t know",NA),
    `antepartum hemorrhage (APH)`= if_else(APH_CEOCCUR=="Yes","Yes",NA)) %>%
  group_by(MOMID) %>% fill(`antepartum hemorrhage (APH)`,.direction = "updown") %>% ungroup() %>% 
  mutate(`antepartum hemorrhage (APH)`= if_else(is.na(`antepartum hemorrhage (APH)`),APH_CEOCCUR,`antepartum hemorrhage (APH)`)) %>% 
  drop_na(`antepartum hemorrhage (APH)`) %>% 
  distinct(MOMID,.keep_all = T) %>% tabyl(`antepartum hemorrhage (APH)`) %>% 
  mutate(percent = round(percent*100,1))

# PPH
PPH <- ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,PPH_CEOCCUR) %>% 
  mutate(PPH_CEOCCUR = replace(PPH_CEOCCUR, PPH_CEOCCUR == "Don’t know",NA),
    `postpartum hemorrhage (PPH)`= if_else(PPH_CEOCCUR=="Yes","Yes",NA)) %>%
  group_by(MOMID) %>% fill(`postpartum hemorrhage (PPH)`,.direction = "updown") %>% ungroup() %>% 
  mutate(`postpartum hemorrhage (PPH)`= if_else(is.na(`postpartum hemorrhage (PPH)`),PPH_CEOCCUR,`postpartum hemorrhage (PPH)`)) %>%
    drop_na(`postpartum hemorrhage (PPH)`) %>% 
  distinct(MOMID,.keep_all = T) %>% tabyl(`postpartum hemorrhage (PPH)`) %>% 
  mutate(percent = round(percent*100,1))


# Obstructed labor
Obs_labour <- ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,OBSTRUCTED_LABOR_CEOCCUR) %>% 
  mutate(OBSTRUCTED_LABOR_CEOCCUR = replace(OBSTRUCTED_LABOR_CEOCCUR, OBSTRUCTED_LABOR_CEOCCUR == "Don’t know",NA),
    `Obstructed labor`= if_else(OBSTRUCTED_LABOR_CEOCCUR=="Yes","Yes",NA)) %>% 
  group_by(MOMID) %>% fill(`Obstructed labor`,.direction = "updown") %>% ungroup() %>% 
  mutate(`Obstructed labor`= if_else(is.na(`Obstructed labor`),OBSTRUCTED_LABOR_CEOCCUR,`Obstructed labor`)) %>% 
    drop_na(`Obstructed labor`) %>% 
  distinct(MOMID,.keep_all = T) %>% tabyl(`Obstructed labor`) %>% 
  mutate(percent = round(percent*100,1))

# Fetal distress
Fetal_distress <- ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,FETAL_DISTRESS_CEOCCUR) %>% 
  mutate(FETAL_DISTRESS_CEOCCUR = replace(FETAL_DISTRESS_CEOCCUR, FETAL_DISTRESS_CEOCCUR == "Don’t know",NA),
    `Fetal distress`= if_else(FETAL_DISTRESS_CEOCCUR=="Yes","Yes",NA)) %>% 
  group_by(MOMID) %>% fill(`Fetal distress`,.direction = "updown") %>% ungroup() %>% 
  mutate(`Fetal distress`= if_else(is.na(`Fetal distress`),FETAL_DISTRESS_CEOCCUR,`Fetal distress`)) %>% 
  group_by(MOMID) %>% fill(`Fetal distress`,.direction = "updown") %>% ungroup() %>% 
    drop_na(`Fetal distress`) %>% 
  distinct(MOMID,.keep_all = T) %>% tabyl(`Fetal distress`) %>% 
  mutate(percent = round(percent*100,1))
# 
# 
# #   ---------------   **    Ready Pregnancy Surveillance Tracking table  **     ----------------
# #                  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
# tribble(~ "Indicator",                                          ~ "Count ",     ~"Indicator ",                               ~"Count",
#         "PS approached",                                    as.character(PS.approach),      "Number of MITS referrals from PS",           as.character(No.MITS),
#         "PS Eligible",                                  as.character(PS.eligible),       "PNC-0 forms completed",              as.character(Day.1),
#         "PS Consented",                                   as.character(PS.consented),      "PNC-6 forms completed",              as.character(Day.2),
#         "Number of Ultrasound \n Provided",                   as.character(No.ultrasound),     "Number of women with pregnancy outcomes",  as.character(IPC),
#         "Number of ultrasound with \n GA less than 20wks",    as.character(ultrsnd_ga.20),     "Number of live births",                     as.character(live_birth),
#         "Number of abnormalities \n detected & referred",     as.character(fetl.abnom),         "Fetal losss (stillbirths & Miscarriages)",    as.character(Fetal_loss),
#         "Number of women with complication detected & referred", as.character(complication),          "Total stillbirths",               as.character(total_stillbirths),
#         "Maternal Anemia (at each visit)",                         "n(%)",                   "a). Early Stillbirths (20 - <28 weeks)" ,   as.character(earlySTlbrth),      
#         "1). Enrollment",                                      anemia_prev[1,2],             "b). Late stillbirths (28 - <37 weeks",      as.character(lateSTlbrth),  
#         "2). ANC-20",                                          anemia_prev[2,2],              "c). Term stillbirths (>=37 weeks)",         as.character(termSTlbrth),
#         "3). ANC-28",                                          anemia_prev[3,2],              "Miscarriage/Spontaneous abortion",       as.character(Miscarriages),  
#         "4). ANC-32",                                           anemia_prev[4,2],            "Induced Abortion",                     as.character(indcedAbrt),       
#         "5). ANC-36",                                           anemia_prev[5,2],            "Preterm births",                         as.character(pretermBrth),
#         "6). IPC",                                              anemia_prev[6,2],            "Neonatal deaths",                          as.character(neonDeaths),
#         "7). PNC-0",                                            anemia_prev[7,2],              "Birth Weight",                               "n(%)",
#         "8). PNC-1",                                           anemia_prev[8,2],                "a). Low birth weight (<2500g)",                 as.character(low_bthW[1,2]),
#         "9). PNC-4",                                            anemia_prev[9,2],               "b). Normal Weight (>=2500g)",            as.character(low_bthW[2,2]),
#         "10). PNC-6",                                            anemia_prev[10,2],             "",                                            "",
#         "11). PNC-26",                                          anemia_prev[11,2],              "",                                            "",
#         "12). PNC-52",                                           anemia_prev[12,2],              "",                                           "") %>% 
#   
#   
#   gt() %>% opt_table_lines() %>% opt_table_outline(color = "black") %>% 
#   opt_vertical_padding(scale = 0.6) %>% 
#   tab_header(title = md("**PREGNANCY SURVEILLANCE TRACKING TABLE 2023/2024**")) %>% 
#   opt_vertical_padding(scale = 0.5) %>% 
#   tab_style(style = cell_fill(color = c("#FFE4E1")),
#             locations = cells_column_labels()) %>% 
#   tab_style(style = cell_fill(color = c("white")),
#             locations = cells_body()) %>%  # , 
#   tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
#             locations = list(cells_body(),cells_column_labels())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
#             locations = list(cells_body(),cells_footnotes())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
#             locations = list(cells_column_labels())) %>% 
#   tab_style(style = cell_text(color = "black",weight = 500,align  = "left",font = "News Time Roman"),
#             locations = list(cells_body(columns = c("Indicator","Indicator ")))) %>% 
#   tab_style(style = cell_text(color = "black",weight = "bolder",align  = "center"),
#             locations = list(cells_column_labels())) %>% 
#   tab_style(style = cell_text(weight = "bold"),
#             locations = cells_body(
#               rows = 8,
#               column =c(1,2)
#             )) %>% 
#     tab_style(style = cell_text(weight = "bold"),
#             locations = cells_body(
#               rows = 15,
#               column =c(3,4)
#             ))

```

```{r}
### Pregnancy outcomes table

# tribble( ~"Indicator",                               ~"Count",
#     "Number of Pregnancy\n outcomes Registered",  as.character(IPC),
#      "Number of live births",                     as.character(live_birth),
#          "Fetal losss (stillbirths & Miscarriages)",  as.character(Fetal_loss),
#           "Total stillbirths",               as.character(total_stillbirths),
#                  "a). Early Stillbirths (20 - <28 weeks)" ,   as.character(earlySTlbrth),      
#             "b). Late stillbirths (28 - <37 weeks",      as.character(lateSTlbrth),  
#               "c). Term stillbirths (>=37 weeks)",         as.character(termSTlbrth),
#               "Miscarriage/Spontaneous abortion",       as.character(Miscarriages),  
#            "Induced Abortion",                     as.character(indcedAbrt),       
#            "Preterm births",                         as.character(pretermBrth),
#            "Neonatal deaths",                          as.character(neonDeaths),
#              "Birth Weight",                               "n(%)",
#               "a). Low birth weight (<2500g)",                 as.character(low_bthW[1,2]),
#               "b). Normal Weight (>=2500g)",            as.character(low_bthW[2,2])) %>% 
#     gt() %>% opt_table_lines() %>% opt_table_outline(color = "black") %>% 
#   opt_vertical_padding(scale = 0.6) %>% 
#   tab_header(title = md("**PREGNANCY OUTCOMES TABLE**")) %>% 
#   opt_vertical_padding(scale = 0.5) %>% 
#   tab_style(style = cell_fill(color = c("#FFE4E1")),
#             locations = cells_column_labels()) %>% 
#   tab_style(style = cell_fill(color = c("white")),
#             locations = cells_body()) %>%  # , 
#   tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
#             locations = list(cells_body(),cells_column_labels())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
#             locations = list(cells_body(),cells_footnotes())) %>% 
#   tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
#             locations = list(cells_column_labels()))%>% 
#   tab_style(style = cell_text(color = "black",weight = "bolder",align  = "left"),
#             locations = list(cells_column_labels())) %>% 
#     tab_style(style = cell_text(weight = "bold"),
#             locations = cells_body(
#               rows = 12,
#               column =c(1,2)
#             ))
```

# Study Pregnancy Outcomes

```{r}
### Pregnancy Surveillance Tracking Table
pre_scrn_prisma <- ALL_PRiSMA %>% drop_na(SCRNID) %>% distinct(SCRNID) %>% nrow()
scrnd_prisma <- ALL_PRiSMA %>%  filter(complete.cases(US_OHOSTDAT)) %>% distinct(SCRNID) %>% nrow()
enrollmennts_prisma <- ALL_PRiSMA %>% drop_na(MOMID) %>% distinct(MOMID) %>% nrow()

Ga_less14 <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks<14) %>% nrow()

Ga_less14_prop <- round(Ga_less14/enrollmennts_prisma*100,1)

Ga_above14 <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT=="Enrollment") %>%
  select(MOMID,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1) %>%
  mutate(Ga_weeks = US_GA_WKS_AGE_FTS1 +
           (US_GA_DAYS_AGE_FTS1/7)) %>% filter(Ga_weeks>=14) %>% nrow()
Ga_above14_prop <- round(Ga_above14/enrollmennts_prisma*100,1)
mits_eligible <- lateSTlbrth + termSTlbrth+ neonDeaths
#No_preg_outcomes <- 
anc_reten <- c(round(mean(overall_AncRetention$prop),1))
pnc_reten <- round(mean(overall_PncRetention$percent),1)



table1 <- tribble( ~"Indicator",                               ~"Count",
         "Pre-screened",                            as.character(pre_scrn_prisma),
         "Screened",                                as.character(paste0(scrnd_prisma,"(",(round(scrnd_prisma/pre_scrn_prisma*100,1)),"%)")),
         "Enrollments",                             as.character(paste0(enrollmennts_prisma,"(",(round(enrollmennts_prisma/scrnd_prisma*100,1)),"%)")),
         "a). Trimester I",                             as.character(paste0(Ga_less14," (",Ga_less14_prop,"%)")),
         "b). Trimester II",                            as.character(paste0(Ga_above14," (",Ga_above14_prop,"%)")),
         "Ultrasound",                             as.character(""),
         "a). Number of Ultrasounds \n Provided",                   as.character(No.ultrasound),
         "b). Number of Ultrasounds with \n GA less than 20wks",    as.character(ultrsnd_ga.20),
         "c). Number of abnormalities \n detected & referred",     as.character(fetl.abnom),
         "Retention (On-Time windows)",                                as.character(""),
         "a). Overall ANC retention",                   as.character(paste0(anc_reten,"%")),
         "b). Overall PNC retention",                    as.character(paste0(pnc_reten,"%")),
          "Number of pregnancy outcomes",             as.character(preg_outcomes),
    #"Number of women with pregnancy outcomes",  as.character(IPC),
    "Number of women with complication detected & referred", as.character(complication),
     "Number of live births",                     as.character(live_birth),
         "Fetal losss (stillbirths & Miscarriages)",  as.character(Fetal_loss),
          "1. Total stillbirths",               as.character(total_stillbirths),
                 "a). Early Stillbirths (20 - <28 weeks)" ,   as.character(earlySTlbrth),      
            "b). Late stillbirths (28 - <37 weeks",      as.character(lateSTlbrth),  
              "c). Term stillbirths (>=37 weeks)",         as.character(termSTlbrth),
              "2. Miscarriage/Spontaneous abortion",       as.character(Miscarriages),  
           "Induced Abortion",                     as.character(indcedAbrt),       
           "Preterm delivery",                         as.character(pretermBrth),
           "Neonatal/infant deaths",                          as.character(neonDeaths),
           "Champs Eligibility",                          as.character(mits_eligible),
          "MITS performed",                              as.character(No.MITS)
             # "Birth Weight",                               "n(%)",
             #  "a). Low birth weight (<2500g)",                 as.character(low_bthW[1,2]),
             #  "b). Normal Weight (>=2500g)",            as.character(low_bthW[2,2])
    ) #%>% View()
```

::: panel-tabset
### Pregnancy outcomes table

```{r}
#| label: tbs-pregoutcomes
#| tbs-cap: "Pregnancy Outcomes Table"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 6
#| fig-height: 5

table1 %>% tail(n=14) %>% mutate(Count = as.numeric(Count),
                                 prop = as.numeric(round(Count/preg_outcomes *100,1)),
                                 prop = replace(prop,Indicator== "Number of pregnancy outcomes",NA),
                                 prop = if_else(Indicator== "Preterm births", round((Count/(live_birth + total_stillbirths))*100,1),prop),
                                 prop = if_else(Indicator== "Neonatal deaths", round((Count/(live_birth))*100,1),prop),
                                 prop = replace(prop,Indicator== "Champs Eligibility",NA),
                                 prop = if_else(Indicator== "MITS performed", round((Count/(mits_eligible))*100,1),prop),
                                prop = str_c(prop,"%")
                                  ) %>% rename(`Percent (%)` = prop, 
                                               `Count (n)` = Count) %>% filter(Indicator!="Number of women with complication detected & referred") %>% 
   gt() %>% opt_table_lines() %>% opt_table_outline(color = "black") %>% 
  opt_vertical_padding(scale = 0.6) %>% 
  sub_missing(missing_text = "") %>% 
  tab_header(title = md("**PRISMA Pregnancy Outcome Table 2023/2024**")) %>% 
  opt_vertical_padding(scale = 0.5) %>% 
  tab_style(style = cell_fill(color = c("#FFE4E1")),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_fill(color = c("white")),
            locations = cells_body()) %>%  # , 
  tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
            locations = list(cells_body(),cells_column_labels())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
            locations = list(cells_body(),cells_footnotes())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
            locations = list(cells_column_labels()))%>% 
  tab_style(style = cell_text(color = "black",weight = "bolder",align  = "left"),
            locations = list(cells_column_labels())) %>% 

        tab_style(style = cell_text(style = "italic"),
            locations = cells_body(
              rows = c(4,13),
              column =c(1,2,3)
            )) %>% 
        tab_style(style = cell_text(style = "italic"),
            locations = cells_body(
              rows = c(6,7,8,13),
              column =c(1,2,3)
            )) 
```

### Enrolment,UltraSound & Retention

```{r}
#| label: tbs-ENrlUSRe
#| tbs-cap: "Enrolment, Ultrasound & Retention"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 6
#| fig-height: 5
# Table 1 Enrolment and retention
table1 %>% head(n=12) %>% rename(Metric = Count) %>% 
    
  gt() %>% opt_table_lines() %>% opt_table_outline(color = "black") %>% 
  opt_vertical_padding(scale = 0.6) %>% 
  tab_options(table.width = pct(58)) %>% 
  tab_header(title = md("**Pre-screening, Enrolment & Retention, 2023/2024**")) %>% 
  tab_style(style = cell_fill(color = c("#FFE4E1")),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_fill(color = c("white")),
            locations = cells_body()) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(1.5),sides = c("left","right")),
            locations = list(cells_body(),cells_column_labels())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(1.05),sides = c("top","bottom")),
            locations = list(cells_body(),cells_footnotes())) %>% 
  tab_style(style = cell_borders(color = "black",weight = px(3),sides = c("top","bottom")),
            locations = list(cells_column_labels()))%>% 
  tab_style(style = cell_text(color = "black",weight = "bolder",align  = "left"),
            locations = list(cells_column_labels())) %>% 

        tab_style(style = cell_text(weight = "bold"),
            locations = cells_body(
              rows = c(3,6,10),
              column =c(1,2)
            )) %>% 
        tab_style(style = cell_text(style = "italic"),
            locations = cells_body(
              rows = c(4,5,8,7,10,11),
              column =c(1,2)
            )) 
```
:::

# Infant vitals / measurements

## Birthweight

### Completeness / Distribution of PRISMA and Facility based birthweight measurement

```{r}
#| label: tab-facbwmeasure
#| tab-cap: "Distribution of PRISMA and Facility based birthweight measurement"
#| warning: false
#| column: body-outset-right
#| fig-width: 12
#| fig-height: 6
#| echo: false


infant_dta <- Locked_PRISMA %>% drop_na(MOMID) %>% filter(visit_date<=ymd("2024-04-05")) %>% 
  select(MOMID,INFANTID,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,Ga_outcome_weeks, INF_DSTERM,BIRTH_DSTERM_INF1,US_Ga_days_enrol,LMP_Ga_days_enrol,
         pregnancy_outcomes,`Low BirthWeight (<2.5Kg)`,US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,GA_LMP_WEEKS_SCORRES,GA_LMP_DAYS_SCORRES,
         `VLBW (<1.5Kg)`,preterm_birth,neonatal_dth,pnc_days,Fetal_death,BIRTH_COMPL_MHTERM_3,TCB_UMOLL_LBORRES,BIRTH_DSTERM_INF2,inf_weight,
         JAUND_CEOCCUR,BW_EST_FAORRES,BIRTH_DSTERM_INF1,BW_FAORRES_REPORT,BW_FAORRES,inf_weight,inf_weight_cat,`Prisma measured birthweight`,
         `Facility measured birthweight`,preterm_delivery_levels,preterm_birth_levels,Type_stillbirth,SGA_Percentile,SGA_categories,birth_asphyxia,
         breath_failure,uterine_rature,repeated_stimulation,intub_ventilation,Chest_compres,Scrn_facility,Bag_mask,cont_airwave)

Locked_PRISMA %>% drop_na(pregnancy_outcomes) %>% 
  mutate_at(vars(SCRN_FAC_SPFY_OBSLOC),~replace(.x,.x=="Kisumu County Hospital", "KCRH")) %>% 
    mutate_at(vars(SCRN_FAC_SPFY_OBSLOC),~replace(.x,.x=="Kuoyo Health Center", "KUOYO")) %>% 
    mutate_at(vars(SCRN_FAC_SPFY_OBSLOC),~replace(.x,.x=="Lumumba Sub County Hospital", "LUMUMBA")) %>% 
    mutate_at(vars(SCRN_FAC_SPFY_OBSLOC),~replace(.x,.x=="Siaya County Referral Hospital", "SIAYA")) %>% 
    mutate_at(vars(SCRN_FAC_SPFY_OBSLOC),~replace(.x,.x=="Tingwangi Health Centre", "Tingwangi")) %>% 
  
  mutate(bw_completeness = case_when(BIRTH_DSTERM_INF1 == "Live birth" & is.na(inf_weight)~"Missing PRISMA & facility birthweight",
                                     BIRTH_DSTERM_INF1 == "Live birth" & is.na(BW_FAORRES)~"Missing PRISMA birthweight",
                                     BIRTH_DSTERM_INF1 == "Live birth" & is.na(BW_FAORRES_REPORT)~"Missing facility birthweight"),
         Missing_hrs_birthwght = case_when(BIRTH_DSTERM_INF1 == "Live birth" & is.na(BW_EST_FAORRES)~"Yes",
                                           BIRTH_DSTERM_INF1 == "Live birth" & !is.na(BW_EST_FAORRES)~"No")) %>% 
  
  tbl_summary(by = SCRN_FAC_SPFY_OBSLOC,include = c(bw_completeness,Missing_hrs_birthwght,inf_weight_cat,`Prisma measured birthweight`,
                                                    `Facility measured birthweight`),missing = "no",
              digits = everything()~c(0,1), label =list(Missing_hrs_birthwght ~"Missing hrs since birthweight measured",
                                                        bw_completeness~"birthweight completeness",
                                                        inf_weight_cat~"Any method measured Birthweight")) %>% 
  add_overall() %>% italicize_levels() %>% bold_labels() %>% as_gt() %>% opt_row_striping() %>% opt_vertical_padding(scale = .5) %>% 
  opt_table_outline()
```

### Histogram of Birthweight maesurements

```{r}
#| label: fig-distrbw
#| fig-cap: "Histogram of Birthweight maesurements"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5

# PRISMA measured birth weight
 bw_median = median((Locked_PRISMA %>% drop_na(BW_FAORRES) %>% filter(BIRTH_DSTERM_INF1 == "Live birth"))$BW_FAORRES,na.rm = T)
LBW_hist = Locked_PRISMA %>% drop_na(`Low BirthWeight (<2.5Kg)`) %>% tabyl(`Low BirthWeight (<2.5Kg)`) %>% adorn_pct_formatting()
vlbw_hist = Locked_PRISMA %>% drop_na(`Low BirthWeight (<2.5Kg)`) %>% tabyl(`VLBW (<1.5Kg)`) %>% adorn_pct_formatting()

Locked_PRISMA %>% drop_na(BW_FAORRES) %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% 
  gghistostats(x = BW_FAORRES,normal.curve = T, type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Birthweight, g",
               #ylab.left = "Frequencies",
               # title = "Distribution of Maternal Ages at Enrollment",
               results.subtitle = F,
               bar.fill="grey50")+
  geom_vline(xintercept = c(1500,2500),color= c("#8B0000"),linewidth = .9,linetype = "dashed")+
  annotate("text",x =1200,y=62.5,label = "Birthweight <1500g",size = 3.8,color ="darkblue")+
  annotate("text",x =2200,y=82.5,label = "Birthweight <2500g",size = 3.8,color ="darkblue")+
  annotate("text",x =bw_median + 200,y=100,label = paste0("Median = ",bw_median, " g "),size = 3.8,color ="#8B0000")+
  annotate("text",x =4100,y=62.1,label = "BIRTHWEIGHT (%)",size = 4.8,color ="#8B0000")+
  annotate("text",x =3700,y=57.5,label = paste0("LBW (<2.5Kg) = ",LBW_hist$percent[2]),size = 3.8,color ="darkblue",hjust =0)+
  annotate("text",x =3700,y=52.5,label = paste0("VLBW (<1.5Kg) = ",vlbw_hist$percent[2]),size = 3.8,color ="darkblue",hjust =0)+
  theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 14),
        panel.background = element_rect(colour = "black"),
        axis.text = element_text(colour = "black",size = 12),
        axis.title.y.right  = element_text(colour = "black",size = 18)) +
  scale_x_continuous(breaks = seq(0,10000,200)) +
   scale_y_continuous(breaks = seq(0,100,10))
```

### Distribution of hours of Birthweight measurements

Hours following birth weight measurement. Report of “0” indicates the measurement was taken \<1hr following birth. Dashed lines represent 24, 48, and 72 hour time points.

```{r}
#| label: tab-hrsbw
#| fig-cap: "Distribution of hours of Birth weight"
#| warning: false
#| echo: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5
# Hours following birth weight measurements

timeHist = median((Locked_PRISMA %>% drop_na(BW_EST_FAORRES) %>% filter(BIRTH_DSTERM_INF1 == "Live birth"))$BW_EST_FAORRES,na.rm = T)
  
Locked_PRISMA %>% drop_na(BW_EST_FAORRES) %>% filter(BIRTH_DSTERM_INF1 == "Live birth") %>% 
  gghistostats(x = BW_EST_FAORRES,normal.curve = T, type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Hours",
               #ylab.left = "Frequencies",
               # title = "Distribution of Maternal Ages at Enrollment",
               results.subtitle = F,
               bar.fill="grey50")+
  geom_vline(xintercept = c(24,48,72),color= c("#8B0000"),linewidth = .9,linetype = "dashed")+
   annotate("text",x =timeHist + 4,y=145,label = paste0("Median = ",timeHist, " Hrs "),size = 3.9,color ="darkblue")+
  theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 14),
        panel.background = element_rect(colour = "black"),
        axis.text = element_text(colour = "black",size = 12),
        axis.title.y.right  = element_text(colour = "black",size = 18)) +
  scale_x_continuous(breaks = seq(0,200,8)) +
   scale_y_continuous(breaks = seq(0,150,20)) 

```

## Apgar scores, respiratory rate, temperature

### Completeness / distribution of Apgar scores, respiratory rate and temperature

```{r}
#| label: tab-apgar
#| fig-cap: "Apgar scores, respiratory rate, temperature (Completeness & distribution)"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 6
#| echo: false

infant_vitals <- Locked_PRISMA %>% drop_na(MOMID) %>% 
  select(MOMID,Scrn_facility,INFANTID,pregnancy_outcomes,contains("apgar"),BREATH_VSORRES_1,BREATH_VSORRES_2,TEMP_VSORRES,TEMP_VSORRES_2,) 

infant_vitals %>% filter(pregnancy_outcomes =="Live birth") %>% distinct(INFANTID,.keep_all = T) %>% 
  mutate(`Missing APGAR SCore: 5M reading` = if_else(is.na(APGAR_5M_PERES),"Yes","No"),
         `Missing APGAR SCore: 1Min reading` = if_else(is.na(APGAR_1MIN_PERES),"Yes","No"),
         `Missing both 1 & 5 min APGAR SCore reading` =if_else(is.na(APGAR_1MIN_PERES)&is.na(APGAR_5M_PERES),"Yes","No"),
         `Missing respiratory rate: Breath/min` = if_else(is.na(BREATH_VSORRES_1),"Yes","No"),
         `Missing temperature reading` = if_else(is.na(TEMP_VSORRES),"Yes","No")) %>% 
  select(Scrn_facility,`Missing APGAR SCore: 1Min reading`,`Missing APGAR SCore: 5M reading`,`Missing both 1 & 5 min APGAR SCore reading`,
         `Missing respiratory rate: Breath/min`,`Missing temperature reading`) %>% droplevels() %>% 
  tbl_summary(by = "Scrn_facility") %>% add_overall() %>% as_gt() %>% opt_vertical_padding(scale = .5) %>% 
  opt_table_outline()
```

## Infant weight, Head Circumference, Infant MUAC, Infant Length

### Completeness / distribution of weight, Head Circumference, MUAC and Length

```{r}
#| label: tab-headcirc
#| fig-cap: "Infant weight, Head Circumference, Infant MUAC, Infant Length"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 6
#| echo: false
Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT%in%c("IPC","PNC-0","PNC-1","PNC-4","PNC-6","PNC-26","PNC-52")) %>% 
 # select(MOMID,INFANTID,TYPE_VISIT,Scrn_facility,INFANTID,pregnancy_outcomes,MUAC_PERES_1_infant,MUAC_PERES_2_infant,MUAC_PERES_3_infant) %>% View()
  group_by(MOMID) %>% fill(pregnancy_outcomes,neonatal_dth,.direction = "updown") %>% ungroup() %>% 
  filter(pregnancy_outcomes =="Live birth",neonatal_dth=="No") %>% 
  select(MOMID,INFANTID,TYPE_VISIT,Scrn_facility,INFANTID,pregnancy_outcomes,neonatal_dth,`Delivery method`,weight_infant_ipc_pnc52,
         HC_1_inf_combined,HC_2_inf_combined,HC_3_inf_combined,HC_FAORRES_1,HC_PERES_1,HC_FAORRES_1,
         length_1_inf_combined,LENGTH_PERES_1,LENGTH_FAORRES_1,MUAC_PERES_1_infant) %>% 
  mutate(`Missing delivery method` = if_else(is.na(`Delivery method`),"Yes","No"),
         `missing weight` = if_else(is.na(weight_infant_ipc_pnc52),"Yes","No"),
         `missing 1st Head circumference` = if_else(is.na(HC_1_inf_combined),"Yes","No") %>% replace(.,TYPE_VISIT=="PNC-0",NA),
         `missing 2nd Head circumference` = if_else(is.na(HC_2_inf_combined),"Yes","No")%>% replace(.,TYPE_VISIT=="PNC-0",NA),
         `missing 3rd Head circumference` = if_else(is.na(HC_3_inf_combined),"Yes","No")%>% replace(.,TYPE_VISIT=="PNC-0",NA),
         `Missing Length` = if_else(is.na(length_1_inf_combined),"Yes","No")%>% replace(.,TYPE_VISIT%in%c("PNC-0","PNC-1"),NA),
         `Missing MUAC` = if_else(is.na(MUAC_PERES_1_infant),"Yes","No")%>% replace(.,TYPE_VISIT%in%c("PNC-0","IPC"),NA)) %>% 
  droplevels() %>% 
  tbl_summary(by = Scrn_facility,include = c(Scrn_facility, `missing weight`, `missing 1st Head circumference`, 
                                             `missing 2nd Head circumference`,`missing 3rd Head circumference`,
                                             `Missing Length`,`Missing MUAC`),
              missing = "no") %>% add_overall() %>% as_gt() %>% opt_vertical_padding(scale = .5) %>% opt_table_outline()
```

## Perinatal birth asphyxia

```{r}
#| label: tab-birthaxphys
#| fig-cap: "indicators of birth axphysia"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 6
#| echo: false


infant_dta %>% select(MOMID,Scrn_facility,SGA_categories,birth_asphyxia,breath_failure,pregnancy_outcomes,Bag_mask,cont_airwave,
                      uterine_rature,repeated_stimulation,intub_ventilation,Chest_compres,birth_asphyxia) %>% 
  droplevels() %>% filter(pregnancy_outcomes=="Live birth") %>% 
   tbl_summary(by = Scrn_facility,include = c(Scrn_facility,breath_failure,repeated_stimulation,
                                              Bag_mask,cont_airwave,Chest_compres,birth_asphyxia),missing = "no",
              digits = everything()~c(0,1), label =list(breath_failure ~"Failure to initiate and sustain breathing",
                                                        #uterine_rature~"Uterine rupture diagnosed",
                                                        repeated_stimulation~"Repeated stimulation/suction",
                                                        Bag_mask~"Bag and mask ventilation",
                                                        cont_airwave~"Continuous positive airway pressure",
                                                        #intub_ventilation ~ "Intubation and mechanical ventilation",
                                                        Chest_compres ~ "chest compressions",
                                                        birth_asphyxia~ "Birth asphyxia"),
              statistic = all_categorical() ~ "{n} ({p})") %>% #as_tibble() %>% names()
  add_overall() %>% italicize_levels() %>% modify_header(label~"**Indicators of Birth axphysia**") %>% 
  as_gt() %>%
  tab_style(
    style = list(cell_borders(sides = c("top", "bottom"),color="gray" ),cell_fill(color ="#FFEFDB")),
    locations = cells_body(columns = everything(), rows = 1:5)) %>% 
    tab_style(
    style = list(cell_borders(sides = c("top", "bottom") ),cell_fill(color = c("#E0FFFF"))),
    locations = cells_body(columns = everything(), rows = 6)) %>% 
  tab_footnote(footnote = "Denominator is total live births.") %>% 
    tab_footnote(footnote = "Asphyxia: defined as required any breathing assistance at birth.") %>% 
  opt_table_outline(style = "solid")

```

## Small for Gestation (SGA)

### Distribution of INTERGROWTH percentiles

```{r}
#| label: fig-sga
#| fig-cap: "Distribution of INTERGROWTH percentiles."
#| warning: false
#| echo: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5
infant_dta %>% drop_na(SGA_Percentile) %>% #select(MOMID,INFANTID,SGA_Percentile) %>% View()
     gghistostats(x = SGA_Percentile,normal.curve = T, centrality.plotting =F,# type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Intergrowth Percentile",
               bin.args = list(color = "black", fill = "green", alpha = 0.2),
               results.subtitle = F) +
   scale_x_continuous(breaks = seq(0,200,10)) +
   scale_y_continuous(breaks = seq(0,200,10)) +
  scale_fill_binned(type = "gradient") +
  theme_bw() + 
   theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 14),
        axis.title.y = element_text(colour = "black",size = 14),
        axis.title.y.right = element_blank(),
        axis.text.y.right = element_blank(),
        axis.ticks.y.right = element_blank(),
        panel.background = element_rect(colour = "black"),
        axis.text = element_text(colour = "black",size = 12))

```

### SGA categories

```{r}
#| label: fig-sgacat
#| fig-cap: "Distribution of INTERGROWTH percentiles."
#| warning: false
#| echo: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5
infant_dta %>% select(MOMID,Scrn_facility,SGA_Percentile,SGA_categories,birth_asphyxia,breath_failure,pregnancy_outcomes,Bag_mask,cont_airwave,inf_weight,
                      uterine_rature,repeated_stimulation,intub_ventilation,Chest_compres,birth_asphyxia) %>% drop_na(SGA_Percentile) %>% 
  ggplot(aes(x=SGA_categories, y=SGA_Percentile,color = SGA_categories)) +
   geom_boxplot(notch = T,) +
  labs(x = "SGA categories", y = "SGA percentile") +
  theme_clean() + 
   theme(
    axis.text.x = element_text(size = 12,color = "black"),
    axis.text.y = element_text(size = 12,color = "black", face = "italic"),
    axis.title = element_text(size = 14,color = "black", face = "italic"),
    legend.position = "none",
    panel.background  = element_rect(color="black"))
 
```

# Exploratory Data Analysis

## Differences in GA by US and GA by LMP

Distribution of days difference between GA by US and GA by LMP at Enrolment. Absolute values have been plotted in the case of negatives

```{r}
#| label: fig-galmpBirth
#| fig-cap: "Distribution of days difference between GA by US and GA by LMP at Enrolment."
#| warning: false
#| echo: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5
us_difMed <- median((Locked_PRISMA %>% mutate(ga_diff = abs(US_Ga_days_enrol - LMP_Ga_days_enrol)) %>% filter(TYPE_VISIT=="Enrollment"))$ga_diff,na.rm = T)

Locked_PRISMA %>% mutate(ga_diff = abs(US_Ga_days_enrol - LMP_Ga_days_enrol)) %>% filter(TYPE_VISIT=="Enrollment") %>% 
   gghistostats(x = ga_diff,normal.curve = T, type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Days difference",
               #ylab.left = "Frequencies",
               # title = "Distribution of Maternal Ages at Enrollment",
               results.subtitle = F,
               bar.fill="grey50")+
   annotate("text",x =us_difMed + 6,y=325,label = paste0("Median = ",us_difMed, " days "),size = 4,color ="darkblue")+
  theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 14),
        panel.background = element_rect(colour = "black"),
        axis.text = element_text(colour = "black",size = 12),
        axis.title.y.right  = element_text(colour = "black",size = 18)) +
  scale_x_continuous(breaks = seq(0,200,10)) +
   scale_y_continuous(breaks = seq(0,400,50)) 

```

## Distribution of gestational age at birth in weeks.

```{r}
#| label: fig-gaBirth
#| fig-cap: "Distribution of gestational age at birth in weeks."
#| warning: false
#| echo: false
#| column: body-outset-right
#| fig-width: 11
#| fig-height: 5
ga_out_Med <- median((Locked_PRISMA %>% filter(TYPE_VISIT=="IPC") %>% distinct(MOMID,.keep_all = T))$Ga_outcome_weeks,na.rm = T) 
preterm_hist <- Locked_PRISMA %>% tabyl(preterm_delivery_levels) %>% adorn_pct_formatting()

Locked_PRISMA %>% filter(TYPE_VISIT=="IPC") %>% distinct(MOMID,.keep_all = T) %>% 
   gghistostats(x = Ga_outcome_weeks,normal.curve = T, type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Gestational Age at Birth (Weeks)",
               #ylab.left = "Frequencies",
               # title = "Distribution of Maternal Ages at Enrollment",
               results.subtitle = F,
               bar.fill="grey50")+
  geom_vline(xintercept = c(37,41),color= c("#8B0000"),linewidth = .9,linetype = "dashed")+
   annotate("text",x =ga_out_Med +.5 ,y=225,label = paste0("Median = ",ga_out_Med, " weeks "),size = 3.9,color ="darkblue")+
     geom_segment(aes(x=41.5,y=220,xend=ga_out_Med,yend =220),arrow=arrow(length = unit(.2, "cm")),size=1)+
   annotate("text",x =35,y=155,label = "Preterm birth (<37 weeks)",size = 3.9,color ="darkblue")+
  geom_segment(aes(x=33,y=150,xend=37,yend =150),arrow=arrow(length = unit(.2, "cm")),size=1)+
     annotate("text",x =43,y=110,label = "Post term (>=41 weeks)",size = 3.9,color ="darkblue")+
     geom_segment(aes(x=44.5,y=105,xend=41,yend =105),arrow=arrow(length = unit(.2, "cm")),size=1)+
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 14),
        panel.background = element_rect(colour = "black"),
        axis.text = element_text(colour = "black",size = 12),
        axis.title.y.right  = element_text(colour = "black",size = 18)) + 
  scale_x_continuous(breaks = seq(0,200,2)) +
   scale_y_continuous(breaks = seq(0,400,30)) #+
  #  annotate("text",x =21 +1.5 ,y=185,label = "PRETERM BIRTHS",size = 3.8,color ="#8B0000", hjust =0) +
  # annotate("text",x =21 +1.5 ,y=178,label = paste0("Extremely preterm (<28 weeks) = ",preterm_hist$n[1],"(",preterm_hist$valid_percent[1],")"),size = 4.0,color ="darkblue",hjust =0) +
  # annotate("text",x =21 +1.5 ,y=170,label = paste0("Very preterm (28 to <32 weeks) = ",preterm_hist$n[2],"(",preterm_hist$valid_percent[2],")"),size = 4.0,color ="darkblue",hjust =0) +
  # annotate("text",x =21 +1.5 ,y=162,label = paste0("Moderate preterm (32 to <34 weeks) = ",preterm_hist$n[3],"(",preterm_hist$valid_percent[3],")"),size = 4.0,color ="darkblue",hjust =0) +
  # annotate("text",x =21 +1.5 ,y=154,label = paste0("Late preterm(34 to <37 weeks) = ",preterm_hist$n[4],"(",preterm_hist$valid_percent[4],")"),size = 4.0,color ="darkblue",hjust =0) +
  # annotate("text",x =21 +.5 ,y=146,label = paste0("Term (37 to 41 weeks) = ",preterm_hist$n[5],"(",preterm_hist$valid_percent[5],")"),size = 4.0,color ="darkblue",hjust=-0.2) +
  #  annotate("text",x =21 +1.5 ,y=138,label = paste0("Post term  (>=42 weeks) = ",preterm_hist$n[6],"(",preterm_hist$valid_percent[6],")"),size = 4.0,color ="darkblue",hjust =0) 

```

## Accuracy of US-Expected Dates of Delivery -- EDD

The graph below describe difference between `Expected dates of Delivery` predicted by US and the actual dates of delivery. Analysis is based on **Live births**.

```{r}
#| label: fig-USedd
#| fig-cap: "US Expected dates of delivery"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6.5

EDD_dates <- ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,US_EDD_enrolment,DELIV_DSSTDAT_INF1,BIRTH_DSTERM_INF1) %>%
  group_by(MOMID) %>% fill(BIRTH_DSTERM_INF1,.direction = "updown") %>% drop_na(DELIV_DSSTDAT_INF1) %>% 
  distinct(MOMID,.keep_all = T) %>% filter(BIRTH_DSTERM_INF1=="Live birth") %>% mutate(date_diff = as.numeric(DELIV_DSSTDAT_INF1-US_EDD_enrolment)) %>% 
  mutate(cat = case_when(date_diff==0~"Accurately predicted",
                         date_diff>=1 & date_diff<=7~ "1-7 days after EDD",
                         date_diff>=8 & date_diff<=14~ "8-14 days after EDD",
                         date_diff>=15 & date_diff<=21~ "15-21 days after EDD",
                         date_diff>=22~ ">21 days after EDD",
                         date_diff>=-7 & date_diff<=-1~ "1-7 days before EDD",
                         date_diff>=-14 & date_diff<=-8~ "8-14 days before EDD",
                         date_diff>=-21 & date_diff<=-15~ "15-21 days before EDD",
                         date_diff<=-22~ ">21 days before EDD"),
         accuracy = case_when(date_diff == 0~"On EDD",
                              date_diff<0~"Delivery before EDD",
                              date_diff>0~"Delivery after EDD")) %>% 
  group_by(accuracy) %>% count(cat) %>% mutate(cat =as.factor(cat)) 

before_edd = sum((EDD_dates %>% filter(accuracy == "Delivery before EDD"))$n)
after_edd = sum((EDD_dates %>% filter(accuracy == "Delivery after EDD"))$n)

EDD_dates %>% 
  mutate(cat =fct_relevel(cat,">21 days before EDD","15-21 days before EDD","8-14 days before EDD","1-7 days before EDD",
                          "Accurately predicted","1-7 days after EDD","8-14 days after EDD","15-21 days after EDD",">21 days after EDD")) %>% 
  ggplot(aes(x=cat,y=n,fill=accuracy))+
    geom_col(width = .3,color="black",alpha =.5)+
  labs(x=element_blank(),y="Count") +
  geom_text(aes(label = n),vjust=-1) +
  #guides(fill=guide_legend(title = "Accuracy of EDD")) +
  theme_bw()  +
theme(panel.border = element_rect(colour = "gray"),
      legend.title = element_blank(),
      legend.position = "bottom",
      legend.text = element_text(size = 12,color = "black"),
      legend.key.height = unit(.7,"cm"),
       legend.key.width = unit(2,"cm"),
      axis.title = element_text(size = 16,color = "black"),
      axis.text.y = element_text(size = 13,color = "black"),
      axis.text.x = element_text(angle = 90,size = 14,colour = "black")) +
  scale_y_continuous(limits = c(0,max(EDD_dates$n)+20)) +
  annotate("text", x=2, y=120, label = paste0("Before EDD: ",before_edd)) +
  annotate("text", x=8, y=120, label = paste0("After EDD: ",after_edd)) +
  annotate("text", x=5, y=100, label = "EDD") +
  geom_segment(aes(x=5,y=95,xend=5,yend=50),arrow = arrow(length = unit(0.03,"npc")))
```

## Gestational ages (weeks) at delivery

```{r}
#| label: fig-GaweeksDelivery
#| fig-cap: "Gestational ages (weeks) at delivery"
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 5.8
ALL_PRiSMA %>% drop_na(MOMID) %>%  
  select(MOMID,INFANTID,TYPE_VISIT,US_EDD_enrolment,US_Date_enrolment,DELIV_DSSTDAT_INF1,Ga_outcome_weeks) %>% 
 # group_by(MOMID) %>% fill(pregnancy_outcomes,.direction = "updown") %>% 
  distinct(MOMID,.keep_all = T) %>% 
  mutate(Ga_delivery = factor(case_when(Ga_outcome_weeks<28~"extremely preterm (<28 weeks)",
                                 Ga_outcome_weeks>=28&Ga_outcome_weeks<32~"Very preterm (28 to <32 weeks)",
                                 Ga_outcome_weeks>=32&Ga_outcome_weeks<34~"Moderate preterm (32 to <34 weeks)",
                                 Ga_outcome_weeks>=34&Ga_outcome_weeks<37~"Late preterm(34 to <37 weeks)",
                                 Ga_outcome_weeks>=37&Ga_outcome_weeks<42~"Term (37 to <42 weeks)",
                                 Ga_outcome_weeks>=42~"Post term  (>=42 weeks)")),
  Ga_delivery = fct_relevel(Ga_delivery,"extremely preterm (<28 weeks)","Very preterm (28 to <32 weeks)",
                            "Moderate preterm (32 to <34 weeks)","Late preterm(34 to <37 weeks)","Term (37 to <42 weeks)","Post term  (>=42 weeks)")) %>% drop_na(Ga_delivery) %>% 
  tabyl(Ga_delivery) %>% mutate(percent = round(percent*100,1)) %>% 
  ggplot(aes(x=Ga_delivery,y=n))+
  geom_col(width = 0.4,color="black",alpha =.7,fill = c("#9AFA0AFE"))+
  geom_label(aes(label= paste0(n,"(",percent,"%)")),size=4,alpha=9,hjust=0.1,color="black")+
  labs(title = "",x="",y="Counts")+
  theme_light() +
  theme(
    axis.text.x = element_text(size = 12,color = "black"),
    axis.text.y = element_text(size = 12,color = "black", face = "italic"),
    axis.title = element_text(size = 14,color = "black", face = "italic"),
    legend.position = "none",
    plot.title = element_text(size = 16,color = "darkblue", face = "italic",hjust = 0.3),
    plot.subtitle =  element_text(size = 10,color = c("#A1A1A1"), face = "italic")) +
  coord_flip() +
  scale_y_continuous(limits = c(0,800),breaks = seq(0,700,100))
```

```{r}
# query: post term dates
# Locked_PRISMA %>% drop_na(MOMID) %>%  
#   select(MOMID,INFANTID,TYPE_VISIT,US_EDD_enrolment,US_Date_enrolment,DELIV_DSSTDAT_INF1,Ga_outcome_weeks,pregnancy_outcomes) %>% 
#   group_by(MOMID) %>% fill(pregnancy_outcomes,.direction = "updown") %>% 
#   distinct(MOMID,INFANTID,.keep_all = T) %>% 
#   filter(Ga_outcome_weeks>=42) %>% View()
```

## PRISMA Birth Facilities

```{r}
#| label: tbs-birthcenter
#| tbl-cap: "Birth Facilities"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 14
#| fig-height: 8
birth_center <- Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT == "IPC") %>% 
  mutate(Year = lubridate::year(DELIV_DSSTDAT_INF1)) 


birth_center %>% select(Year,Birth_facility) %>% #mutate(Year = forcats::fct_na_value_to_level(Year,)) %>% 
  tbl_summary(by = Year,statistic = all_categorical()~"{n}",sort = list(everything() ~ "frequency"),
              label = list(Birth_facility~"Birth Facility")) %>% 
  bold_labels() %>% 
  add_overall() %>%  modify_spanning_header(c("stat_1", "stat_2") ~ "**YEAR**") %>% as_gt() %>% 
    tab_header(title = "Distribution of PRISMA IPCs against Birth locations") %>% opt_table_outline(style = "solid",width = px(2.4),color = "black") %>% 
  opt_table_lines() %>% opt_table_outline(style = "solid",width = px(2.5),color = "black") %>% 
  tab_style(style = cell_text(color ="black",weight = "bold"),
            locations = cells_title())
```

# Maternal Obstetric History

```{r}
#| label: tbs-Medicalhistory
#| tbl-cap: "Medical and Obstetrical History"
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 10
#| fig-height: 8
obstetric <- ALL_PRiSMA %>% drop_na(MOMID) %>% #filter(PH_PREV_RPORRES== "Yes") %>%  
  select(MOMID,`Antepartum hemorrhage` = APH_RPORRES,`Postpartum hemorrhage` = PPH_RPORRES, #Oligohydramnios = OLIGOHYDRAMNIOS_RPORRES,
         Macrosomia = MACROSOMIA_RPORRES,
         `Low birth weight` = LOWBIRTHWT_RPORRES,`Intrauterine growth restriction` = INTERUTER_GROWTH_RPORRES,
         `Unplanned Cesarean delivery` = UNPL_CESARIAN_PROCCUR,`Obstructed labor` = OBSTR_LABOR_RPORRES,
         `Premature rupture of membranes` = PREMATURE_RUPTURE_RPORRES, `Previous gestational diabetes` = GEST_DIAB_RPORRES,
         `Preeclampsia/eclampsia` = PREECLAMPSIA_RPORRES,`Gestational hypertension` = GEST_HTN_RPORRES,
         `Post term delivery` = POSTTERM_RPORRES,` Pre term delivery` = PRETERM_RPORRES,`Chronic hypertension` = HTN_EVER_MHOCCUR) %>% 
  group_by(MOMID) %>% fill(everything(.)) %>% ungroup() %>% distinct(MOMID,.keep_all = T)


 obstetric %>% select(-MOMID) %>%  mutate_all(~replace(.x,.x=="Don’t know",NA)) %>% droplevels() %>% 
tbl_summary(missing = "no") %>% modify_header(label~ "**Previous history**") %>%  as_gt() %>% 
 #opt_horizontal_padding(scale = .5) %>% 
  opt_table_lines() %>% #opt_vertical_padding(scale = .5) %>% 
  tab_options(heading.background.color = 'darkgreen',
              heading.align = 'left',
              table.width = pct(58),
              heading.title.font.size = px(20)) %>% 
  tab_header(title = "Medical and Obstetrical History",
             #subtitle = "Analysis based on women with previous pregnancy i.e live births, stillbirths, miscarriages, or abortions"
             ) %>% 
  tab_footnote(footnote = paste0("N = ",obstetric %>% nrow()," Total enrollments"))
  
```

# Baseline characteristics (Anthropometrics and clinical measurements)

::: panel-tabset
## Baseline characteristics

```{r}
#| label: tbs-Baseline
#| tbl-cap: "Baseline characteristics"
#| echo: false
#| warning: false
#| column: body-outset
#| fig-width: 10
#| fig-height: 8

Locked_PRISMA %>% mutate(MALARIA_POC_LBORRES = case_when(MALARIA_POC_LBORRES=="Positive"~"Yes",MALARIA_POC_LBORRES=="Negative"~"No"),
                         POC_hemocue_YN = case_when(POC_hemocue_YN=="Anemic"~"Yes",POC_hemocue_YN=="Normal"~"No")) %>% 
  select(MOMID,TYPE_VISIT,`BMI Levels: (Kg/m2)` = BMI_Levels,`Maternal Age` = maternal_age,`MUAC Levels` = MUAC_levels,
         `Anemia: POC hemocue` = POC_hemocue,`Anemic: POC hemocue` = POC_hemocue_YN, `Maternal height: cm` = HEIGHT_PERES,
         `Weight: Kg` = WEIGHT_PERES,`Malaria positivity` = MALARIA_POC_LBORRES,`Temperature Celsius` = TEMP_VSORRES,
         `Maternal Heart rate` = MHR_VSORRES,`Respiratory rate: breaths per minute`= RR_VSORRES,`oxygen saturation (SpO2): %` = PULSEOX_VSORRES, 
         `Systolic Bp: mm Hg` = `Systolic Bp`,`Diastolic Bp: mm Hg` = `Diastolic Bp`, `Pallor signs` = PALLOR_VSORRES) %>% labelled::remove_var_label() %>% 
  filter(TYPE_VISIT == "Enrollment") %>% select(-1,-2) %>% droplevels() %>% 
  tbl_summary(missing = "no",digits = list(all_categorical()~c(0,1),all_continuous()~c(0,1))) %>% 
  bold_labels() %>% italicize_levels() %>%  as_gt() %>%   
  opt_table_lines() %>% opt_vertical_padding(scale = .6) %>% 
  opt_horizontal_padding(scale = 3) %>% 
  tab_options(heading.background.color = 'darkgreen',
              heading.align = 'left',
              heading.title.font.size = px(20),
              table.width = pct(55)) %>% 
  tab_header(title = "Baseline characteristics on anthropometrics and clinical measurements")
```

## Baseline characteristics by Birth Outcome

```{r}
#| label: tbs-baselineBirthoutcome
#| tbl-cap: ""
#| echo: false
#| warning: false
#| column: body-outset-right
#| fig-width: 14
#| fig-height: 8
Locked_PRISMA %>% mutate(MALARIA_POC_LBORRES = case_when(MALARIA_POC_LBORRES=="Positive"~"Yes",MALARIA_POC_LBORRES=="Negative"~"No"),
                         POC_hemocue_YN = case_when(POC_hemocue_YN=="Anemic"~"Yes",POC_hemocue_YN=="Normal"~"No")) %>% 
  mutate(Birth_outcome = replace(pregnancy_outcomes,pregnancy_outcomes%in%c("Miscarriages","Stillbirths"),"Fetal death"),
        PULSEOX_VSORRES =as.double(PULSEOX_VSORRES)) %>% 
  group_by(MOMID) %>% fill(Birth_outcome,.direction = "updown") %>% ungroup() %>% 
  select(MOMID,TYPE_VISIT,Birth_outcome,`BMI Levels: (Kg/m2)` = BMI_Levels,`Maternal Age` = maternal_age,`MUAC Levels` = MUAC_levels,
         `Anemia: POC hemocue` = POC_hemocue,`Anemic: POC hemocue` = POC_hemocue_YN, `Maternal height: cm` = HEIGHT_PERES,
         `Weight: Kg` = WEIGHT_PERES,`Malaria positivity` = MALARIA_POC_LBORRES,`Temperature Celsius` = TEMP_VSORRES,
         `Maternal Heart rate` = MHR_VSORRES,`Respiratory rate: breaths per minute`= RR_VSORRES,`oxygen saturation (SpO2): %` = PULSEOX_VSORRES, 
         `Systolic Bp: mm Hg` = `Systolic Bp`,`Diastolic Bp: mm Hg` = `Diastolic Bp`, `Pallor signs` = PALLOR_VSORRES) %>% labelled::remove_var_label() %>% 
  filter(TYPE_VISIT == "Enrollment") %>% select(-1,-2,-`oxygen saturation (SpO2): %`) %>% droplevels() %>% 
  tbl_summary(by = Birth_outcome, missing = "no",digits = list(all_categorical()~c(0,1),all_continuous()~c(0,1))) %>%  add_overall() %>% 
  bold_labels() %>% italicize_levels() %>% add_p() %>% 
  as_gt() %>%   
  opt_table_lines() %>% opt_vertical_padding(scale = .6) %>% 
  opt_horizontal_padding(scale = 3) %>% 
  #tab_options(table.width = pct(100)) %>% 
  tab_options(heading.background.color = 'darkgreen',
              heading.align = 'left',
              heading.title.font.size = px(20),
              table.width = pct(65)) %>% 
  
  tab_header(title = "Baseline descriptive statistics of anthropometrics and clinical measurements by birth outcome")
```
:::

# Hypertensive disorder (HPD)

```{r}
#| label: fig-hpd
#| fig-cap: ""
#| warning: false
#| fig-align: center
#| fig-width: 11.2
#| fig-height: 5.2
#| echo: false
Locked_PRISMA %>% drop_na(MOMID) %>% filter(MAT_VISIT_MNH04 == "Yes, visit conducted in person") %>% 
  select(MOMID,TYPE_VISIT,`Hypertensive disorder (HPD)`= HPD_MHOCCUR,`Type of HPD` = HPD_MHTERM) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","Non-scheduled visit")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>% mutate_all(~replace(.x,.x%in%c("Don’t know","77"),NA)) %>% select(-MOMID) %>% 
 droplevels() %>% tbl_summary(by=TYPE_VISIT,missing = "no") %>% bold_labels() %>% italicize_levels() %>% as_gt() %>% 
  sub_values(columns = everything(),values = "0 (0%)",replacement = "-") %>% 
  opt_table_outline() %>%tab_footnote(footnote  = md("**Hypertensive disorder (HPD)** --> *Asked as: HPD since last study visit, hence High likelihood of the same participant giving the same response in the subsequent visit*"))


# treatments of HPD

# Locked_PRISMA %>% drop_na(MOMID) %>% filter(MAT_VISIT_MNH04 == "Yes, visit conducted in person") %>% 
#     filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","Non-scheduled visit")) %>% 
#   filter(HPD_MHOCCUR=="Yes") %>% 
#   select(TYPE_VISIT,`Bedrest, at home` = HPD_OECTRT_1,`Bedrest, at facility` = HPD_OECTRT_2,`Magnesium sulfate` = HPD_OECTRT_3,
# Hydralazine = HPD_OECTRT_4,Nifedipine = HPD_OECTRT_5,Labetalol = HPD_OECTRT_6,`Methyldopa (Aldomet)` = HPD_OECTRT_7,
# Betamethasone = HPD_OECTRT_8,Dexamethasone = HPD_OECTRT_9,Atenolol = HPD_OECTRT_10,Other = HPD_OECTRT_88,
# `No treatment received` = HPD_OECTRT_77,`Don’t know` = HPD_OECTRT_99,`Other treatment provided for HPD` = HPD_SPFY_OECTRT) %>% 
#   mutate_all(~replace(.x,.x%in%c("Don’t know","77"),NA)) %>% labelled::remove_var_label() %>% 
#   select(-c(`Magnesium sulfate`,Hydralazine,Labetalol,Betamethasone,Atenolol,`Don’t know`,Other)) %>% 
#   droplevels() %>% 
#   tbl_summary(by = TYPE_VISIT,missing = "no",statistic = all_categorical()~"{n}") %>% as_gt() %>% 
#   sub_values(columns = everything(),values = c("0","0 (NA%)"),replacement = "-") %>% 
#   tab_style(style = cell_text(weight = "bold"),
#             locations = cells_body(rows = 7)) %>% opt_table_outline()
```

# Anemia Prevalence

::: panel-tabset
### Anemia Prevalence

```{r}
#| label: fig-anemia
#| tbl-cap: "Anemia Prevalence"
#| warning: false
#| column: body-outset
#| fig-width: 15
#| fig-height: 6.5
#| echo: false

desc_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,HB_POC_LBORRES,CBC_HB_LBORRES,SPHB_LBORRES) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC","PNC-0","PNC-1","PNC-4","PNC-6","PNC-26"))

desc_data %>% rename(`POC Hemocue` = HB_POC_LBORRES,`HB CBC` = CBC_HB_LBORRES,`POC Masimo` = SPHB_LBORRES) %>%
  pivot_longer(names_to = "HB measurement",values_to = "Hb value",cols = `POC Hemocue`:`POC Masimo`) %>% drop_na(`Hb value`) %>% 
  mutate(Anemia = if_else(`Hb value`<11,"Anemic","Normal")) %>% group_by(TYPE_VISIT,`HB measurement`) %>% count(Anemia) %>% 
  mutate(Prev = paste0(n," (",round(n/sum(n)*100,1),"%)")) %>% filter(Anemia=="Anemic") %>% select(-c(Anemia,n)) %>% 
  pivot_wider(id_cols = `HB measurement`,names_from = TYPE_VISIT,values_from = Prev) %>% 
  mutate(`PNC-0` = replace(`PNC-0`,`HB measurement`=="HB CBC",NA)) %>% gt(row_group_as_column = T) %>% 
   # gt(rowname_col = "HB_Tool",groupname_col ="TYPE_VISIT",row_group_as_column = TRUE) %>% 
  tab_header(title = "Anemia prevalence stratified by different visits & different tools of measurement") %>% 
  opt_table_outline() %>% opt_table_lines() %>% 
  opt_row_striping() %>% opt_vertical_padding(scale = .8) %>% 
sub_missing(missing_text = "-") %>% 
    tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
    cols_align(align = "center") %>% 
      tab_style(style = cell_text(weight = "bold"),
            locations = cells_row_groups()) 
```

### Anemia Prevalence across visits

```{r}
#| label: fig-anemiaprev
#| tbl-cap: "Anemia Prevalence"
#| warning: false
#| column: body-outset
#| fig-width: 16
#| fig-height: 7
#| echo: false


# ANEMIA TILE
#---------------------------------------------------------------------------

HB_poc_hemacue_tile <- ALL_PRiSMA %>% drop_na(MOMID) %>%
  #filter(complete.cases(MOMID)) %>%
  select(MOMID,TYPE_VISIT,HB_POC_LBORRES) %>%
  mutate(HB_POC = factor(case_when(HB_POC_LBORRES >=11~ 1,
                                   HB_POC_LBORRES >=10 & HB_POC_LBORRES <11~ 2,
                                   HB_POC_LBORRES >=7 & HB_POC_LBORRES <10~3,
                                   HB_POC_LBORRES <7~4), levels = c(1,2,3,4),
                         labels = c("Normal","Mild","Moderate","Severe"))) %>%
  mutate(HB_POC_1 = dplyr::recode(HB_POC,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic")) %>% drop_na() %>% 
  tabyl(TYPE_VISIT,HB_POC_1) %>% adorn_totals(where = "col") %>%  #select(TYPE_VISIT,Normal, Anemic) %>% 
  mutate(TYPE_VISIT = as.character(TYPE_VISIT)) %>%
  mutate(TYPE_VISIT=replace(TYPE_VISIT,TYPE_VISIT==" N/A",as.character(NA))) %>%
  drop_na(TYPE_VISIT) %>% filter(!TYPE_VISIT%in%c("N/A","Non-scheduled ANC visit for routine care","Non-scheduled visit",
                                                  "Non-scheduled visit for routine care","14")) %>%
  mutate(`Anemia Prevalence (%)` = round((Anemic/Total)*100,1),
         HB_tool = paste0("POC Hemacue")) #%>% view()

#---------------------------------------------------------------------------
Hb_masimo_tile <- ALL_PRiSMA %>% drop_na(MOMID) %>%
  select(MOMID,TYPE_VISIT,SPHB_LBORRES) %>% mutate(SPHB_LBORRES = replace(SPHB_LBORRES,SPHB_LBORRES<0,NA)) %>%
  mutate(SPHB = factor(case_when(SPHB_LBORRES >=11~ 1,
                                 SPHB_LBORRES >=10 & SPHB_LBORRES <11~ 2,
                                 SPHB_LBORRES >=7 & SPHB_LBORRES <10~3,
                                 SPHB_LBORRES <7~4), levels = c(1,2,3,4),
                       labels = c("Normal","Mild","Moderate","Severe"))) %>%
  mutate(SPHB_1 = dplyr::recode(SPHB,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic")) %>% drop_na() %>% 
  tabyl(TYPE_VISIT,SPHB_1)%>% adorn_totals(where = "col") %>%  #select(TYPE_VISIT,Normal, Anemic) %>%  
  mutate(TYPE_VISIT = as.character(TYPE_VISIT)) %>%
  mutate(TYPE_VISIT=replace(TYPE_VISIT,TYPE_VISIT==" N/A",as.character(NA))) %>%
  drop_na(TYPE_VISIT) %>% filter(!TYPE_VISIT%in%c("N/A","Non-scheduled ANC visit for routine care","Non-scheduled visit",
                                                  "Non-scheduled visit for routine care","14")) %>%
  mutate(`Anemia Prevalence (%)` = round((Anemic/Total)*100,1),
         HB_tool = paste0("POC Masimo")) #%>% view()

#---------------------------------------------------------------------------
HB_CBC_tile <- ALL_PRiSMA %>% filter(complete.cases(MOMID),TYPE_VISIT == "Enrollment") %>%
  select(TYPE_VISIT,CBC_HB_LBORRES) %>%
  mutate(CBC_HB = factor(case_when(CBC_HB_LBORRES >=11~ 1,
                                   CBC_HB_LBORRES >=10 & CBC_HB_LBORRES <11~ 2,
                                   CBC_HB_LBORRES >=7 & CBC_HB_LBORRES <10~3,
                                   CBC_HB_LBORRES <7~4), levels = c(1,2,3,4),
                         labels = c("Normal","Mild","Moderate","Severe"))) %>% 
  mutate(CBC_HB_1 = dplyr::recode(CBC_HB,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic")) %>% drop_na() %>% 
  tabyl(TYPE_VISIT,CBC_HB_1) %>% adorn_totals(where = "col") %>%  #select(TYPE_VISIT,Normal, Anemic) %>% 
  filter(TYPE_VISIT == "Enrollment") %>%
  mutate(`Anemia Prevalence (%)` = round((Anemic/Total)*100,1),
         HB_tool = paste0("CBC")) #%>% view()

HB_CBC_tile %>% bind_rows(HB_poc_hemacue_tile) %>% bind_rows(Hb_masimo_tile) %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit","14")) %>%
  mutate(TYPE_VISIT = fct_relevel(TYPE_VISIT,c("Enrollment","ANC-20","ANC-28","ANC-32",
                                               "ANC-36","IPC","PNC-0","PNC-1",
                                               "PNC-4","PNC-6","PNC-26","PNC-52"))) %>%
  ggplot(aes(y = HB_tool,x=TYPE_VISIT,fill=`Anemia Prevalence (%)`,color=HB_tool)) +
  geom_tile(color="white",width=1,#fill=c("#F7D2F4"),
            lwd=3,
            linetype=1)+
  labs(x="",y="",
       title = "ANEMIA PREVALENCE AT SPECIFIC STUDY TOUCH POINTS")+
  geom_label(aes(label=paste0("N: ",Total)),vjust=-1,hjust=0.5,color="black",fill="white",size=4.5,alpha=10,
             label.padding = unit(0.4, "lines"))+
  geom_label(aes(label=paste0("Anemic: ",Anemic)),color="black",fill="white",size=4.5,alpha=10,
             label.padding = unit(0.4, "lines"))+
  geom_label(aes(label=paste0("Prev: ",`Anemia Prevalence (%)`,"%")),vjust=2,hjust=0.5,color="black",fill="white",size=4.5,alpha=10,
             label.padding = unit(0.4, "lines"))+
  #scale_fill_manual(breaks = levels(as.character(HB_CBC$HB_tool)),values = c("#CDAA7D", "#CD6600", "#528B8B"))+
  theme_linedraw()+
  #guides(fill=guide_legend(title = "Anemia Prevalence(%)"))+
  theme(plot.title = element_text(hjust = 0.5,face = "bold",size = 18),
        axis.text = element_text(size = 14,face = "bold"),
        legend.title = element_text(size = 14,face = "bold"),
        legend.key.height = unit(1,"cm"),
        legend.position = "none",
        legend.key.width = unit(1.5,"cm"),
        legend.text = element_text(size = 18))
```

Anemia prevalence at enrollment have been depicted as follows: CBC -- `r paste0(HB_CBC_tile[1,5],"%")`, POC Hemocue -- `r paste0(HB_poc_hemacue_tile[1,5],"%")` and POC Masimo -- `r paste0(Hb_masimo_tile[1,5],"%")`.
:::

## Anemia prevalence across study visits

```{r}
#| label: fig-anemiatile
#| warning: false
#| column: body-outset
#| fig-width: 16
#| fig-height: 7
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,HB_POC_LBORRES,CBC_HB_LBORRES) %>% #,SPHB_LBORRES
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","PNC-6")) %>% 

rename(`POC Hemocue` = HB_POC_LBORRES,`HB CBC` = CBC_HB_LBORRES) %>% # `POC Masimo` = SPHB_LBORRES
  pivot_longer(names_to = "HB measurement",values_to = "Hb value",cols = `POC Hemocue`:`HB CBC`) %>% drop_na(`Hb value`) %>% 
  mutate(Anemia = if_else(`Hb value`<11,"Anemic","Normal")) %>% group_by(TYPE_VISIT,`HB measurement`) %>% count(Anemia) %>% 
  mutate(Prev = round(n/sum(n)*100,1)) %>% filter(Anemia=="Anemic") %>% select(-c(Anemia,n)) %>% 
  ggplot(aes(y = `HB measurement`,x = TYPE_VISIT)) + labs(x="Study Visits",y="",fill ="Prev %") +
  theme_light() + 
  geom_tile(aes(fill = Prev),alpha =.6) + 
  scale_fill_gradient(name = "Anemia <br> Prevalence <br> (%)",low = "#C1FFC1", high = "darkred",limits = c(0,NA)) +
  geom_text(aes(label = Prev),color="black",fill = "white",size = 6) +
  #scale_fill_gradient(low = "#C1FFC1", high = "darkred") +
    theme(
        axis.text = element_text(size = 12,face = "italic"),
        legend.title = element_markdown(),
        legend.title.align = .5,
        axis.title =  element_text(size = 12,face = "italic"))
  
```

## Levels of Anemia :- Mild, Moderate, Severe

```{r}
#| label: fig-anemiaLevs
#| fig-cap: "Anemia Prevalence"
#| warning: false
#| column: body-outset
#| fig-width: 15
#| fig-height: 6.5
#| echo: false
desc_data %>% rename(`POC Hemocue` = HB_POC_LBORRES,`HB CBC` = CBC_HB_LBORRES,`POC Masimo` = SPHB_LBORRES) %>%

  pivot_longer(names_to = "HB measurement",values_to = "Hb value",cols = `POC Hemocue`:`POC Masimo`) %>% drop_na(`Hb value`) %>% 
  mutate(`Hb value` = round(`Hb value`,1)) %>% 
  mutate(Anemia = case_when(`Hb value`>=11.0~"Normal",
                            `Hb value`>=10.0 & `Hb value`<=10.9~"Mild",
                            `Hb value`>=7.0 & `Hb value`<=9.9~"Moderate",
                            `Hb value`<7.0~"Severe")) %>% select(TYPE_VISIT ,`HB measurement`,Anemia) %>% 
  group_by(TYPE_VISIT,`HB measurement`) %>% count(Anemia) %>% 
  mutate(Prev = paste0(n," (",round(n/sum(n)*100,1),"%)")) %>% select(-n) %>% 
  pivot_wider(id_cols = c(`HB measurement`,Anemia),names_from = TYPE_VISIT,values_from = Prev) %>% 
    
   mutate(`PNC-0` = replace(`PNC-0`,`HB measurement`=="HB CBC",NA),
          `ANC-32` = replace(`ANC-32`,`HB measurement`=="HB CBC",NA),
        # `PNC-26` = replace(`PNC-26`,`HB measurement`=="HB CBC",NA) 
         ) %>% filter(Anemia!="Normal") %>% 
  mutate(`PNC-26` = replace(`PNC-26`,`HB measurement`=="HB CBC"& Anemia == "Moderate",NA)) %>% 

  gt(rowname_col ="Anemia" ,groupname_col ="HB measurement",row_group_as_column = TRUE) %>% 
   tab_header(title = "Anemia prevalence stratified by different tools of measurement") %>% 
  opt_table_outline() %>% opt_table_lines() %>% 
  opt_row_striping() %>% opt_vertical_padding(scale = .7) %>% 
sub_missing(missing_text = "-") %>% 
    tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
    cols_align(align = "center") %>% 
      tab_style(style = cell_text(weight = "bold"),
            locations = cells_row_groups()) 
```

## Anemia progression in pregnancy

```{r}
#| label: fig-anemalluv
#| fig-cap: "Anemia progression"
#| warning: false
#| column: body-outset
#| fig-width: 16
#| fig-height: 7
#| echo: false


alluvialdta <- Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT %in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>% 
  select(MOMID,TYPE_VISIT,POC_hemocue) %>% 
  distinct() %>%  
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = POC_hemocue) %>% select(-MOMID) %>% 

 mutate_all(~fct_relevel(.,"Normal (>=11 g/dl)","Mild (10-<11 g/dl)","Moderate (7-<10 g/dl)","Severe (<7 g/dl)"))

alluvial_dta <-  alluvialdta %>% make_long(names(alluvialdta)) %>% 
  mutate_at(vars(contains("node")),~fct_relevel(.x,"Normal (>=11 g/dl)","Mild (10-<11 g/dl)","Moderate (7-<10 g/dl)","Severe (<7 g/dl)")) %>% 
mutate_all(~fct_explicit_na(.x))

all_tally <- alluvial_dta %>% group_by(node,x) %>% tally() %>% ungroup() %>% group_by(x) %>% mutate(prev = round((n/sum(n))*100,1)) #%>% View()

alluvial_dta %>% left_join(all_tally) %>% 
 ggplot(aes(x=x,next_x = next_x,
                            node = node,
                            next_node = next_node,
                            #label = node,
             label = paste0( prev,"%"), 
                            fill = factor(node))) +
  geom_sankey(flow.alpha = .8,
              node.color = "gray40",
              smooth = 5,
              na.rm = T,
#color = "gray85",
              show.legend = T) +
  geom_sankey_text(color = "gray25",vjust = -.2,hjust = -.5)+
theme_minimal() +
  #scale_fill_viridis_d(option = "inferno")
  scale_fill_manual(name = "Anemia levels",values = c("limegreen", "#FFB90F", "#FABBBB", "red","grey90")) +
  #scale_color_manual(values = c("darkgreen", "goldenrod", "darksalmon", "firebrick")) +
  theme(axis.ticks = element_blank(),
        axis.title = element_blank(),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 12,face = "italic"),
        axis.text = element_text(size = 12,face = "italic"),
        axis.text.y = element_blank()) 

```

## Comparison of HB measurements (POC Hemocue) across trimesters

```{r}
#| label: fig-Hbcomp
#| fig-cap: "HB (POC Hemocue) Comparison"
#| warning: false
#| column: body-outset
#| fig-width: 14
#| fig-height: 6
#| echo: false
#| 
Ga_data <-   ALL_PRiSMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>%
  select(MOMID,CON_DSSTDAT,ANC_OBSSTDAT,ANT_PEDAT,TYPE_VISIT,US_GA_WKS_AGE_FTS1,US_GA_DAYS_AGE_FTS1,HB_POC_LBORRES) %>% 
  mutate(ANC_OBSSTDAT1 = if_else(is.na(ANC_OBSSTDAT)& !is.na(ANT_PEDAT),ANT_PEDAT,ANC_OBSSTDAT),
         ANC_OBSSTDAT1 = if_else(is.na(ANC_OBSSTDAT1)& TYPE_VISIT=="Enrollment",CON_DSSTDAT,ANC_OBSSTDAT1)) %>% 
  mutate(ga_wks = round(US_GA_WKS_AGE_FTS1 + (US_GA_DAYS_AGE_FTS1/7),1),
         ga_wks = if_else(!TYPE_VISIT=="Enrollment",as.double(NA),ga_wks),
         ga_at_enrollment = ga_wks) %>%
  group_by(MOMID) %>% fill(c(CON_DSSTDAT,ga_at_enrollment),.direction = "updown") %>% ungroup() %>%
  mutate(wks_from_enrol=round(as.numeric((ANC_OBSSTDAT1-CON_DSSTDAT)/7),1),
         ga_at_visit = ga_at_enrollment + wks_from_enrol,
         Trimester = case_when(ga_at_visit<14~"Trimester 1",
                               ga_at_visit>=14 & ga_at_visit<27~"Trimester 2",
                               ga_at_visit>=27~"Trimester 3"))


# Comparison of HB measurements (POC Hemocue) across trimesters


ggbetweenstats(Ga_data,x=Trimester,y=HB_POC_LBORRES,
               pairwise.comparisons = TRUE,
               type = "robust",
               outlier.tagging = TRUE,
               ggsignif.args = list(textsize=4.3,tip_length=0.01),
               centrality.point.args = list(size = 5, color = "darkred"),
               centrality.label.args = list(size = 4, nudge_x = 0.4, segment.linetype = 4,
                                            min.segment.length = 0),
               violin.args = list(width = 0.5, alpha = 0.1),
               outlier.label.args = list(color="black"))+
  labs(#title = "Comparison of HB measurements (POC Hemocue) across trimesters",
       y= "HB Measurements (POC Hemocue)")+
  theme(plot.title = element_text(hjust = 0.5,size = 18),
        axis.title.y.left = element_text(size = 16,face = "italic"),
        axis.title.y.right = element_text(size = 16,face = "italic"),
        panel.background = element_rect(colour = "black",linewidth = 1),
        axis.title.x = element_blank(),
        axis.text = element_text(size = 12),
        plot.subtitle = element_text(size = 12))


```

The Hb mean difference between groups (trimesters) are significantly different, P value \< 0.001.

## Descriptive statistics of Hb values

```{r}
#| label: tbs-hbmeasuremntDistr
#| tbl-cap: "Distribution of Hb Measurements by study visits"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.5
#| echo: false
desc_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,HB_POC_LBORRES,CBC_HB_LBORRES,SPHB_LBORRES) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC"))


bind_rows(desc_data %>% filter(TYPE_VISIT == "Enrollment") %>% 
descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "Enrollment"),

desc_data %>% filter(TYPE_VISIT == "ANC-20") %>% 
descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "ANC-20"),

desc_data %>% filter(TYPE_VISIT == "ANC-28") %>% 
descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "ANC-28"),


desc_data %>% filter(TYPE_VISIT == "ANC-32") %>% 
descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "ANC-32") %>% filter(HB_Tool!="CBC_HB_LBORRES"),


desc_data %>% filter(TYPE_VISIT == "ANC-36") %>% 
descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "ANC-36"),

desc_data %>% filter(TYPE_VISIT == "IPC") %>% 
  descr(transpose = T) %>% as.data.frame() %>% rownames_to_column() %>% 
  select(HB_Tool = rowname,N= "N.Valid","Mean","Std.Dev","Min","Q1","Median","Q3","Max","IQR","CV","Skewness","Kurtosis") %>% 
  mutate(TYPE_VISIT = "IPC") %>% filter(HB_Tool!="CBC_HB_LBORRES")) %>%  mutate_if(is.double,~round(.x,2)) %>% 
  gt(rowname_col = "HB_Tool",groupname_col ="TYPE_VISIT",row_group_as_column = TRUE) %>% 
  tab_header(title = "Descriptive statistics of Hb values from different tools of measurement") %>% 
  opt_table_outline() %>% opt_table_lines() %>% 
  opt_row_striping() %>% #opt_vertical_padding(scale = .5) %>%
  sub_values(values = "CBC_HB_LBORRES",replacement = "CBC - HB") %>% 
  sub_values(values = "SPHB_LBORRES",replacement = "POC Masimo") %>% 
  sub_values(values = "HB_POC_LBORRES",replacement = "POC Hemocue") %>% 
 tab_options(table.width = pct(70)) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels()) %>% 
  cols_width(1~px(90),
    N~px(115)) %>% 
  cols_align(align = "center",
             columns = c(N,Skewness,Kurtosis)) %>% opt_vertical_padding(scale = .5)
    #  tab_style(
    # style = list(cell_fill(color = "#FFB6C1")),
    # locations = cells_body(rows = everything(), column = c(Min,Max))) 

```

# Diagnosis of Infections & Treatment

### Diagnosis

```{r}
#| label: tbs-infectprev
#| fig-cap: ""
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 7.5
#| echo: false

# hiv data
hiv_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
   anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,HIV_POC_LBORRES1) %>% 
  mutate(.=replace(.,.==55,NA)) %>%
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = HIV_POC_LBORRES1) %>% 
  mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
         `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
         `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
         `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
         IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC)) %>% 
  pivot_longer(cols = Enrollment:`PNC-26`,values_to = "HIV_POC_LBORRES1",names_to = "TYPE_VISIT") %>% 
  drop_na(HIV_POC_LBORRES1) %>% select(-`PNC-52`)


hiv_incidence <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
   anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,HIV_POC_test) %>% 
  mutate(.=replace(.,.==55,NA)) #%>% tabyl(HIV_POC_test)
  # pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = HIV_POC_LBORRES) %>% 
  # mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
  #        `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
  #        `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
  #        `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
  #        IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC)) %>% 
  # pivot_longer(cols = Enrollment:`PNC-26`,values_to = "HIV_POC_LBORRES",names_to = "TYPE_VISIT") %>% 
  # drop_na(HIV_POC_LBORRES)


# syphylis data
syph_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,SYPH_POC_LBORRES1) %>% 
  mutate(.=replace(.,.==55,NA)) %>%
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = SYPH_POC_LBORRES1) %>% 
  mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
         `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
         `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
         `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
         IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC),
         `PNC-26`=if_else(Enrollment=="Positive"&`PNC-26`=="Positive",NA,`PNC-26`)) %>% 
  pivot_longer(cols = Enrollment:`PNC-26`,values_to = "SYPH_POC_LBORRES1",names_to = "TYPE_VISIT") %>% 
  drop_na(SYPH_POC_LBORRES1) %>% select(-`PNC-52`)

# hbv data
hbv_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,HBV_POC_LBORRES) %>% 
  mutate(.=replace(.,.==55,NA)) %>%
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = HBV_POC_LBORRES) %>% 
  mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
         `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
         `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
         `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
         IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC),
         `PNC-26`=if_else(Enrollment=="Positive"&`PNC-26`=="Positive",NA,`PNC-26`)) %>% 
  pivot_longer(cols = Enrollment:`PNC-26`,values_to = "HBV_POC_LBORRES",names_to = "TYPE_VISIT") %>% 
   drop_na(HBV_POC_LBORRES) %>% select(-`PNC-52`)

# hcv data
hcv_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,HCV_POC_LBORRES) %>% 
  mutate(.=replace(.,.==55,NA)) %>%
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = HCV_POC_LBORRES) %>% 
  mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
         `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
         `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
         `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
         IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC),
         `PNC-26`=if_else(Enrollment=="Positive"&`PNC-26`=="Positive",NA,`PNC-26`)) %>% 
  pivot_longer(cols = Enrollment:`PNC-26`,values_to = "HCV_POC_LBORRES",names_to = "TYPE_VISIT") %>% 
  drop_na(HCV_POC_LBORRES)%>% select(-`PNC-52`)


# Helm data
helm_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,HELM_LBORRES) %>% 
  mutate(.=replace(.,.==55,NA)) #%>%
  # pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = HELM_LBORRES) %>% 
  # mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
  #        `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
  #        `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
  #        `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
  #        IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC),
  #        `PNC-26`=if_else(Enrollment=="Positive"&`PNC-26`=="Positive",NA,`PNC-26`)) %>% 
  # pivot_longer(cols = Enrollment:`PNC-26`,values_to = "HELM_LBORRES",names_to = "TYPE_VISIT") %>% 
  # drop_na(HELM_LBORRES)

# schisto data
schisto_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>%  select(MOMID,TYPE_VISIT,SCHISTO_LBORRES_STOOL) %>% 
  mutate(.=replace(.,.==55,NA)) #%>%
  # pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = SCHISTO_LBORRES_STOOL) %>% 
  # mutate(`ANC-20`=if_else(Enrollment=="Positive"&`ANC-20`=="Positive",NA,`ANC-20`),
  #        `ANC-28`=if_else(Enrollment=="Positive"&`ANC-28`=="Positive",NA,`ANC-28`),
  #        `ANC-32`=if_else(Enrollment=="Positive"&`ANC-32`=="Positive",NA,`ANC-32`),
  #        `ANC-36`=if_else(Enrollment=="Positive"&`ANC-36`=="Positive",NA,`ANC-36`),
  #        IPC=if_else(Enrollment=="Positive"&IPC=="Positive",NA,IPC),
  #        `PNC-26`=if_else(Enrollment=="Positive"&`PNC-26`=="Positive",NA,`PNC-26`)) %>% 
  # pivot_longer(cols = Enrollment:`PNC-26`,values_to = "SCHISTO_LBORRES_STOOL",names_to = "TYPE_VISIT") %>% 
  # drop_na(SCHISTO_LBORRES_STOOL)


merged_poc <- hiv_data  %>% full_join(syph_data) %>% full_join(hiv_incidence) %>% full_join(hbv_data) %>% full_join(hcv_data) %>% full_join(helm_data) %>% full_join(schisto_data)
#HB_POC_LBORRES,MALBL_LBORRES,TB_CNFRM_LBORRES,HIV_POC_LBORRES,HIV_POC_LBORRES1
Diagnosis_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% 
  select(MOMID,TYPE_VISIT,MALARIA_POC_LBORRES,MALBL_LBORRES,HB_POC_LBORRES,CBC_HB_LBORRES) %>% 
  filter(!TYPE_VISIT%in%c("Non-scheduled visit",14)) %>% 
  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20") %>% select(MOMID,TYPE_VISIT)) %>% 
  full_join(merged_poc) %>% mutate(.=replace(.,.==55,NA)) %>% #View()
  droplevels() %>% mutate(`Malaria Positives`=if_else(MALARIA_POC_LBORRES=="Positive","Yes","No"),
                          `Malaria Positives (Blood slide)`=if_else(MALBL_LBORRES=="Positive","Yes","No"),
                          #`HIV Positives`=if_else(HIV_POC_LBORRES1=="Positive","Yes","No"),
                          `HIV new positives`=if_else(HIV_POC_test=="Positive","Yes","No"),
                          `Syphilis Positives`=if_else(SYPH_POC_LBORRES1=="Positive","Yes","No"),
                          `HBV Positives`=if_else(HBV_POC_LBORRES=="Positive","Yes","No"),
                          `HCV Positives`=if_else(HCV_POC_LBORRES=="Positive","Yes","No"),
                          `Helminth Positives`=if_else(HELM_LBORRES=="Positive","Yes","No"),
                          `Schistosomiasis Positives`=if_else(SCHISTO_LBORRES_STOOL=="Positive","Yes","No"),
                          CBC_Hb = factor(case_when(CBC_HB_LBORRES >=11~ 1,
                                     CBC_HB_LBORRES >=10 & CBC_HB_LBORRES <11~ 2,
                                     CBC_HB_LBORRES >=7 & CBC_HB_LBORRES <10~3,
                                     CBC_HB_LBORRES <7~4), levels = c(1,2,3,4),
                           labels = c("Normal","Mild","Moderate","Severe")),
                          HB_cbc_1 = dplyr::recode(CBC_Hb,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic"),
                          `Anemic (HB <11) CBC Hb`=if_else(HB_cbc_1=="Anemic","Yes","No"),
                          HB_POC = factor(case_when(HB_POC_LBORRES >=11~ 1,
                                     HB_POC_LBORRES >=10 & HB_POC_LBORRES <11~ 2,
                                     HB_POC_LBORRES >=7 & HB_POC_LBORRES <10~3,
                                     HB_POC_LBORRES <7~4), levels = c(1,2,3,4),
                           labels = c("Normal","Mild","Moderate","Severe")),
                         HB_POC_1 = dplyr::recode(HB_POC,"Mild"="Anemic","Moderate"="Anemic","Severe"="Anemic"),
                         `Anemic (HB <11) POC Hemocue`=if_else(HB_POC_1=="Anemic","Yes","No"),
                         `HIV Positives`=if_else(HIV_POC_LBORRES1=="Positive","Yes","No")) %>% 
  select(`Malaria Positives`,`Malaria Positives (Blood slide)`,TYPE_VISIT,`HIV Positives`,
         `HIV new positives`,`Anemic (HB <11) POC Hemocue`,`Anemic (HB <11) CBC Hb`,`Syphilis Positives`,`HBV Positives`,
         `HCV Positives`,`Helminth Positives`,`Schistosomiasis Positives`) %>%
  mutate(TYPE_VISIT =fct_relevel(TYPE_VISIT,"Enrollment")) 

  Diagnosis_data %>% tbl_summary(by=TYPE_VISIT,missing = "no",digits = list(everything()~c(0,2))) %>% 
    as_gt() %>% opt_table_outline() %>% opt_table_lines() %>% 
  sub_missing(missing_text = "-") %>% sub_values(values = "0 (NA%)",replacement = "--") %>% 
  sub_values(values = "0 (0.00%)",replacement = "--") %>% opt_vertical_padding(scale = .5)
  
```

**Note:** It seems we are not capturing data on `Malaria testing (Blood slide)`. So far we have **`r Diagnosis_data %>% clean_names() %>%  drop_na(malaria_positives_blood_slide) %>% nrow()`** results captured in the database. At Enrollment **`r Diagnosis_data %>% clean_names() %>% drop_na(malaria_positives_blood_slide) %>% filter(type_visit=="Enrollment") %>% nrow()`** records have been documented.

`HIV new positives` at Enrollment are **`r Diagnosis_data %>% clean_names() %>% drop_na(hiv_new_positives) %>% filter(type_visit=="Enrollment",hiv_new_positives=="Yes") %>%  nrow()`** out of **`r Diagnosis_data %>% clean_names() %>% drop_na(hiv_new_positives) %>% filter(type_visit=="Enrollment") %>% nrow()`** tests performed.

### Treatments for malaria positives

```{r}
#| label: tbs-treatmnt
#| fig-cap: "Treatments issued"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 7.5
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>% 
  select(TYPE_VISIT,MALARIA_POC_LBORRES,MALARIA_EVER_CMTRT_1,MALARIA_EVER_CMTRT_2,MALARIA_EVER_CMTRT_3,
         MALARIA_EVER_CMTRT_88,MALARIA_EVER_CMTRT_77,MALARIA_EVER_CMTRT_99) %>% filter(TYPE_VISIT!=14) %>% 
   filter(TYPE_VISIT!="Non-scheduled visit") %>% 
  filter(MALARIA_POC_LBORRES=="Positive") %>% droplevels() %>%
  rename(` Artesunate + Amodiaquine,oral` = MALARIA_EVER_CMTRT_1,
         `Artemether + Lumefantrine,oral` = MALARIA_EVER_CMTRT_2,
         ` Dihydroartemisinin + Piperaquine, oral`= MALARIA_EVER_CMTRT_3,
         `  Other`= MALARIA_EVER_CMTRT_88,
         ` No treatment received` = MALARIA_EVER_CMTRT_77,
         ` Unknown` = MALARIA_EVER_CMTRT_99) %>% select(-MALARIA_POC_LBORRES) %>% 
  filter_at(vars(2,3,4,5,6),~!is.na(.x)) %>% droplevels() %>% 
  tbl_summary(by = TYPE_VISIT,missing = "no") %>% 
  as_gt() %>% opt_table_outline() %>% #opt_table_lines() %>% 
  sub_missing(missing_text = "-") %>% sub_values(values = "0 (NA%)",replacement = "--") %>% 
  sub_values(values = "0 (0%)",replacement = "--") %>% opt_vertical_padding(scale = .5)
```

### Comparison of Ogtt measurement at ANC 28

```{r}
#| label: fig-ogtt
#| fig-cap: "Comparison of Ogtt measurements"
#| warning: false
#| column: body-outset
#| fig-width: 14
#| fig-height: 6
#| echo: false
#| 

ogtt_data <- ALL_PRiSMA %>% select(MOMID,CON_DSSTDAT,TYPE_VISIT,SCRN_FAC_SPFY_OBSLOC,HBA1C_TEST_YN,HBA1C_PRCNT,BGLUC_LBPERF_1,
                                   BGLUC_PRETEST_MMOLL_LBORRES,BGLUC_LBPERF_2,BGLUC_ORAL_1HR_MMOLL_LBORRES,
                                   BGLUC_LBPERF_3,BGLUC_ORAL_2HR_MMOLL_LBORRES,BGLUC_POC_LBPERF,BGLUC_POC_LBORRES,BGLUC_POC_UNITS) %>%
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) #%>% view()

paired_ogtt <- ogtt_data %>% select(MOMID, TYPE_VISIT, BGLUC_PRETEST_MMOLL_LBORRES) %>% 
  filter(TYPE_VISIT == "ANC-28") %>% select(MOMID, BGLUC_PRETEST_MMOLL_LBORRES) %>% 
  filter(complete.cases(BGLUC_PRETEST_MMOLL_LBORRES)) %>% filter(BGLUC_PRETEST_MMOLL_LBORRES<5.1) %>% 
  left_join(ogtt_data %>% select(MOMID, TYPE_VISIT, BGLUC_ORAL_1HR_MMOLL_LBORRES,BGLUC_ORAL_2HR_MMOLL_LBORRES) %>% 
              filter(TYPE_VISIT == "ANC-28") %>% select(MOMID, BGLUC_ORAL_1HR_MMOLL_LBORRES,BGLUC_ORAL_2HR_MMOLL_LBORRES) %>% 
              filter(complete.cases(BGLUC_ORAL_1HR_MMOLL_LBORRES))) 

ogtt_long_dat <- paired_ogtt %>% 
  select(MOMID,BGLUC_PRETEST = BGLUC_PRETEST_MMOLL_LBORRES, BGLUC_ORAL_1HR = BGLUC_ORAL_1HR_MMOLL_LBORRES,BGLUC_ORAL_2HR = BGLUC_ORAL_2HR_MMOLL_LBORRES) %>% 
  pivot_longer(names_to = "ogtt_test",values_to = "measurement",cols = BGLUC_PRETEST:BGLUC_ORAL_2HR) 


ggbetweenstats(ogtt_long_dat,x = ogtt_test, 
               y = measurement,
               type = "nonparametric", 
               plot.type = "boxviolin",
               pairwise.display = "all",
               xlab = "Ogtt Test",
               ylab = "Ogtt Measurement (mmol/L)",
               mean.plotting = T,
               notch =T,
               notchwidth =0.1,
               outlier.tagging = TRUE,
               ggsignif.args = list(textsize=4,tip_length=0.01),
               centrality.point.args = list(size = 5, color = "darkred"),
               centrality.label.args = list(size = 4, nudge_x = 0.4, segment.linetype = 4,
                                            min.segment.length = 0),
               violin.args = list(width = 0.5, alpha = 0.1),
               outlier.label.args = list(color="black"))+
  #labs(title = "Comparison of Ogtt measurements")+
  theme(plot.title = element_text(hjust = 0.5,size = 18),
        axis.title.y.left = element_text(size = 16,face = "italic"),
        axis.title.y.right = element_text(size = 16),
        panel.background = element_rect(colour = "black",linewidth = 1),
        axis.title.x = element_blank(),
        axis.text = element_text(size = 12, face = "bold"),
        plot.subtitle = element_text(size = 11))

```

```{r}
Diabetes_data <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,HBA1C_PRCNT,BGLUC_POC_LBORRES,BGLUC_PRETEST_MMOLL_LBORRES,
                                         BGLUC_ORAL_1HR_MMOLL_LBORRES,BGLUC_ORAL_2HR_MMOLL_LBORRES) %>% 
  mutate(. = replace(.,.==-5,NA))
```

```{r}

# # Diagnosis of Diabetes
# 
# ::: panel-tabset
# ## Diabetes at Enrolment
# 
# #| label: tab-diabetes
# #| fig-cap: ""
# #| warning: false
# #| column: body-outset
# #| fig-width: 14
# #| fig-height: 6
# #| echo: false
# 
# Diabetes_data %>% mutate(HBA1C_PRCNT = replace(HBA1C_PRCNT,HBA1C_PRCNT==-5,NA)) %>% filter(TYPE_VISIT=="Enrollment") %>% 
#   mutate(`possible diabetes` = if_else(HBA1C_PRCNT>=6.5,"Diabetic","No diabetes")) %>% drop_na(`possible diabetes`) %>% 
#   tabyl(`possible diabetes`) %>% 
#   mutate(percent = paste0(round(percent*100,1),"%")) %>%  gt() %>% opt_table_outline() %>% opt_table_lines() %>% 
#   tab_header(title = "Diagnosis of Diabetes at Enrolment")
#   
# ```
# 
# ## Gestational diabetes at ANC 28
# 
# ```{r}
# #| label: tab-diabetesanc28
# #| fig-cap: ""
# #| warning: false
# #| column: body-outset
# #| fig-width: 14
# #| fig-height: 6
# #| echo: false
# 
# Diabetes_data %>% filter(TYPE_VISIT=="ANC-28") %>% 
#   mutate(`Possible GDM` = if_else(BGLUC_PRETEST_MMOLL_LBORRES>=5.1 | BGLUC_ORAL_1HR_MMOLL_LBORRES>=10 | 
#                                     BGLUC_ORAL_2HR_MMOLL_LBORRES>=8.5,"Possible Gestational Diabetes Mellitus","No Gestational
#                                   Diabetes Mellitus")) %>% drop_na(`Possible GDM`) %>% tabyl(`Possible GDM`) %>% 
#   mutate(percent = paste0(round(percent*100,1),"%")) %>%  gt() %>% opt_table_outline() %>% opt_table_lines() %>% 
#   tab_header(title = "Diagnosis of Gestational diabetes at ANC 28")
# :::
```

```{r}
#| label: pocprev
#| fig-cap: "Prevalence of Point of care variables"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 7.5
#| echo: false


# Prevalence of Malaria, HBV & HCV
 # ALL_PRiSMA %>% drop_na(MOMID) %>% filter(!TYPE_VISIT%in%c("Non-scheduled visit",14)) %>% 
 #  filter(MAT_VISIT_MNH04%in%c("Yes, visit conducted in person",NA)) %>% 
 #  filter(MAT_VISIT_MNH12%in%c("Yes, visit conducted in person",NA)) %>% 
 #  select(MOMID,US_GA_WKS_AGE_FTS1_Enrol,TYPE_VISIT,MALARIA_POC_LBORRES,
 #         HIV_POC_LBORRES,SYPH_POC_LBORRES1,HBV_POC_LBORRES,HCV_POC_LBORRES) %>% 
 #  anti_join(ALL_PRiSMA %>% drop_na(MOMID) %>% filter(US_GA_WKS_AGE_FTS1_Enrol>=18,TYPE_VISIT=="ANC-20")) %>% 
 #  group_by(MOMID) %>% mutate(ID = row_number(),hbv_2 = if_else(ID>1,HBV_POC_LBORRES,NA)) %>%
 #  fill(hbv_2,.direction = "up") %>% 
 # # mutate(HBV_POC_LBORRES = if_else(TYPE_VISIT=="Enrollment"&HBV_POC_LBORRES=="Positive"&hbv_2=="Positive",NA,HBV_POC_LBORRES)) %>% 
 #  #View()
 #  #group_by(MOMID,TYPE_VISIT) %>% fill(MALARIA_POC_LBORRES:HCV_POC_LBORRES) %>%
 #  distinct(MOMID,TYPE_VISIT,.keep_all = T) %>% ungroup() %>% 
 #  mutate_at(vars(MALARIA_POC_LBORRES:HCV_POC_LBORRES),~replace(.,.=="N/A",NA)) %>% 
 #  select(TYPE_VISIT,MALARIA_POC_LBORRES,HBV_POC_LBORRES,HCV_POC_LBORRES) %>% 
 #   mutate(HBV_POC_LBORRES = replace(HBV_POC_LBORRES,TYPE_VISIT=="ANC-20",NA),
 #          HCV_POC_LBORRES = replace(HCV_POC_LBORRES,TYPE_VISIT=="ANC-20",NA)) %>% 
 #  
 #  droplevels() %>% 
 #  tbl_summary(by = TYPE_VISIT,missing = "no",
 #              label = list(MALARIA_POC_LBORRES~"Malaria POC",
 #                           #HIV_POC_LBORRES~"HIV POC",
 #                           #SYPH_POC_LBORRES1~"Syphylis POC",
 #                           HBV_POC_LBORRES~"HBV POC",
 #                           HCV_POC_LBORRES~"HCV POC")) %>% bold_labels() %>% 
 # # as_tibble() %>% mutate_at(vars(3:12)~if_else(`**Characteristic**`))
 #  as_gt() %>% opt_table_outline() %>% opt_table_lines() %>%
 #  sub_values(values = c("0 (NA%)","0 (0%)","1 (100%)"),replacement = "") %>% 
 #   opt_vertical_padding(scale = .5) #%>% opt_table_font(font = 12)
   
```

### Distibution of HB Measurements by Gestational Age

```{r}
#| label: fig-hbmeasurements
#| fig-cap: "Distibution of HB Measurements"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 5.2
#| echo: false
#| 
ALL_PRiSMA %>% drop_na(MOMID) %>% select(`POC Hemacue` = HB_POC_LBORRES,`HB CBC` = CBC_HB_LBORRES,`POC Masimo` = SPHB_LBORRES,MOMID,TYPE_VISIT,Ga_visit_days) %>% 
  ggplot(aes(x=Ga_visit_days,y =HB_POC_LBORRES))+
  geom_jitter(aes(x=Ga_visit_days,y =`POC Hemacue`,color = "POC Hemacue"))+
  geom_jitter(aes(x=Ga_visit_days,y =`HB CBC`,color = "HB CBC"))+
  geom_jitter(aes(x=Ga_visit_days,y =`POC Masimo`,color = "POC Masimo"))+
  geom_hline(yintercept = 11,color="black",size =1)+
  labs(x="Gestational Age in Days",
       y="HB values",
      # title = "Distribution of Hb Measurment by GA",
       color = "Hb Measurement") +
  theme_light()+
  theme(plot.title = element_text(hjust = 0.5,size = 17),
        axis.text = element_text(size = 10),
        axis.title =  element_text(size = 12,face = "bold"),
        panel.border = element_rect(colour = "black",linewidth = 1),
        legend.text = element_text(size = 10,colour = "black"),
        #legend.key.size = unit(4,"cm"),
        legend.title = element_blank(),
        legend.position = "bottom")+
  guides(colour=guide_legend(override.aes = list(size=5)))+
  annotate("text",x =160,y=18,label = "Anemia Threshold (Hb < 11)",size = 3.8,color ="darkblue")+
  geom_segment(aes(x=160,y=11,xend=160,yend =16.8),arrow=arrow(length = unit(.2, "cm")),size=1)+
  scale_x_continuous(breaks = seq(0,1000,20))
```

@fig-hbmeasurements shows the distribution of different Hb measurements by gestational ages (days) across different ANC visits.

#### Distribution of Hb Measurment by Gestational (GA)

```{r}
#| label: fig-hbmeasurementfacetwrap
#| fig-cap: "Distibution of HB Measurements"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 5.2
#| echo: false

ALL_PRiSMA %>% drop_na(MOMID) %>% select(`HB POC Hemocue` = HB_POC_LBORRES,`HB CBC` = CBC_HB_LBORRES,`SPHB - POC Masimo` = SPHB_LBORRES,MOMID,TYPE_VISIT,Ga_visit_days) %>% 
   filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC")) %>%
  pivot_longer(cols = c(`HB POC Hemocue`,`HB CBC`,`SPHB - POC Masimo`),values_to = "HB",names_to = "HB_type") %>% 
  ggplot(aes(x=Ga_visit_days,y =HB,color = HB_type))+
  geom_point()+
  # geom_point(aes(x=Ga_visit_days,y =CBC_HB,color = "CBC_HB"))+
  # geom_point(aes(x=Ga_visit_days,y =SPHB,color = "SPHB"))+
  geom_hline(yintercept = 11,color="black",size =1)+
  labs(x="Gestational Age in Days",
       y="HB Measurements",
       title = "Distribution of Hb Measurment by Gestational (GA)",
       color = "Hb Measurement") +
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5,size = 17),
        axis.text = element_text(size = 10,color = "black"),
        axis.title =  element_text(size = 12,face = "bold"),
        panel.border = element_rect(colour = "black",linewidth = 1),
        legend.text = element_text(size = 12,colour = "black"),
        strip.text = element_text(size = 12),
        #legend.key.size = unit(4,"cm"),
        legend.title = element_blank(),
        legend.position = "none")+
  guides(colour=guide_legend(override.aes = list(size=5)))+
  annotate("text",x =160,y=18,label = "Anemia Threshold (Hb < 11 g/dl)",size = 4,color ="darkblue")+
  geom_segment(aes(x=160,y=11,xend=160,yend =16.8),arrow=arrow(length = unit(.2, "cm")),size=1,color="black")+
  scale_x_continuous(limits = c(0,320),breaks = seq(0,1000,20))+
  facet_wrap(~HB_type,nrow = 3)
```

### HB_POC Distributions stratified by study visit

```{r}
#| label: fig-hbvisits
#| fig-cap: "Distibution of HB Measurements"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>% select(HB_POC = HB_POC_LBORRES,CBC_HB = CBC_HB_LBORRES,SPHB = SPHB_LBORRES,MOMID,TYPE_VISIT,Ga_visit_days) %>% filter(complete.cases(HB_POC)) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC")) %>% 
  ggplot(aes(y = HB_POC,color =TYPE_VISIT,fill=TYPE_VISIT)) +
  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, alpha = 0.5) +
  geom_boxplot(width = 0.12, outlier.colour = "darkred", alpha = 0.5) +
  stat_dots(side = "left", justification = 1.1, dotsize = 1) +
  # scale_fill_viridis_d(option = "D",alpha = .5)+
  geom_hline(aes(yintercept = 11))+
  labs(x = NULL, y = NULL,
       title = "Distribution of HB by study visits") +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, color = "black",size = 16),
        axis.title =  element_text( face = "bold", color = "black", size = 25),
        axis.text.y = element_text(size = .1),
        legend.position = "none",
        strip.text = element_text(
          size = 14,face = "bold",colour = "black"),
        axis.text = element_text( face = "bold", color = "black", size = 20)) +
  scale_y_continuous(breaks = seq(0,8000,200)) +
  annotate("text",x =1.2,y=6,label = "(Hb < 11)",size = 4,color ="darkblue")+
  geom_segment(aes(x=1.2,y=11,xend=1.2,yend =8),arrow=arrow(length = unit(.2, "cm")),size=1) +
  coord_flip()+
  facet_wrap(~TYPE_VISIT)
```

# Decimal point choice preference frequencies for MUAC measurements

::: panel-tabset
## JOOTRH

```{r}
#| label: fig-pointjootrh
#| fig-cap: "JOOTRH"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false

Muac_decimals <- Locked_PRISMA %>% drop_na(MUAC_PERES) %>% mutate(muac_point_preference = as.factor(round(MUAC_PERES%%1*10))) #%>% 

Muac_decimals %>%  filter(Scrn_facility == "JOOTRH") %>% 
select(MOMID,TYPE_VISIT,MUAC_PERES,muac_point_preference,Scrn_facility) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
group_by(TYPE_VISIT) %>% count(muac_point_preference) %>%  
ggplot(aes(x=muac_point_preference,y = n,color=TYPE_VISIT)) +
geom_col(width = .4,fill = "#FCCB80EC",color="gray52",alpha =.5)+
labs(x="MUAC Point preferences",y = "Frequencies",title = "JOOTRH -- Distribution of MUAC Point preferences")+
theme_pubclean() +
theme(axis.text = element_text(size = 10,colour = "darkblue"),
plot.title = element_text(hjust = 0.3),
strip.text = element_text(size = 10,color="black"))+
facet_wrap(vars(TYPE_VISIT),scales = "free")
```

## KCRH

```{r}
#| label: fig-pointkcrh
#| fig-cap: "KCRH"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false

  Muac_decimals %>% filter(Scrn_facility == "KCRH") %>% 
  select(MOMID,TYPE_VISIT,MUAC_PERES,muac_point_preference,Scrn_facility) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  group_by(TYPE_VISIT) %>% count(muac_point_preference) %>%  
  ggplot(aes(x=muac_point_preference,y = n,color=TYPE_VISIT)) +
  geom_col(width = .4,fill = "#56B4E9",color="gray52",alpha =.5)+
  labs(x="MUAC Point preferences",y = "Frequencies",title = "KCRH -- Distribution of MUAC Point preferences")+
  theme(axis.text = element_text(size = 8,colour = "darkblue"))+
 # scale_fill_discrete(typ)
  theme_pubclean() +
   theme(axis.text = element_text(size = 10,colour = "darkblue"),
        plot.title = element_text(hjust = 0.3),
        strip.text = element_text(size = 10,color="black"))+
  facet_wrap(vars(TYPE_VISIT),scales = "free")
```

## KUOYO

```{r}
#| label: fig-pointkuoyo
#| fig-cap: "KUOYO"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false


  Muac_decimals %>% filter(Scrn_facility == "KUOYO") %>% 
  select(MOMID,TYPE_VISIT,MUAC_PERES,muac_point_preference,Scrn_facility) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  group_by(TYPE_VISIT) %>% count(muac_point_preference) %>%  
  ggplot(width = .25,aes(x=muac_point_preference,y = n)) +
  geom_col(fill = "#009E73",color="gray52",alpha =.5)+
  labs(x="MUAC Point preferences",y = "Frequencies",title = "KUOYO -- Distribution of MUAC Point preferences")+
    theme_pubr() +
 # scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")) +
   theme(axis.text = element_text(size = 10,colour = "darkblue"),
        plot.title = element_text(hjust = 0.3),
        strip.text = element_text(size = 10,color="black"))+
  facet_wrap(vars(TYPE_VISIT),scales = "free")
```

## Lumumba

```{r}
#| label: fig-pointLumumba
#| fig-cap: "Lumumba"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false


 Muac_decimals %>%  filter(Scrn_facility == "Lumumba") %>% 
  select(MOMID,TYPE_VISIT,MUAC_PERES,muac_point_preference,Scrn_facility) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  group_by(TYPE_VISIT) %>% count(muac_point_preference) %>%  
  ggplot(aes(x=muac_point_preference,y = n,color=TYPE_VISIT)) +
  geom_col(width = .4,fill = "#F0E442",color="gray52",alpha =.5)+
  labs(x="MUAC Point preferences",y = "Frequencies",title = "Lumumba -- Distribution of MUAC Point preferences")+
  theme(axis.text = element_text(size = 8,colour = "darkblue"))+
  theme_pubr() +
     theme(axis.text = element_text(size = 10,colour = "darkblue"),
        plot.title = element_text(hjust = 0.3),
        strip.text = element_text(size = 10,color="black"))+
  facet_wrap(vars(TYPE_VISIT),scales = "free")
```

## Siaya

```{r}
#| label: fig-pointSiaya
#| fig-cap: "Siaya"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 6.4
#| echo: false


  Muac_decimals %>% filter(Scrn_facility == "Siaya") %>% 
  select(MOMID,TYPE_VISIT,MUAC_PERES,muac_point_preference,Scrn_facility) %>% filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  group_by(TYPE_VISIT) %>% count(muac_point_preference) %>%  
  ggplot(aes(x=muac_point_preference,y = n,color=TYPE_VISIT)) +
  geom_col(width = .4,fill = "#0072B2",color="gray52",alpha =.5)+
  labs(x="MUAC Point preferences",y = "Frequencies",title = "Siaya -- Distribution of MUAC Point preferences")+
  theme(axis.text = element_text(size = 10,colour = "darkblue"))+
  theme_classic() +
       theme(axis.text = element_text(size = 10,colour = "darkblue"),
        plot.title = element_text(hjust = 0.3),
        strip.background = element_rect(color = "gray", linewidth = .4),
        strip.text = element_text(size = 10,color="black"))+
  facet_wrap(vars(TYPE_VISIT),scales = "free")


```
:::

# Distribution of Weight gain in Pregnancy

**Note:** The weight gain in the graph has been arrived at by comparing the weights captured at different study time points in relation to the weight recorded at enrollment.

```{r}
#| label: fig-weightloss
#| fig-cap: "Weight loss in pregnancy"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 5.8
#| echo: false

weight_loss <- Locked_PRISMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,WEIGHT_PERES,BMI_Levels,Ga_visit_weeks,Ga_visit_days) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC")) %>% 
  drop_na(WEIGHT_PERES) %>% arrange(MOMID,TYPE_VISIT) %>% group_by(MOMID) %>% mutate(weight_gain = WEIGHT_PERES - first(WEIGHT_PERES)) #%>% View()

# Query
# weight_loss %>% filter(weight_gain<0) %>%  left_join(Locked_PRISMA %>% select(MOMID,TYPE_VISIT,Weight_Enrolment=WEIGHT_PERES) %>% filter(TYPE_VISIT == "Enrollment") %>% select(-TYPE_VISIT)) %>% 
#   select(MOMID,TYPE_VISIT,Weight_Enrolment,WEIGHT_PERES,weight_gain,everything()) %>% View()


weight_loss  %>% ungroup() %>% filter(weight_gain!=0) %>% ggplot(aes(x=Ga_visit_days,y=weight_gain)) +
geom_jitter(color = "#B3B3B3") +
  labs(x="Gestational Age (Days)", y = "Weight gain | loss",color = "BMI Levels:") +
  theme_light() +
  theme(axis.text = element_text(colour = "black",size = 12),
        axis.title = element_text(colour = "black",face = "bold",size = 12),
        legend.position = "bottom",
        legend.text = element_text(size = 12),
        legend.key.width = unit(1.5,"cm"),
        legend.key.size = unit(1.5,"cm"),) +
  geom_smooth(aes(x=Ga_visit_days,y=weight_gain,color = BMI_Levels),se=F,size =1.4,alpha =1)+
  geom_hline(yintercept = 0,color = "gray1")+
  scale_x_continuous(breaks = seq(0,300,10)) +
   scale_y_continuous(breaks = seq(-60,60,10)) 
```

# Distribution of MUAC gain/loss in Pregnancy

```{r}
#| label: fig-muacloss
#| fig-cap: "MUAC loss in pregnancy"
#| warning: false
#| column: screen-inset-right
#| fig-width: 14
#| fig-height: 5.8
#| echo: false
muac_loss <- Locked_PRISMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,MUAC_levels,
                                            MUAC_PERES,Ga_visit_weeks,Ga_visit_days) %>%
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC")) %>%
  drop_na(MUAC_PERES) %>% arrange(MOMID,TYPE_VISIT) %>%  group_by(MOMID) %>% mutate(muac_gain = MUAC_PERES - first(MUAC_PERES)) 

muac_loss  %>% ungroup() %>% filter(muac_gain!=0) %>% ggplot(aes(x=Ga_visit_days,y=muac_gain)) +
geom_jitter(color = "#B3B3B3") +
  labs(x="Gestational Age (Days)", y = "MUAC gain | loss",color = "MUAC Levels:") +
  theme_ipsum_pub() +
  theme(axis.text = element_text(colour = "darkblue",size = 12),
        axis.title = element_text(colour = "black",face = "bold",size = 19),
        legend.position = "bottom",
        legend.text = element_text(size = 12),
        legend.key.width = unit(1.5,"cm"),
        legend.key.size = unit(1.5,"cm"),) +
  #geom_smooth(aes(x=Ga_visit_days,y=muac_gain,color = MUAC_levels),se=F,size =1.4,alpha =1)+
  geom_hline(yintercept = 0,color = "red",size = 1)+
  scale_x_continuous(breaks = seq(0,300,10)) +
   scale_y_continuous(breaks = seq(-60,60,2)) 
```

# Maternal Age

::: panel-tabset
## Maternal age categories

```{r}
#| label: fig-agecategories
#| fig-cap: "Maternal Age"
#| warning: false
#| fig-align: center
#| fig-width: 10
#| fig-height: 5.2
#| echo: false
Locked_PRISMA %>% select(MOMID,TYPE_VISIT,Age_categories) %>% drop_na(Age_categories) %>% distinct(MOMID,.keep_all = T) %>% 
  sjPlot::plot_frq(Age_categories,type = "bar",
                   geom.colors = "khaki",
                   ) +
                   #expand.grid = T) +
                   theme_light() +
 # scale_fill_brewer(palette = "set1")+
                     theme(axis.text = element_text(colour = "black",size = 14),
                           axis.title = element_text(colour = "black",face = "bold",size = 16),)
```

## Age distribution - Histogram

```{r}
#| label: fig-maternalage
#| fig-cap: "Maternal Age"
#| warning: false
#| fig-align: center
#| fig-width: 10
#| fig-height: 5.2
#| echo: false
ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% select(BRTHDAT,CON_DSSTDAT,ESTIMATED_AGE) %>%
  mutate(maternal_age = trunc(as.numeric((CON_DSSTDAT - BRTHDAT)/365)),
         maternal_age = if_else(is.na(maternal_age),as.double(ESTIMATED_AGE),maternal_age)) %>%
  gghistostats(x = maternal_age,normal.curve = T, type = "nonparametric",
               normal.curve.args = list(linewidth=.7,color=c("#5D478B")),
               messages=F,
               xlab = "Maternal Age",
               #ylab.left = "Frequencies",
               # title = "Distribution of Maternal Ages at Enrollment",
               results.subtitle = F,
               bar.fill="grey50")+
  theme(plot.title = element_text(hjust = 0.5,size = 20),
        axis.title = element_text(colour = "black",size = 20),
        axis.title.x = element_text(colour = "black",size = 16),
        axis.text = element_text(colour = "black",size = 18),
        axis.title.y.right  = element_text(colour = "black",size = 18))
```
:::

## Relationship Between Birthweight and Maternal BMI

::: panel-tabset
### Birthweight Vs BMI at Enrolment

```{r}
#| label: fig-BMI_enrol
#| fig-cap: "Bithweight Vs Maternal BMI at Enrolment"
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6
#| echo: false

ggMarginal(ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,INFANTID_INF1,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% 
  mutate(inf_weight = if_else(is.na(BW_FAORRES),BW_FAORRES_REPORT,BW_FAORRES),
         inf_weight = round(inf_weight/1000,2)) %>% group_by(MOMID) %>% fill(inf_weight,.direction = "updown") %>% ungroup() %>% 
  filter(TYPE_VISIT=="Enrollment") %>%  mutate(BMI = round(WEIGHT_PERES/(HEIGHT_PERES/100)^2,1),Birthweight = inf_weight) %>% filter(complete.cases(BMI,Birthweight))  %>% 
             ggplot(aes(y = Birthweight, x = BMI)) +
             geom_point()+
             geom_smooth(method = lm,color = "darkred")+
             stat_cor(label.x = 21,label.y = 1.5, size = 4,color = "darkred")+
             stat_regline_equation(label.x = 21,label.y = 1.2, size = 4, color = "blue") +
             theme_light() + 
             labs(title = "Relationship between Birthweight and Maternal BMI at enrolment",
                  y = "Birthweight (Kg)",
                  x = " Body Mass Index (BMI)") +
             scale_y_continuous(breaks = seq(0,6,.5)) +
             scale_x_continuous(breaks = seq(0,50,2)) +
             theme(plot.title = element_text(hjust = 0.5, size = 14,color = "darkblue"),
                   plot.subtitle = element_text(size = 16),
                   axis.text = element_text(size = 12,face = "bold") ,
                   axis.title = element_text(face = "bold",size = 14, color = "darkblue"),
                   panel.border = element_rect(colour = "black", linewidth = 1.5)), type = "densigram",fill = "#F5FABE")

```

### Birthweight Vs BMI at Delivery

```{r}
#| label: fig-BMI
#| fig-cap: "Bithweight Vs Maternal BMI at Delivery"
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6
#| echo: false
ggMarginal(ALL_PRiSMA %>% select(INFANTID_INF1,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES,TYPE_VISIT) %>% 
             mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% filter(complete.cases(BW_FAORRES_REPORT)) %>% 
             filter(BW_FAORRES_REPORT>0) %>% 
             mutate(Birthweight = round(BW_FAORRES_REPORT/1000,2),
                    BMI = round(WEIGHT_PERES/(HEIGHT_PERES/100)^2,1)) %>% filter(complete.cases(BMI,Birthweight)) %>% 
             ggplot(aes(y = Birthweight, x = BMI)) +
             geom_point()+
             geom_smooth(method = lm,color = c("#8A2BE2"))+
             stat_cor(label.x = 21,label.y = 1.5, size = 4,color = "darkred")+
             stat_regline_equation(label.x = 21,label.y = 1.2, size = 4, color = "blue") +
             theme_light() + 
             labs(title = "Relationship between Birthweight and Maternal BMI at delivery",
                  y = "Birthweight (Kg)",
                  x = " Body Mass Index (BMI)") +
             scale_y_continuous(breaks = seq(0,6,.5)) +
             scale_x_continuous(breaks = seq(0,50,2)) +
             theme(plot.title = element_text(hjust = 0.5, size = 14,color = "darkblue"),
                   plot.subtitle = element_text(size = 16),
                   axis.text = element_text(size = 12,face = "bold") ,
                   axis.title = element_text(face = "bold",size = 14, color = "darkblue"),
                   panel.border = element_rect(colour = "black", linewidth = 1.5)), type = "densigram",fill = c("#FFA07A"))
```
:::

## Relationship Between Birthweight and MUAC

::: panel-tabset
### Birthweight vs MUAC at Enrolment

```{r}
#| label: fig-muac_enrol
#| fig-cap: "Bithweight Vs MUAC at Delivery"
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6
#| echo: false
ggMarginal(ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,INFANTID_INF1,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES,MUAC_PERES) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% 
  mutate(inf_weight = if_else(is.na(BW_FAORRES),BW_FAORRES_REPORT,BW_FAORRES),
         inf_weight = round(inf_weight/1000,2)) %>% group_by(MOMID) %>% fill(inf_weight,.direction = "updown") %>% ungroup() %>% 
    mutate(Birthweight = inf_weight) %>% 
  filter(TYPE_VISIT=="Enrollment") %>% filter(complete.cases(MUAC_PERES,Birthweight)) %>% 
             ggplot(aes(y = Birthweight, x = MUAC_PERES)) +
             geom_point()+
             geom_smooth(method = lm,color = c("#8A2BE2"))+
             stat_cor(label.x = 21,label.y = 1.5, size = 4,color = "darkred")+
             stat_regline_equation(label.x = 21,label.y = 1.2, size = 4, color = "blue") +
             theme_light() + 
             labs(#title = "Relationship between Birthweight and Maternal BMI at delivery",
                  y = "Birthweight (Kg)",
                  x = " MUAC") +
             scale_y_continuous(breaks = seq(0,6,.5)) +
             scale_x_continuous(breaks = seq(0,50,2)) +
             theme(plot.title = element_text(hjust = 0.5, size = 14,color = "darkblue"),
                   plot.subtitle = element_text(size = 16),
                   axis.text = element_text(size = 12,face = "bold") ,
                   axis.title = element_text(face = "bold",size = 14, color = "darkblue"),
                   panel.border = element_rect(colour = "black", linewidth = 1.5)), type = "densigram",fill = c("#F5ABAB"))


```

### Birthweight vs MUAC at Trimester III

```{r}
#| label: fig-muac_III
#| fig-cap: "Bithweight Vs MUAC at Trimester III"
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 6
#| echo: false
ggMarginal(ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,INFANTID_INF1,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES,MUAC_PERES) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% 
  mutate(inf_weight = if_else(is.na(BW_FAORRES),BW_FAORRES_REPORT,BW_FAORRES),
         inf_weight = round(inf_weight/1000,2)) %>% group_by(MOMID) %>% fill(inf_weight,.direction = "updown") %>% ungroup() %>% 
    mutate(Birthweight = inf_weight) %>% 
  filter(TYPE_VISIT=="ANC-36") %>% filter(complete.cases(MUAC_PERES,Birthweight)) %>%
             ggplot(aes(y = Birthweight, x = MUAC_PERES)) +
             geom_point()+
             geom_smooth(method = lm,color = c("#FF8C00"))+
             stat_cor(label.x = 21,label.y = 1.5, size = 4,color = "darkred")+
             stat_regline_equation(label.x = 21,label.y = 1.2, size = 4, color = "blue") +
             theme_light() + 
             labs(title = "Relationship between Birthweight and MUAC at Trimester III (34<=GA<=38) weeks",
                  y = "Birthweight (Kg)",
                  x = " MUAC") +
             scale_y_continuous(breaks = seq(0,6,.5)) +
             scale_x_continuous(breaks = seq(0,50,2)) +
             theme(plot.title = element_text(hjust = 0.5, size = 14,color = "darkblue"),
                   plot.subtitle = element_text(size = 16),
                   axis.text = element_text(size = 12,face = "bold") ,
                   axis.title = element_text(face = "bold",size = 14, color = "darkblue"),
                   panel.border = element_rect(colour = "black", linewidth = 1.5)), type = "densigram",fill = c("#FF8C00"))

```
:::

## Relationship Between BMI and MUAC

```{r}
#| label: fig-bmimuac
#| fig-cap: "Relationship between BMI and MUAC"
#| warning: false
#| column: body-outset
#| fig-width: 11
#| fig-height: 5.4
#| echo: false
ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,INFANTID_INF1,BW_FAORRES_REPORT,BW_FAORRES,BW_EST_FAORRES,WEIGHT_PERES,HEIGHT_PERES,TYPE_VISIT,MUAC_PERES) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36","IPC")) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% 
  mutate(Birthweight = round(BW_FAORRES_REPORT/1000,2),
         BMI = round(WEIGHT_PERES/(HEIGHT_PERES/100)^2,1))  %>% 
  ggplot(aes(x=MUAC_PERES,y=BMI,color=TYPE_VISIT))+
  geom_jitter() +
  labs(x="MUAC",#title = "Scatter plot of BMI and MUAC"
       )+
  geom_smooth(method = "lm",formula = y~x,size = .8,color = "blue")+
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size = 16,color = "darkblue"),
        plot.subtitle = element_text(size = 16),
        legend.position = "none",
        strip.text = element_text(size = 12,color = "black"),
        axis.text = element_text(size = 11) ,
        axis.title = element_text(face = "bold",size = 12, color = "darkblue"))+
  stat_cor(label.x = 22,label.y = 45,size=4,color="blue",r.accuracy = 0.01,p.accuracy = 0.001)+
  stat_regline_equation(label.x = 22,label.y = 41,size=4,color="black")+
  facet_wrap(~TYPE_VISIT)
```

## Distribution of MUAC & BMI across ANC Visits

```{r}
#| label: tab-BMImuactable
#| fig-cap: "Distribution of MUAC & BMI across ANC Visits"
#| warning: false
#| column: screen-inset-right
#| fig-width: 12
#| fig-height: 6
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>% select(MOMID,TYPE_VISIT,MUAC_PERES,HEIGHT_PERES,WEIGHT_PERES,MAT_VISIT_MNH04) %>%  
  filter(MAT_VISIT_MNH04=="Yes, visit conducted in person") %>% select(-MAT_VISIT_MNH04) %>% 
  filter(TYPE_VISIT %in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>% 
    mutate(HEIGHT_PERES_sqrd = (HEIGHT_PERES/100)^2,
    bmi_peres = round(WEIGHT_PERES/HEIGHT_PERES_sqrd,1)) %>% clean_names() %>% 
 mutate(MUAC=factor(case_when(muac_peres<23~2,
                        muac_peres>=23 & muac_peres<33~1,
                        muac_peres>=33~3),
              levels = c(1,2,3),
              labels = c("Normal (23-32cm)","Low (<23cm)","High(>=33cm)")),
  
  BMI=factor(case_when(bmi_peres<18.5~2,
                       bmi_peres>=18.5 & bmi_peres<30~1,
                       bmi_peres>=30~3),
             levels = c(1,2,3),
             labels = c("Normal (18.5-29kg/m2)","Low (<18.5kg/m2)","High (>=30kg/m2)"))) %>% 
  select(type_visit,MUAC,BMI) %>% droplevels() %>% 
  tbl_summary(by =type_visit,missing = "no",digits = everything()~c(0,1)) %>% bold_labels() %>% italicize_levels() %>% 
  as_gt() %>% opt_row_striping() %>% opt_table_outline() %>% opt_vertical_padding(scale = .5)
```

## MUAC progression in pregnancy

```{r}
#| label: fig-muacalluv
#| fig-cap: "Anemia progression"
#| warning: false
#| column: body-outset
#| fig-width: 16
#| fig-height: 7
#| echo: false


alluvialmuac<- Locked_PRISMA %>% drop_na(MOMID) %>% filter(TYPE_VISIT %in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>% 
  select(MOMID,TYPE_VISIT,MUAC_levels) %>% 
  distinct() %>%  
  pivot_wider(id_cols = MOMID,names_from = TYPE_VISIT,values_from = MUAC_levels) %>% select(-MOMID) %>% 

 mutate_all(~fct_relevel(.,"Low (<23cm)","Normal (23-32cm)","High(>=33cm)"))

alluvialmuac_dta <-  alluvialmuac %>% make_long(names(alluvialmuac)) %>% 
  mutate_at(vars(contains("node")),~fct_relevel(.x,"Low (<23cm)","Normal (23-32cm)","High(>=33cm)")) %>% 
mutate_all(~fct_explicit_na(.x))

muac_tally <- alluvialmuac_dta %>% group_by(node,x) %>% tally() %>% ungroup() %>% group_by(x) %>% mutate(prev = round((n/sum(n))*100,1)) #%>% View()

alluvialmuac_dta %>% left_join(muac_tally) %>% 
 ggplot(aes(x=x,next_x = next_x,
                            node = node,
                            next_node = next_node,
                            #label = node,
             label = paste0( prev,"%"), 
                            fill = factor(node))) +
  geom_sankey(flow.alpha = .8,
              node.color = "gray40",
              smooth = 5,
              na.rm = T,
#color = "gray85",
              show.legend = T) +
  geom_sankey_text(color = "gray25",vjust = -.2,hjust = -.5)+
theme_minimal() +
  #scale_fill_viridis_d(option = "inferno")
  scale_fill_manual(name = "Anemia levels",values = c("orange", "palegreen", "lightsalmon","grey90")) +
  #scale_color_manual(values = c("darkgreen", "goldenrod", "darksalmon", "firebrick")) +
  theme(axis.ticks = element_blank(),
        axis.title = element_blank(),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 12,face = "italic"),
        axis.text = element_text(size = 12,face = "italic"),
        axis.text.y = element_blank()) 

```

## Relationship between Systolic and Diastolic Blood Pressure

```{r}
#| label: fig-systolicDiastolic
#| fig-cap: "Relationship between Systolic and Diastolic Blood Pressure"
#| warning: false
#| column: body-outset
#| fig-width: 11
#| fig-height: 5.4
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,TYPE_VISIT,BP_DIA_VSORRES_1,BP_DIA_VSORRES_2,BP_DIA_VSORRES_3,
                                        BP_SYS_VSORRES_1,BP_SYS_VSORRES_2,BP_SYS_VSORRES_3,
                                        US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,visit_date,CON_DSSTDAT) %>% 
  mutate(`DIASTOLIC Bp` = round((BP_DIA_VSORRES_1+BP_SYS_VSORRES_2+BP_DIA_VSORRES_3)/3),
         `SYSTOLIC Bp` = round((BP_SYS_VSORRES_1+BP_DIA_VSORRES_2+BP_SYS_VSORRES_3)/3)) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-20","ANC-28","ANC-32","ANC-36")) %>% 
  mutate_if(is.numeric,~replace(.x, .x == -5, NA)) %>% 
  ggplot(aes(x=`DIASTOLIC Bp`,y=`SYSTOLIC Bp`,color=TYPE_VISIT))+
  geom_jitter() +
  #labs(title = "Scatter plot of Systolic against Diastolic")+
  geom_smooth(method = "lm",formula = y~x,color ="blue")+
  theme_bw()+
  scale_x_continuous(breaks = seq(50,200,20))+
  theme(plot.title = element_text(hjust = 0.5, size = 16,color = "darkblue"),
        plot.subtitle = element_text(size = 16),
        legend.position = "none",
        strip.text = element_text(size = 12,color = "black"),
        axis.text = element_text(size = 11) ,
        axis.title = element_text(face = "bold",size = 10, color = "darkblue"))+
  stat_cor(label.x = 30,label.y = 120,size=4,color="blue",r.accuracy = 0.01,p.accuracy = 0.001)+
  stat_regline_equation(label.x = 30,label.y = 110,size=4,color="black")+
  facet_wrap(~TYPE_VISIT)
```

# Vital Signs

### "Blood Pressure (BP) with High BP threshold by Gestational Age (GA)

```{r}
#| label: fig-Bpmeasurements
#| fig-cap: "Blood Pressure (BP) with High BP threshold by Gestational Age (GA)"
#| warning: false
#| column: body-outset
#| fig-width: 10
#| fig-height: 5.2
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,TYPE_VISIT,BP_DIA_VSORRES_1,BP_DIA_VSORRES_2,BP_DIA_VSORRES_3,
                     BP_SYS_VSORRES_1,BP_SYS_VSORRES_2,BP_SYS_VSORRES_3,
                     US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,visit_date,CON_DSSTDAT) %>% 
  mutate(avrg_diastolic = round((BP_DIA_VSORRES_1+BP_SYS_VSORRES_2+BP_DIA_VSORRES_3)/3),
         avrg_systolic = round((BP_SYS_VSORRES_1+BP_DIA_VSORRES_2+BP_SYS_VSORRES_3)/3),
               Ga_enrollment = as.numeric(((US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol))/7,
             Ga_dys_enrol = (US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol,
             #days_to_visit = visit_date -CON_DSSTDAT,
             #Ga_visit = (Ga_dys_enrol + (ANT_PEDAT - CON_DSSTDAT))/7,
             Ga_visit = (as.numeric((Ga_dys_enrol + (visit_date - CON_DSSTDAT)))/7)) %>% #drop_na(Ga_visit,TEMP_VSORRES) %>% 
  ggplot(aes(x=Ga_visit,y=avrg_diastolic))+
  geom_point(aes(x=Ga_visit,y=avrg_diastolic,color ='Diastolic'),alpha=.5)+
   geom_point(aes(x=Ga_visit,y=avrg_systolic,color='Systolic'),alpha=.5)+
  geom_hline(yintercept = 90,color = "red",size =1,linetype ="dashed") +
    geom_hline(yintercept = 140,color="blue",size =1,linetype ="dashed")+
  labs(x="GA in weeks", y ="Blood Pressure",
  #title = "Blood Pressure (BP) with High BP threshold by Gestational Age (GA)",
  color = "Blood pressure") +
  theme_light()+
  scale_x_continuous(breaks = seq(0,100,4))+
  scale_y_continuous(breaks = seq(0,300,10))+
  scale_color_manual(name = 'Blood pressure',
                     breaks =c('Diastolic','Systolic'),
                     values = c('Diastolic'="red",'Systolic'="blue")) +
guides(colour=guide_legend(override.aes = list(size=5)))+
  theme(axis.text = element_text(size = 10,face = "bold"),
        axis.title = element_text(size = 14,face = "bold",colour = "darkblue"),
        plot.title =  element_text(size = 18,hjust = 0.5,face = "bold"),
        legend.text = element_text(size = 14,face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank())
```

### Blood Pressure (BP) with 95% Confidence Band by Gestational Age(GA)

```{r}
#| label: fig-Bp
#| fig-cap: "Blood Pressure (BP) with 95% Confidence Band by Gestational Age (GA)"
#| warning: false
#| column: body-outset
#| fig-width: 11
#| fig-height: 4.2
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,TYPE_VISIT,BP_DIA_VSORRES_1,BP_DIA_VSORRES_2,BP_DIA_VSORRES_3,
                     BP_SYS_VSORRES_1,BP_SYS_VSORRES_2,BP_SYS_VSORRES_3,
                     US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,visit_date,CON_DSSTDAT) %>% 
  mutate(avrg_diastolic = round((BP_DIA_VSORRES_1+BP_SYS_VSORRES_2+BP_DIA_VSORRES_3)/3),
         avrg_systolic = round((BP_SYS_VSORRES_1+BP_DIA_VSORRES_2+BP_SYS_VSORRES_3)/3),
               Ga_enrollment = as.numeric(((US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol))/7,
             Ga_dys_enrol = (US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol,
             #days_to_visit = visit_date -CON_DSSTDAT,
             #Ga_visit = (Ga_dys_enrol + (ANT_PEDAT - CON_DSSTDAT))/7,
             Ga_visit = (as.numeric((Ga_dys_enrol + (visit_date - CON_DSSTDAT)))/7)) %>% #drop_na(Ga_visit,TEMP_VSORRES) %>% 
  ggplot(aes(x=Ga_visit,y=avrg_diastolic))+
  geom_point(aes(x=Ga_visit,y=avrg_diastolic,color ='Diastolic'),alpha=.5)+
   geom_point(aes(x=Ga_visit,y=avrg_systolic,color='Systolic'),alpha=.5)+
    geom_smooth(aes(x=Ga_visit,y=avrg_diastolic),color ="red")+
  geom_smooth(aes(x=Ga_visit,y=avrg_systolic),color ="blue")+
  #geom_hline(yintercept = 90,color = "red",size =1,linetype ="dashed") +
#    geom_hline(yintercept = 140,color="blue",size =1,linetype ="dashed")+
  labs(x="GA in weeks", y ="Blood Pressure",
  #title = "Blood Pressure (BP) with 95% Confidence Band by Gestational Age (GA)",
  color = "Blood pressure") +
  theme_light()+
  scale_x_continuous(breaks = seq(0,100,4))+
  scale_y_continuous(breaks = seq(0,300,10))+
  scale_color_manual(name = 'Blood pressure',
                     breaks =c('Diastolic','Systolic'),
                     values = c('Diastolic'="red",'Systolic'="blue")) +
guides(colour=guide_legend(override.aes = list(size=5)))+
  theme(axis.text = element_text(size = 10,face = "bold"),
        axis.title = element_text(size = 14,face = "bold",colour = "darkblue"),
        plot.title =  element_text(size = 18,hjust = 0.5,face = "bold"),
        legend.text = element_text(size = 16,face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank())
```

### Blood Pressure (BP) with 95% Confidence Band by Gestational Age (GA)

```{r}
#| label: fig-Bpvalues
#| fig-cap: "Blood Pressure (BP) with 95% Confidence Band by Gestational Age (GA)"
#| warning: false
#| column: body-outset
#| fig-width: 12
#| fig-height: 5.2
#| echo: false
ALL_PRiSMA %>% drop_na(MOMID) %>%  select(MOMID,TYPE_VISIT,BP_DIA_VSORRES_1,BP_DIA_VSORRES_2,BP_DIA_VSORRES_3,
                     BP_SYS_VSORRES_1,BP_SYS_VSORRES_2,BP_SYS_VSORRES_3,
                     US_GA_WKS_AGE_FTS1_Enrol,US_GA_DAYS_AGE_FTS1_Enrol,visit_date,CON_DSSTDAT) %>% 
  mutate(avrg_diastolic = round((BP_DIA_VSORRES_1+BP_SYS_VSORRES_2+BP_DIA_VSORRES_3)/3),
         avrg_systolic = round((BP_SYS_VSORRES_1+BP_DIA_VSORRES_2+BP_SYS_VSORRES_3)/3),
               Ga_enrollment = as.numeric(((US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol))/7,
             Ga_dys_enrol = (US_GA_WKS_AGE_FTS1_Enrol*7) + US_GA_DAYS_AGE_FTS1_Enrol,
             #days_to_visit = visit_date -CON_DSSTDAT,
             #Ga_visit = (Ga_dys_enrol + (ANT_PEDAT - CON_DSSTDAT))/7,
             Ga_visit = (as.numeric((Ga_dys_enrol + (visit_date - CON_DSSTDAT)))/7)) %>% #drop_na(Ga_visit,TEMP_VSORRES) %>% 
  ggplot(aes(x=Ga_visit,y=avrg_diastolic))+
  #geom_point(aes(x=Ga_visit,y=avrg_diastolic,color ='Diastolic'))+
   #geom_point(aes(x=Ga_visit,y=avrg_systolic,color='Systolic'))+
    geom_smooth(aes(x=Ga_visit,y=avrg_diastolic),color ="red")+
  geom_smooth(aes(x=Ga_visit,y=avrg_systolic),color ="blue")+
  #geom_hline(yintercept = 90,color = "red",size =1,linetype ="dashed") +
#    geom_hline(yintercept = 140,color="blue",size =1,linetype ="dashed")+
  labs(x="GA in weeks", y ="Blood Pressure",
  #title = "Blood Pressure (BP) with 95% Confidence Band by Gestational Age (GA)",
  color = "Blood pressure") +
  theme_light()+
  scale_x_continuous(breaks = seq(0,100,4))+
  scale_y_continuous(breaks = seq(0,300,5))+
  scale_color_manual(name = 'Blood pressure',
                     breaks =c('Diastolic','Systolic'),
                     values = c('Diastolic'="red",'Systolic'="blue")) +
guides(colour=guide_legend(override.aes = list(size=5)))+
  theme(axis.text = element_text(size = 10,face = "bold"),
        axis.title = element_text(size = 14,face = "bold",colour = "darkblue"),
        plot.title =  element_text(size = 18,hjust = 0.5,face = "bold"),
        legend.text = element_text(size = 16,face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank())
```

# Mapping out Extreme values.

### Difference between Hb POC & HB CBC

```{r}
#| label: fig-hbdiff
#| fig-cap: Display of HB difference between HB_POC & HB CBC 
#| warning: false
#| fig-align: center
#| fig-width: 12
#| fig-height: 8
#| echo: false
#                      MAPPING OUT EXTREME VALUES

# Difference between Hb POc & HB CBC

gt(ALL_PRiSMA %>% drop_na(MOMID) %>% 
     filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% labelled::remove_var_label() %>% 
     select(MOMID,TYPE_VISIT,POC_Hemocue = HB_POC_LBORRES,CBC = CBC_HB_LBORRES) %>% 
     filter(complete.cases(CBC,POC_Hemocue)) %>% mutate(Hb_difference = abs(POC_Hemocue - CBC)) %>% 
     set_variable_labels(Hb_difference="HB Difference") %>% 
     filter(Hb_difference>=6.0) %>% arrange(desc(Hb_difference))) %>% 
  opt_table_lines() %>% tab_style(style = cell_text(weight = "bold"),
                                  locations = cells_column_labels()) %>% 
  opt_row_striping() %>% 
  tab_options(table.width = pct(55)) %>% opt_vertical_padding(scale = .5)
```

### CBC distributions

```{r}
#| label: fig-cbcvars
#| fig-cap: "Visualization of CBC components"
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 7
#| echo: false

cbc_vars <- ALL_PRiSMA %>% select(MOMID,CON_DSSTDAT,TYPE_VISIT,contains("cbc")) %>% select_if(is.numeric) %>% select(-1)
cbc_LBORRES <- ALL_PRiSMA %>% select(MOMID, TYPE_VISIT,colnames(cbc_vars)) %>%
  pivot_longer(cols = 3:colnames(cbc_vars)[19],names_to = "CBC",values_to = "CBC_measurement") %>% 
  filter(complete.cases(CBC_measurement)) 

#extreme values
extreme1 <- cbc_LBORRES %>% filter(CBC%in%c(colnames(cbc_vars)[1:10])) %>% group_by(CBC,TYPE_VISIT) %>%  rstatix::identify_outliers(CBC_measurement) %>% ungroup() %>% filter(is.extreme == TRUE) #%>% View()

# 1. CBC distributions

cbc_LBORRES %>% filter(CBC%in%c(colnames(cbc_vars)[1:10])) %>% #select(1,2,11,12) %>%  View()
  ggplot(aes(x = CBC, y = CBC_measurement,fill = TYPE_VISIT)) +
  #stat_halfeye(adjust = 0.5, justification = -0.1, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = 1, outlier.colour = "black", alpha = 1,color="black",outlier.shape =16, outlier.size = 1.9,outlier.alpha = 1) +
  #stat_dots(side = "right", justification = -0.1, dotsize = 10) +
  #geom_text(aes(label = MOMID),data = extreme1,angle = 40, vjust = 0,size = 4) +
  labs(x = "", y = "",
       #title = "Distribution of CBC measurement",
       color = "Type of Visit") +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 20),
        axis.text = element_text(color = "black", size = 11,face = "italic"),
        panel.border = element_rect(colour = "black",linewidth = 1),
        legend.position = "bottom",
        legend.text = element_text( face = "italic", color = "black", size = 14),
        legend.title = element_blank()) +
  scale_y_continuous(breaks = seq(0,200,10)) +
  coord_flip()
```

### Distribution of CBC measurement

```{r}
#| label: fig-cbcvarscont
#| fig-cap: "Visualization of CBC components cont..."
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 7
#| echo: false

# 2. CBC distributions

cbc_LBORRES %>% filter(CBC%in%c(colnames(cbc_vars)[11:ncol(cbc_vars)])) %>% filter(!CBC%in%c("CBC_PLATE_LBORRES","CBC_PDW_CT_LBORRES")) %>% #View()
  ggplot(aes(x = CBC, y = CBC_measurement,fill = TYPE_VISIT)) +
  #stat_halfeye(adjust = 0.5, justification = -0.1, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = 1, outlier.colour = "black", alpha = 1,color="black",outlier.alpha = 1,outlier.shape =16, outlier.size = 1.9) +
  #stat_dots(side = "right", justification = -0.1, dotsize = 10) +
  labs(x = "", y = "",
      # title = "Distribution of CBC measurement",
       color = "Type of Visit") +
 theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 20),
        axis.text = element_text(color = "black", size = 11,face = "italic"),
        panel.border = element_rect(colour = "black",linewidth = 1),
        legend.position = "bottom",
        legend.text = element_text( face = "italic", color = "black", size = 14),
        legend.title = element_blank()) +
  scale_y_continuous(breaks = seq(0,200,10)) +
  coord_flip()
```

# Visualization of Liver Function Tests

#### Distribution of LFT measurements at Enrollment

```{r}
#| label: fig-lftvar
#| fig-cap: "Visualization of LFT components cont..."
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 7
#| echo: false

# 2. CBC distributions

# CBC_PLATE_LBORRES not included in the plot

# LFT extreme values @ enrollment

#extreme values

extreme_lft_Enrol <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "Enrollment") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>%   mutate_if(is.double,~replace(.,.==-77,NA)) %>%
  mutate_if(is.double,~replace(.,.==-5,NA)) %>% 
  select(MOMID,TYPE_VISIT,AST_ul_LBORRES,	ALT_ul_LBORRES,
         ALP_LBORRES,	TBILIRUBIN_LBORRES,	DBILIRUBIN_LBORRES,	TPROTEIN_LBORRES,
         ALBUMIN_LBORRES, GAMMAGT_LBORRES, IBILIRUBIN_LBORRES) %>% 
  pivot_longer(cols = 3:IBILIRUBIN_LBORRES, names_to = "LFT",values_to = "LFT_measurement") %>%   group_by(LFT) %>% 
  rstatix::identify_outliers(LFT_measurement) %>% ungroup() %>% filter(is.extreme == TRUE) #%>% View()

ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "Enrollment") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>%   mutate_if(is.double,~replace(.,.==-77,NA)) %>%  mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% #View()
  select(MOMID,TYPE_VISIT,AST_ul_LBORRES,	ALT_ul_LBORRES,
         ALP_LBORRES,	TBILIRUBIN_LBORRES,	DBILIRUBIN_LBORRES,	TPROTEIN_LBORRES,
         ALBUMIN_LBORRES, GAMMAGT_LBORRES, IBILIRUBIN_LBORRES) %>% #View()
  pivot_longer(cols = 3:IBILIRUBIN_LBORRES, names_to = "LFT",values_to = "LFT_measurement") %>% 
  filter(complete.cases(LFT_measurement)) %>% #View()
  ggplot(aes(x = LFT, y = LFT_measurement)) +
  # stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "red", fill = c("#C1FFC1"),color="black", alpha = 1, notch = TRUE,
               outlier.shape =16, outlier.size = 1.7,outlier.alpha = 1) +
  # stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "LFT Measurement",
       #title = "Distribution of LFT measurement at Enrollment"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_lft_Enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

#### Distribution of LFT measurements at ANC 32

```{r}
#| label: fig-lft32
#| fig-cap: "Visualization of LFT components cont..."
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 7
#| echo: false
# LFT extreme values @ ANC-32

#extreme values
extreme_lft_anc32 <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "ANC-32") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>%   mutate_if(is.double,~replace(.,.==-77,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID,TYPE_VISIT,AST_ul_LBORRES,	ALT_ul_LBORRES,
         ALP_LBORRES,	TBILIRUBIN_LBORRES,	DBILIRUBIN_LBORRES,	TPROTEIN_LBORRES,
         ALBUMIN_LBORRES, GAMMAGT_LBORRES, IBILIRUBIN_LBORRES) %>% 
  pivot_longer(cols = 3:IBILIRUBIN_LBORRES, names_to = "LFT",values_to = "LFT_measurement") %>%  group_by(LFT) %>% 
  rstatix::identify_outliers(LFT_measurement) %>% ungroup() %>% filter(is.extreme == TRUE) #%>% View()


ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "ANC-32") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>%   mutate_if(is.double,~replace(.,.==-77,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID,TYPE_VISIT,AST_ul_LBORRES,	ALT_ul_LBORRES,
         ALP_LBORRES,	TBILIRUBIN_LBORRES,	DBILIRUBIN_LBORRES,	TPROTEIN_LBORRES,
         ALBUMIN_LBORRES, GAMMAGT_LBORRES, IBILIRUBIN_LBORRES) %>% 
  pivot_longer(cols = 3:IBILIRUBIN_LBORRES, names_to = "LFT",values_to = "LFT_measurement") %>% 
  filter(complete.cases(LFT_measurement)) %>% 
  ggplot(aes(x = LFT, y = LFT_measurement)) +
  # stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = 1,color="black",outlier.shape =16, outlier.size = 1.5,outlier.fill = "darkred",outlier.alpha = 1) +
  # stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "LFT Measurement",
       #title = "Distribution of LFT measurement at ANC-32"
       ) +
  # geom_text(aes(label = MOMID),data = extreme_lft_anc32,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

# Visualization of Kidney function Tests

#### Distribution of KFT measurements at Enrollment

```{r}
#| label: fig-kftvar
#| fig-cap: "Visualization of KFT tests"
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 6
#| echo: false
# KFT values at Enrollment

#extreme values
extreme_kft_enrol <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>%
  filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "Enrollment") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID, SCRN_FAC_SPFY_OBSLOC, BUN_mmoll_LBORRES,CREAT_umoll_LBORRES,
         SODIUM_LBORRES,	POTASSIUM_LBORRES,	CHLORIDE_LBORRES, PHOSPHORUS_LBORRES,	CALCIUM_LBORRES,CARB_DIOX_LBORRES) %>% 
  pivot_longer(cols = 3:CARB_DIOX_LBORRES, names_to = "KFT",values_to = "KFT_measurement")%>%  group_by(KFT) %>% 
  rstatix::identify_outliers(KFT_measurement) %>% ungroup() %>% filter(is.extreme == TRUE) #%>% view()


ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "Enrollment") %>% 
  mutate_if(is.double,~replace(.,.==-7,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID, SCRN_FAC_SPFY_OBSLOC, BUN_mmoll_LBORRES,CREAT_umoll_LBORRES,
         SODIUM_LBORRES,	POTASSIUM_LBORRES,	CHLORIDE_LBORRES, PHOSPHORUS_LBORRES,	CALCIUM_LBORRES,CARB_DIOX_LBORRES) %>% 
  pivot_longer(cols = 3:CARB_DIOX_LBORRES, names_to = "KFT",values_to = "KFT_measurement") %>% 
  filter(complete.cases(KFT_measurement)) %>% 
  ggplot(aes(x = KFT, y = KFT_measurement)) +
  #stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "red", fill = c("#C1FFC1"), alpha = 1,outlier.fill = "red", notch = TRUE,
               color="black",outlier.shape =16, outlier.size = 1.7,outlier.alpha = 1) +
  # stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "KFT Measurement",
       #title = "Distribution of KFT measurement at Enrollment"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

#### Distribution of KFT measurements at ANC 32

```{r}
#| label: fig-kftvar32
#| fig-cap: "Visualization of KFT tests cont..."
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 6
#| echo: false
# KFT values AT anc-32

#extreme values
extreme_kft_anc32 <- ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% 
  filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "ANC-32") %>%
  mutate_if(is.double,~replace(.,.==-7,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID, SCRN_FAC_SPFY_OBSLOC, BUN_mmoll_LBORRES,CREAT_umoll_LBORRES,
         SODIUM_LBORRES,	POTASSIUM_LBORRES,	CHLORIDE_LBORRES, PHOSPHORUS_LBORRES,	CALCIUM_LBORRES,CARB_DIOX_LBORRES) %>% 
  pivot_longer(cols = 3:CARB_DIOX_LBORRES, names_to = "KFT",values_to = "KFT_measurement")%>%  group_by(KFT) %>% 
  rstatix::identify_outliers(KFT_measurement) %>% ungroup() %>% filter(is.extreme == TRUE) #%>% View()

ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>% filter(TYPE_VISIT == "ANC-32") %>%
  mutate_if(is.double,~replace(.,.==-7,NA)) %>% mutate_if(is.numeric,~replace(.,.==-5,NA)) %>% 
  select(MOMID, SCRN_FAC_SPFY_OBSLOC, BUN_mmoll_LBORRES,CREAT_umoll_LBORRES,
         SODIUM_LBORRES,	POTASSIUM_LBORRES,	CHLORIDE_LBORRES, PHOSPHORUS_LBORRES,	CALCIUM_LBORRES,CARB_DIOX_LBORRES) %>% 
  pivot_longer(cols = 3:CARB_DIOX_LBORRES, names_to = "KFT",values_to = "KFT_measurement") %>% 
  filter(complete.cases(KFT_measurement)) %>% 
  ggplot(aes(x = KFT, y = KFT_measurement)) +
  # stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = 1,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  # stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "KFT Measurement",
      # title = "Distribution of KFT measurement at ANC-32"
       ) +
  # geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

# Distribution of HB Point of Care Measurement

```{r}
#| label: hbpocmsr
#| fig-cap: "Visualization of HB poc."
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 6
#| echo: false
# Distribution of HB Point of Care

ALL_PRiSMA %>% filter(complete.cases(MOMID)) %>% filter(complete.cases(HB_POC_LBORRES)) %>% 
  filter(!TYPE_VISIT%in%c("ANC Non-scheduled visit","PNC Non-scheduled visit")) %>% 
  select(MOMID,TYPE_VISIT,HB_POC_LBORRES) %>% 
  ggplot(aes(x=TYPE_VISIT,y=HB_POC_LBORRES)) +
  geom_boxplot(width = .6, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = .6,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  #stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#8B7500"), alpha = 0.4) + 
  labs(x = "", y = "HB Point of Care",
       #title = "Distribution of HB Point of Care"
       ) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

# Visualizing UltraSound measurements

### US at Enrollment

```{r}
#| label: usvars
#| fig-cap: "Visualization of US measurements"
#| warning: false
#| column: screen-inset-right
#| fig-width: 18
#| fig-height: 8
#| echo: false
Us_var <- ALL_PRiSMA %>% drop_na(MOMID) %>% select(contains("fts")) %>%  select_if(is.numeric) %>%
  mutate_if(is.numeric,~replace(.,.==77,NA)) %>% mutate_if(is.numeric,~replace(.,.==-7,NA)) %>% remove_empty() %>% colnames()

us_transfmd <- ALL_PRiSMA %>% select(MOMID,TYPE_VISIT,all_of(Us_var)) %>% filter(TYPE_VISIT%in%c("Enrollment","ANC-32")) %>%
  select(MOMID,TYPE_VISIT,contains("res")) %>% select(MOMID,TYPE_VISIT,contains("fts1")) %>% 
  rename(`fetal heart rate` = FHR_VSORRES_FTS1,
         `Amniotic FI:1st Q:cm` = AFI_PERES_FTS1_Q1,
         `Amniotic FI:2nd Q:cm` = AFI_PERES_FTS1_Q2,
         `Amniotic FI:3rd Q:cm`= AFI_PERES_FTS1_Q3,
         `Amniotic FI:4th Q:cm` = AFI_PERES_FTS1_Q4,
         `Crown-rump length` = CRL_PERES_01_FTS1,
         `Crown-rump length: mean` = CRL_PERES_MEAN_FTS1,
         `Biparietal Diameter` = BPD_PERES_FTS1,
         `Biparietal Diameter:mean` = BPD_PERES_MEAN_FTS1,
         `Head Circumference` = HC_PERES_FTS1,
         `Head Circumference:mean` = HC_PERES_MEAN_FTS1,
         `Abdominal Circumference` = AC_PERES_FTS1,
         `Abdominal Circumference:mean`= AC_PERES_MEAN_FTS1,
         `Femur Length` = FL_PERES_FTS1,
         `Femur Length:mean` = FL_PERES_MEAN_FTS1,
         `Transcerebellar diameter` = TCD_PERES_01_FTS1,
         `Transcerebellar diameter:mean`= TCD_PERES_MEAN_FTS1,
         `Estimated fetal weight` = EFW_PERES_01_FTS1) %>% 
  pivot_longer(cols = `fetal heart rate`:`Estimated fetal weight`, names_to = "US_vars",values_to = "US_measurement")%>% 
  filter(complete.cases(US_measurement))  


# Mapping out at Enrollment

us_transfmd %>% filter(TYPE_VISIT == "Enrollment") %>% filter(!US_vars%in%c("Estimated fetal weight","fetal heart rate")) %>% 
  ggplot(aes(x = US_vars, y = US_measurement)) +
  # stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = .6,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  # stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "US Measurement",
      # title = "Distribution of UltraSound measurement at Enrollment"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

### US measurements at ANC 32

```{r}
#| label: usvars32
#| fig-cap: "Visualization of US measurements at ANC 32"
#| warning: false
#| column: body-outset
#| fig-width: 18
#| fig-height: 8
#| echo: false
# Mapping out at ANC-32

us_transfmd %>% filter(TYPE_VISIT == "ANC-32")%>% filter(!US_vars%in%c("Estimated fetal weight","fetal heart rate")) %>% #filter(US_vars =="Femur Length:mean") %>%  View()
  ggplot(aes(x = US_vars, y = US_measurement,fill =US_vars)) +
  #stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .6, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = 1,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  #stat_dots(side = "left", justification = 1.1, dotsize = 0.5) +
  labs(x = "", y = "US Measurement",
       #title = "Distribution of UltraSound measurement at ANC-32"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        panel.border = element_rect(colour = "black",linewidth = .8),
        axis.title =  element_text( face = "italic", color = "black", size = 16),
        axis.text = element_text(color = "black", size = 11,face = "italic")) +
  scale_y_continuous(breaks = seq(0,500,20)) +
  coord_flip()
```

### Estimated fetal weight at ANC 32

```{r}
#| label: usvarsFW
#| fig-cap: "Visualization of Fetal Weight measurements"
#| warning: false
#| column: body-outset
#| fig-width: 18
#| fig-height: 5
#| echo: false
# Estimated fetal weight"

# Mapping out at ANC-32

us_transfmd  %>% filter(US_vars%in%c("Estimated fetal weight")) %>% #View()
  ggplot(aes(x = US_vars, y = US_measurement)) +
  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .12, outlier.colour = "darkred", fill = c("#C1FFC1"), notch = TRUE,
               alpha = 1,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  stat_dots(side = "left", justification = 1.1, dotsize = 0.3) +
  labs(x = NULL, y = NULL,
      # title = "Distribution of Estimated fetal weight"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 22),
        axis.title =  element_text( face = "bold", color = "black", size = 20),
        axis.text = element_text( color = "black", size = 12)) +
  scale_y_continuous(breaks = seq(0,8000,200)) +
  coord_flip()
```

### Estimated fetal Heart Rate at ANC 32

```{r}
#| label: usvarFHR
#| fig-cap: "Visualization of Fetal Heart Rate"
#| warning: false
#| column: body-outset
#| fig-width: 18 
#| fig-height: 7
#| echo: false
# fetal heart rate

# Mapping out at ANC-32

us_transfmd  %>% filter(US_vars%in%c("fetal heart rate")) %>% 
  ggplot(aes(x = US_vars, y = US_measurement)) +
  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA, fill = c("#FFA500"), alpha = 0.6) +
  geom_boxplot(width = .12, outlier.colour = "darkred", fill = c("#C1FFC1"), 
               alpha = 1,color="black",outlier.shape =16, outlier.size = 1.9,outlier.fill = "darkred",outlier.alpha = 1) +
  stat_dots(side = "left", justification = 1.1, dotsize = 0.3) +
  labs(x = NULL, y = NULL,
      # title = "Distribution of fetal heart rate"
       ) +
  #geom_text(aes(label = MOMID),data = extreme_kft_enrol,angle = 40, vjust = 0) +
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "black",size = 25),
        axis.title =  element_text( face = "bold", color = "black", size = 25),
        axis.text = element_text( color = "black", size = 12)) +
  scale_y_continuous(breaks = seq(0,500,5)) +
  coord_flip() 

```

<br> <br> <br>

<p style="text-align: center;">

[**This marks the END of PRISMA report.**]{style="color: blue;"}

</p>

<p style="text-align: center;">

[*FHU Statistics Team.*]{style="color: #8B3A3A;"}

</p>
